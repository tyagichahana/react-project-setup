{"ast":null,"code":"import _defineProperty from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chahanatyagi/Work/cm-frontend/src/pages/EmailCampaign/components/steps/step3.js\";\nimport React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport WrapComponents from '@/components/wrapper';\nimport ConnectComponent from '@/connect';\nimport { ColoredButtons, TransparentButtons } from '@/components/button';\nimport { SmallHeading } from '@/components/headings';\nimport { Radio } from '@/components/radio';\nimport Stepper from '@/components/stepper';\nimport { UpdateCampaignData, GetCampaign } from '@/actions/CreateCampaign/emailCampaign';\nimport './index.scss';\n\nvar StepThree =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StepThree, _Component);\n\n  function StepThree() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StepThree);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StepThree)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      campaign_id: '',\n      steps: ['Channel', 'Message', 'Scheduling', 'Segmentation', 'Overview & Send'],\n      schedule: false,\n      now: true,\n      scheduledTime: new Date(),\n      selectedDate: '',\n      selectDateError: false\n    };\n\n    _this.handleContinue = function () {\n      var _this$state = _this.state,\n          scheduledTime = _this$state.scheduledTime,\n          campaign_id = _this$state.campaign_id;\n      UpdateCampaignData({\n        scheduledTime: scheduledTime.toJSON(),\n        campaign_id: campaign_id,\n        next: 'step-4'\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(StepThree, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var campaign_id = this.props.match.params.campaign_id;\n      this.setState({\n        campaign_id: campaign_id\n      });\n\n      if (!this.props.CreateCampaign.data) {\n        GetCampaign(campaign_id);\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(date) {\n      this.setState({\n        scheduledTime: date\n      });\n    }\n  }, {\n    key: \"handleInputFields\",\n    value: function handleInputFields(key, value) {\n      if (!value) {\n        this.setState(_defineProperty({}, key, value));\n      } else {\n        this.setState(_defineProperty({}, key, value));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          steps = _this$state2.steps,\n          schedule = _this$state2.schedule,\n          now = _this$state2.now;\n      var CreateCampaign = this.props.CreateCampaign;\n      return React.createElement(WrapComponents, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Stepper, {\n        steps: steps,\n        activeStep: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"section-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"section \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Start the Campaign\"), React.createElement(Radio, {\n        checked: now,\n        onClick: function onClick() {\n          return _this2.setState({\n            now: !now,\n            schedule: !schedule\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Now\"), React.createElement(Radio, {\n        checked: schedule,\n        onClick: function onClick() {\n          return _this2.setState({\n            now: !now,\n            schedule: !schedule\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Send at a specific time\"), schedule && React.createElement(\"div\", {\n        className: \"datepicker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        timeIntervals: 1,\n        selected: this.state.scheduledTime,\n        onSelect: this.handleSelect,\n        onChange: function onChange(date) {\n          return _this2.handleChange(date);\n        },\n        showTimeSelect: true,\n        timeFormat: \"HH:mm\",\n        dateFormat: \"MMMM d, yyyy h:mm aa\",\n        timeCaption: \"Time\",\n        peekNextMonth: true,\n        showMonthDropdown: true,\n        showYearDropdown: true,\n        dropdownMode: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }))), React.createElement(ColoredButtons, {\n        onClick: this.handleContinue,\n        className: \"float\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Continue\"), React.createElement(TransparentButtons, {\n        onClick: function onClick() {\n          return _this2.props.history.goBack();\n        },\n        className: \"float grey-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Go Back\")), CreateCampaign.error && React.createElement(\"div\", {\n        className: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, CreateCampaign.error)));\n    }\n  }]);\n\n  return StepThree;\n}(Component);\n\nexport default ConnectComponent(StepThree);","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/pages/EmailCampaign/components/steps/step3.js"],"names":["React","Component","DatePicker","WrapComponents","ConnectComponent","ColoredButtons","TransparentButtons","SmallHeading","Radio","Stepper","UpdateCampaignData","GetCampaign","StepThree","state","campaign_id","steps","schedule","now","scheduledTime","Date","selectedDate","selectDateError","handleContinue","toJSON","next","props","match","params","setState","CreateCampaign","data","date","key","value","handleSelect","handleChange","history","goBack","error"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport WrapComponents from '@/components/wrapper'\nimport ConnectComponent from '@/connect'\nimport { ColoredButtons, TransparentButtons } from '@/components/button'\nimport { SmallHeading } from '@/components/headings'\nimport { Radio } from '@/components/radio'\nimport Stepper from '@/components/stepper'\nimport { UpdateCampaignData, GetCampaign } from '@/actions/CreateCampaign/emailCampaign'\nimport './index.scss'\n\nclass StepThree extends Component {\n    state = {\n        campaign_id: '',\n        steps: ['Channel', 'Message', 'Scheduling', 'Segmentation', 'Overview & Send'],\n        schedule: false,\n        now: true,\n        scheduledTime: new Date(),\n        selectedDate: '',\n        selectDateError: false,\n    }\n\n    componentWillMount() {\n        const {\n            params: { campaign_id },\n        } = this.props.match\n        this.setState({\n            campaign_id,\n        })\n        if (!this.props.CreateCampaign.data) {\n            GetCampaign(campaign_id)\n        }\n    }\n\n    handleChange(date) {\n        this.setState({\n            scheduledTime: date,\n        })\n    }\n\n    handleContinue = () => {\n        const { scheduledTime, campaign_id } = this.state\n        UpdateCampaignData({ scheduledTime: scheduledTime.toJSON(), campaign_id, next: 'step-4' })\n    }\n\n    handleInputFields(key, value) {\n        if (!value) {\n            this.setState({\n                [key]: value,\n            })\n        } else {\n            this.setState({\n                [key]: value,\n            })\n        }\n    }\n\n    render() {\n        const { steps, schedule, now } = this.state\n        const { CreateCampaign } = this.props\n        return (\n            <WrapComponents>\n                <Stepper steps={steps} activeStep={2} />\n                <div>\n                    <div className=\"section-left\">\n                        <div className=\"section \">\n                            <SmallHeading>Start the Campaign</SmallHeading>\n                            <Radio\n                                checked={now}\n                                onClick={() => this.setState({ now: !now, schedule: !schedule })}\n                            >\n                                Now\n                            </Radio>\n                            <Radio\n                                checked={schedule}\n                                onClick={() => this.setState({ now: !now, schedule: !schedule })}\n                            >\n                                Send at a specific time\n                            </Radio>\n                            {schedule && (\n                                <div className=\"datepicker\">\n                                    <DatePicker\n                                        timeIntervals={1}\n                                        selected={this.state.scheduledTime}\n                                        onSelect={this.handleSelect}\n                                        onChange={date => this.handleChange(date)}\n                                        showTimeSelect\n                                        timeFormat=\"HH:mm\"\n                                        dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                        timeCaption=\"Time\"\n                                        peekNextMonth\n                                        showMonthDropdown\n                                        showYearDropdown\n                                        dropdownMode=\"select\"\n                                    />\n                                </div>\n                            )}\n                        </div>\n                        {/* <div className=\"section\">Show Count</div> */}\n                        <ColoredButtons onClick={this.handleContinue} className=\"float\">\n                            Continue\n                        </ColoredButtons>\n                        <TransparentButtons\n                            onClick={() => this.props.history.goBack()}\n                            className=\"float grey-border\"\n                        >\n                            Go Back\n                        </TransparentButtons>\n                    </div>\n                    {CreateCampaign.error && <div className=\"alert\">{CreateCampaign.error}</div>}\n                </div>\n            </WrapComponents>\n        )\n    }\n}\n\nexport default ConnectComponent(StepThree)\n"]},"metadata":{},"sourceType":"module"}