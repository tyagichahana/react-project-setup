{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction helpers() {\n  var data = _interopRequireWildcard(require(\"@babel/helpers\"));\n\n  helpers = function helpers() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _traverse() {\n  var data = _interopRequireWildcard(require(\"@babel/traverse\"));\n\n  _traverse = function _traverse() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _codeFrame() {\n  var data = require(\"@babel/code-frame\");\n\n  _codeFrame = function _codeFrame() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction t() {\n  var data = _interopRequireWildcard(require(\"@babel/types\"));\n\n  t = function t() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _semver() {\n  var data = _interopRequireDefault(require(\"semver\"));\n\n  _semver = function _semver() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nvar errorVisitor = {\n  enter: function enter(path, state) {\n    var loc = path.node.loc;\n\n    if (loc) {\n      state.loc = loc;\n      path.stop();\n    }\n  }\n};\n\nvar File =\n/*#__PURE__*/\nfunction () {\n  function File(options, _ref) {\n    var _this = this;\n\n    var code = _ref.code,\n        ast = _ref.ast,\n        inputMap = _ref.inputMap;\n\n    _classCallCheck(this, File);\n\n    this._map = new Map();\n    this.declarations = {};\n    this.path = null;\n    this.ast = {};\n    this.metadata = {};\n    this.code = \"\";\n    this.inputMap = null;\n    this.hub = {\n      file: this,\n      getCode: function getCode() {\n        return _this.code;\n      },\n      getScope: function getScope() {\n        return _this.scope;\n      },\n      addHelper: this.addHelper.bind(this),\n      buildError: this.buildCodeFrameError.bind(this)\n    };\n    this.opts = options;\n    this.code = code;\n    this.ast = ast;\n    this.inputMap = inputMap;\n    this.path = _traverse().NodePath.get({\n      hub: this.hub,\n      parentPath: null,\n      parent: this.ast,\n      container: this.ast,\n      key: \"program\"\n    }).setContext();\n    this.scope = this.path.scope;\n  }\n\n  _createClass(File, [{\n    key: \"set\",\n    value: function set(key, val) {\n      if (key === \"helpersNamespace\") {\n        throw new Error(\"Babel 7.0.0-beta.56 has dropped support for the 'helpersNamespace' utility.\" + \"If you are using @babel/plugin-external-helpers you will need to use a newer \" + \"version than the one you currently have installed. \" + \"If you have your own implementation, you'll want to explore using 'helperGenerator' \" + \"alongside 'file.availableHelper()'.\");\n      }\n\n      this._map.set(key, val);\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this._map.get(key);\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this._map.has(key);\n    }\n  }, {\n    key: \"getModuleName\",\n    value: function getModuleName() {\n      var _this$opts = this.opts,\n          filename = _this$opts.filename,\n          _this$opts$filenameRe = _this$opts.filenameRelative,\n          filenameRelative = _this$opts$filenameRe === void 0 ? filename : _this$opts$filenameRe,\n          moduleId = _this$opts.moduleId,\n          _this$opts$moduleIds = _this$opts.moduleIds,\n          moduleIds = _this$opts$moduleIds === void 0 ? !!moduleId : _this$opts$moduleIds,\n          getModuleId = _this$opts.getModuleId,\n          sourceRootTmp = _this$opts.sourceRoot,\n          _this$opts$moduleRoot = _this$opts.moduleRoot,\n          moduleRoot = _this$opts$moduleRoot === void 0 ? sourceRootTmp : _this$opts$moduleRoot,\n          _this$opts$sourceRoot = _this$opts.sourceRoot,\n          sourceRoot = _this$opts$sourceRoot === void 0 ? moduleRoot : _this$opts$sourceRoot;\n      if (!moduleIds) return null;\n\n      if (moduleId != null && !getModuleId) {\n        return moduleId;\n      }\n\n      var moduleName = moduleRoot != null ? moduleRoot + \"/\" : \"\";\n\n      if (filenameRelative) {\n        var sourceRootReplacer = sourceRoot != null ? new RegExp(\"^\" + sourceRoot + \"/?\") : \"\";\n        moduleName += filenameRelative.replace(sourceRootReplacer, \"\").replace(/\\.(\\w*?)$/, \"\");\n      }\n\n      moduleName = moduleName.replace(/\\\\/g, \"/\");\n\n      if (getModuleId) {\n        return getModuleId(moduleName) || moduleName;\n      } else {\n        return moduleName;\n      }\n    }\n  }, {\n    key: \"addImport\",\n    value: function addImport() {\n      throw new Error(\"This API has been removed. If you're looking for this \" + \"functionality in Babel 7, you should import the \" + \"'@babel/helper-module-imports' module and use the functions exposed \" + \" from that module, such as 'addNamed' or 'addDefault'.\");\n    }\n  }, {\n    key: \"availableHelper\",\n    value: function availableHelper(name, versionRange) {\n      var minVersion;\n\n      try {\n        minVersion = helpers().minVersion(name);\n      } catch (err) {\n        if (err.code !== \"BABEL_HELPER_UNKNOWN\") throw err;\n        return false;\n      }\n\n      if (typeof versionRange !== \"string\") return true;\n      if (_semver().default.valid(versionRange)) versionRange = \"^\".concat(versionRange);\n      return !_semver().default.intersects(\"<\".concat(minVersion), versionRange) && !_semver().default.intersects(\">=8.0.0\", versionRange);\n    }\n  }, {\n    key: \"addHelper\",\n    value: function addHelper(name) {\n      var _this2 = this;\n\n      var declar = this.declarations[name];\n      if (declar) return t().cloneNode(declar);\n      var generator = this.get(\"helperGenerator\");\n\n      if (generator) {\n        var res = generator(name);\n        if (res) return res;\n      }\n\n      var uid = this.declarations[name] = this.scope.generateUidIdentifier(name);\n      var dependencies = {};\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = helpers().getDependencies(name)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var dep = _step.value;\n          dependencies[dep] = this.addHelper(dep);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var _helpers$get = helpers().get(name, function (dep) {\n        return dependencies[dep];\n      }, uid, Object.keys(this.scope.getAllBindings())),\n          nodes = _helpers$get.nodes,\n          globals = _helpers$get.globals;\n\n      globals.forEach(function (name) {\n        if (_this2.path.scope.hasBinding(name, true)) {\n          _this2.path.scope.rename(name);\n        }\n      });\n      nodes.forEach(function (node) {\n        node._compact = true;\n      });\n      this.path.unshiftContainer(\"body\", nodes);\n      this.path.get(\"body\").forEach(function (path) {\n        if (nodes.indexOf(path.node) === -1) return;\n        if (path.isVariableDeclaration()) _this2.scope.registerDeclaration(path);\n      });\n      return uid;\n    }\n  }, {\n    key: \"addTemplateObject\",\n    value: function addTemplateObject() {\n      throw new Error(\"This function has been moved into the template literal transform itself.\");\n    }\n  }, {\n    key: \"buildCodeFrameError\",\n    value: function buildCodeFrameError(node, msg) {\n      var Error = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : SyntaxError;\n      var loc = node && (node.loc || node._loc);\n      msg = \"\".concat(this.opts.filename, \": \").concat(msg);\n\n      if (!loc && node) {\n        var state = {\n          loc: null\n        };\n        (0, _traverse().default)(node, errorVisitor, this.scope, state);\n        loc = state.loc;\n        var txt = \"This is an error on an internal node. Probably an internal error.\";\n        if (loc) txt += \" Location has been estimated.\";\n        msg += \" (\".concat(txt, \")\");\n      }\n\n      if (loc) {\n        var _this$opts$highlightC = this.opts.highlightCode,\n            highlightCode = _this$opts$highlightC === void 0 ? true : _this$opts$highlightC;\n        msg += \"\\n\" + (0, _codeFrame().codeFrameColumns)(this.code, {\n          start: {\n            line: loc.start.line,\n            column: loc.start.column + 1\n          }\n        }, {\n          highlightCode: highlightCode\n        });\n      }\n\n      return new Error(msg);\n    }\n  }, {\n    key: \"shebang\",\n    get: function get() {\n      var interpreter = this.path.node.interpreter;\n      return interpreter ? interpreter.value : \"\";\n    },\n    set: function set(value) {\n      if (value) {\n        this.path.get(\"interpreter\").replaceWith(t().interpreterDirective(value));\n      } else {\n        this.path.get(\"interpreter\").remove();\n      }\n    }\n  }]);\n\n  return File;\n}();\n\nexports.default = File;","map":null,"metadata":{},"sourceType":"script"}