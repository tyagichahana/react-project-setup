{"ast":null,"code":"import _defineProperty from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chahanatyagi/Work/cm-frontend/src/pages/Login/index.jsx\";\nimport React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport connectComponent from '../../connect';\nimport { ColoredButtons, TransparentButtons } from '@/components/button';\nimport Loader from '@/components/loader';\nimport { loginAction } from '../../actions/User';\nimport './index.scss';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: '',\n      password: '',\n      EmailErrors: '',\n      PasswordErrors: '',\n      errors: ''\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.validateForm()) {\n        //this is just to show the flow\n        var _this$state = _this.state,\n            email = _this$state.email,\n            password = _this$state.password,\n            EmailErrors = _this$state.EmailErrors,\n            redirect = _this$state.redirect,\n            PasswordErrors = _this$state.PasswordErrors;\n        var params = {\n          email: email,\n          password: password,\n          PasswordErrors: PasswordErrors,\n          EmailErrors: EmailErrors\n        };\n        loginAction(params);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        state: state\n      });\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      var isValid = true;\n\n      if (!this.state.email) {\n        this.setState({\n          EmailErrors: 'Email cannot be empty'\n        });\n        isValid = false;\n      } else {\n        this.setState({\n          EmailErrors: ''\n        });\n      }\n\n      if (!this.state.password) {\n        this.setState({\n          PasswordErrors: 'Password cannot be empty'\n        });\n        isValid = false;\n      } else {\n        this.setState({\n          PasswordErrors: ''\n        });\n      }\n\n      return isValid;\n    }\n  }, {\n    key: \"handleInputFields\",\n    value: function handleInputFields(key, value) {\n      if (!value) {\n        var _this$setState;\n\n        this.setState((_this$setState = {}, _defineProperty(_this$setState, key, value), _defineProperty(_this$setState, \"errors\", 'Fields are empty'), _this$setState));\n      } else {\n        this.setState(_defineProperty({}, key, value));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          EmailErrors = _this$state2.EmailErrors,\n          PasswordErrors = _this$state2.PasswordErrors;\n      var _this$props$login = this.props.login,\n          error = _this$props$login.error,\n          loading = _this$props$login.loading,\n          redirect = _this$props$login.redirect;\n\n      if (loading) {\n        return React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n      }\n\n      if (redirect) {\n        return React.createElement(Redirect, {\n          to: \"/campaign\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"toko-im-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"content-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"im-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"welcome\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wl-b\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Welcome Back to\"), React.createElement(\"div\", {\n        className: \"im-d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"IM Dashboard\"), React.createElement(TransparentButtons, {\n        as: \"link\",\n        to: \"/learn-more\",\n        className: \"learn-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Learn More\")))), React.createElement(\"div\", {\n        className: \"right-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"right-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/sms\",\n        className: \"header-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"SMS\"), React.createElement(Link, {\n        to: \"/push-notification\",\n        className: \"header-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Push Notification\"), React.createElement(Link, {\n        to: \"/web-popup\",\n        className: \"header-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Web Pop Up\"), React.createElement(Link, {\n        to: \"/email\",\n        className: \"header-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"eMail\")), React.createElement(\"div\", {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Please login to your account\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, error && React.createElement(\"div\", {\n        className: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, error), EmailErrors && React.createElement(\"div\", {\n        className: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, EmailErrors), React.createElement(\"input\", {\n        placeholder: \"Email\",\n        type: \"text\",\n        className: \"form-input\",\n        name: \"email\",\n        value: this.state.email,\n        onChange: function onChange(e) {\n          return _this2.handleInputFields('email', e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), PasswordErrors && React.createElement(\"div\", {\n        className: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, PasswordErrors), React.createElement(\"input\", {\n        placeholder: \"Password\",\n        type: \"password\",\n        className: \"form-input\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: function onChange(e) {\n          return _this2.handleInputFields('password', e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"flex mrgn-btm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"checkbox\",\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"Ingat-Saya\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Ingat-Saya\")), React.createElement(\"span\", {\n        className: \"Lupa-Kata-Sandi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/forgot-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Lupa Kata Sandi?\"))), React.createElement(ColoredButtons, {\n        type: \"submit\",\n        className: \"mrgn-btm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Masuk ke Dashboard\"), React.createElement(TransparentButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"ggl-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Masuk dengan Google\"))))))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default connectComponent(Login);","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/pages/Login/index.jsx"],"names":["React","Component","Link","Redirect","connectComponent","ColoredButtons","TransparentButtons","Loader","loginAction","Login","state","email","password","EmailErrors","PasswordErrors","errors","onSubmit","e","preventDefault","validateForm","redirect","params","setState","isValid","key","value","props","login","error","loading","handleInputFields","target"],"mappings":"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","sourcesContent":["import React,{ Component } from 'react';\nimport {Link,Redirect} from 'react-router-dom'\nimport connectComponent from '../../connect'\nimport {ColoredButtons,TransparentButtons} from '@/components/button'\nimport Loader from '@/components/loader'\nimport {loginAction} from '../../actions/User'\nimport './index.scss'\n\nclass Login extends Component{\n    state = {\n        email: '',\n        password: '',\n        EmailErrors: '',\n        PasswordErrors:'',\n        errors:'',\n    }\n    componentWillMount(){\n        this.setState({state:state})\n    }\n    validateForm() {\n        let isValid = true\n        if (!this.state.email) {\n            this.setState({\n                EmailErrors: 'Email cannot be empty',\n            })\n            isValid = false\n        } else {\n            this.setState({\n                EmailErrors: '',\n            })\n        }\n        if (!this.state.password) {\n            this.setState({\n                PasswordErrors: 'Password cannot be empty',\n            })\n            isValid = false\n        } else {\n            this.setState({\n                PasswordErrors: '',\n            })\n        }\n        return isValid\n    }\n\n    onSubmit = e => {\n        e.preventDefault()\n        if (this.validateForm()) {\n            //this is just to show the flow\n            const { email, password,EmailErrors,redirect,PasswordErrors } = this.state\n            const params = {\n                email,\n                password,\n                PasswordErrors,\n                EmailErrors,\n            }\n            loginAction(params)\n        }\n    }\n\n    handleInputFields(key, value) {\n        if (!value) {\n            this.setState({\n                [key]: value,\n                errors: 'Fields are empty',\n            })\n        } else {\n            this.setState({\n                [key]: value,\n            })\n        }\n    }\n\n    render(){\n        const{EmailErrors,PasswordErrors}=this.state\n        const{error,loading,redirect}=this.props.login\n        if(loading){return(<Loader/>)}\n        if(redirect){return(<Redirect to=\"/campaign\"/>)}\n        return(\n            <div>\n                <div className=\"content\">\n                    <div className=\"left-content\">\n                        <div className=\"left-header\"><div className=\"toko-im-logo\"/></div>\n                        <div className=\"content-left\">\n                            <div className=\"im-image\"/>\n                            <div className=\"welcome\">\n                                <div className=\"wl-b\">Welcome Back to</div>\n                                <div className=\"im-d\">IM Dashboard</div>\n                                <TransparentButtons as=\"link\" to=\"/learn-more\" className=\"learn-btn\">Learn More</TransparentButtons>\n\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"right-content\">\n                        <div className=\"right-header\">\n                            <Link  to=\"/sms\" className=\"header-menu\">SMS</Link>\n                            <Link to=\"/push-notification\" className=\"header-menu\">Push Notification</Link>\n                            <Link  to=\"/web-popup\" className=\"header-menu\">Web Pop Up</Link>\n                            <Link to=\"/email\" className=\"header-menu\">eMail</Link>\n                        </div>\n                        <div className=\"form\">\n                            <div className=\"form-content\">\n                                <div className=\"form-heading\">Please login to your account</div>\n                                    <form  onSubmit={this.onSubmit} className=\"login-form\">\n                                    {error && <div className=\"alert\">{error}</div>}\n                                    {EmailErrors &&<div className=\"alert\">{EmailErrors}</div>}\n                                        <input \n                                            placeholder=\"Email\"\n                                            type=\"text\"\n                                            className=\"form-input\"\n                                            name=\"email\"\n                                            value={this.state.email}\n                                            onChange={e => this.handleInputFields('email', e.target.value)}\n                                        />\n                                        {PasswordErrors &&<div className=\"alert\">{PasswordErrors}</div>}\n                                        <input\n                                            placeholder=\"Password\"\n                                            type=\"password\"\n                                            className=\"form-input\"\n                                            name=\"password\"\n                                            value={this.state.password}\n                                            onChange={e => this.handleInputFields('password', e.target.value)}\n                                        />\n                                        <div className=\"flex mrgn-btm\">\n                                            <span><input className=\"checkbox\" type=\"checkbox\"/>\n                                            <span className=\"Ingat-Saya\">Ingat-Saya</span>\n                                            </span>\n                                            <span className=\"Lupa-Kata-Sandi\"><Link to=\"/forgot-password\">Lupa Kata Sandi?</Link></span>\n                                        </div>\n                                        <ColoredButtons  type=\"submit\" className=\"mrgn-btm\">Masuk ke Dashboard</ColoredButtons>\n                                        <TransparentButtons><span className=\"ggl-icon\"/><span>Masuk dengan Google</span></TransparentButtons>\n                                    </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default connectComponent(Login);\n"]},"metadata":{},"sourceType":"module"}