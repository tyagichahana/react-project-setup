{"ast":null,"code":"import _defineProperty from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chahanatyagi/Work/cm-frontend/src/pages/SMSCampaign/Components/steps/step1.js\";\nimport React, { Component } from 'react';\nimport Stepper from '@/components/stepper';\nimport WrapComponents from '@/components/wrapper';\nimport { Radio } from '@/components/radio';\nimport Alert from '@/components/alert';\nimport Loader from '@/components/loader';\nimport ConnectComponent from '../../../../connect';\nimport { ColoredButtons, TransparentButtons } from '@/components/button';\nimport { SmallHeading } from '@/components/headings/index';\nimport { CreateSMSCampaignAction } from '@/actions/CreateCampaign/emailCampaign';\nimport { createParentId } from '@/actions/utils';\nimport EmojiInput from './inputwithEmoji';\n\nvar StepOne =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StepOne, _Component);\n\n  function StepOne() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StepOne);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StepOne)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      steps: ['Channel', 'Message', 'Scheduling', 'Segmentation', 'Overview'],\n      smsCampaign: true,\n      name: '',\n      NameError: false,\n      source: 'toko-cm',\n      deviceType: 'sms',\n      campaignType: 'general',\n      senderName: 'Tokopedia'\n    };\n\n    _this.handleContinue = function () {\n      var name = _this.state.name;\n      var anyError = false;\n\n      if (name === '') {\n        _this.setState({\n          NameError: true\n        });\n\n        anyError = true;\n      }\n\n      if (!anyError) {\n        var _this$state = _this.state,\n            steps = _this$state.steps,\n            smsCampaign = _this$state.smsCampaign,\n            NameError = _this$state.NameError,\n            rest = _objectWithoutProperties(_this$state, [\"steps\", \"smsCampaign\", \"NameError\"]);\n\n        var parentID = _this.props.CreateCampaign.data.parentID;\n        CreateSMSCampaignAction(_objectSpread({\n          parentID: parentID\n        }, rest, {\n          next: 'step-2'\n        }));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(StepOne, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var search, campaignId;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                search = this.props.location.search;\n                campaignId = null;\n\n                if (search && search.indexOf('id=') > -1) {\n                  campaignId = search.split('id=')[1];\n                }\n\n                this.setState({\n                  campaignId: campaignId\n                });\n\n                if (!campaignId) {\n                  createParentId();\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"handleInputFields\",\n    value: function handleInputFields(key, value) {\n      this.setState(_defineProperty({}, key, value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          steps = _this$state2.steps,\n          name = _this$state2.name,\n          NameError = _this$state2.NameError,\n          smsCampaign = _this$state2.smsCampaign;\n      var _this$props$CreateCam = this.props.CreateCampaign,\n          error = _this$props$CreateCam.error,\n          loading = _this$props$CreateCam.loading;\n\n      if (loading) {\n        return React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(WrapComponents, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Stepper, {\n        steps: steps,\n        activeStep: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), error && React.createElement(Alert, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, error), NameError && React.createElement(Alert, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Error: Name is required\"), React.createElement(\"div\", {\n        className: \"mrgn-btm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Channel :\"), React.createElement(\"span\", {\n        style: {\n          color: '#6cae53'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"SMS\")), React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Campaign Name*\"), React.createElement(EmojiInput, {\n        placeholder: \"Enter Campaign Name\",\n        type: \"text\",\n        className: \"form-input\",\n        name: \"name\",\n        value: message,\n        onChange: function onChange(e) {\n          return _this2.handleInputFields('name', e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        placeholder: \"Enter Campaign Name\",\n        type: \"text\",\n        className: \"form-input\",\n        name: \"name\",\n        value: name,\n        onChange: function onChange(e) {\n          return _this2.handleInputFields('name', e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"SMS Type\"), React.createElement(Radio, {\n        checked: smsCampaign,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"SMS Campaign\"), React.createElement(\"h5\", {\n        className: \"mrgn-top-15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Create campaigns to transfer data to external APIs. You can use Connectors to send message via other channels (SMS, Facebook messages), post user action data to owned/3rd Party Analytics systems and sending audiences to Ad Networks etc.\")), React.createElement(ColoredButtons, {\n        onClick: this.handleContinue,\n        className: \"float\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Continue\"), React.createElement(TransparentButtons, {\n        onClick: function onClick() {\n          return _this2.props.history.goBack();\n        },\n        className: \"float grey-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Go Back\"));\n    }\n  }]);\n\n  return StepOne;\n}(Component);\n\nexport default ConnectComponent(StepOne);","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/pages/SMSCampaign/Components/steps/step1.js"],"names":["React","Component","Stepper","WrapComponents","Radio","Alert","Loader","ConnectComponent","ColoredButtons","TransparentButtons","SmallHeading","CreateSMSCampaignAction","createParentId","EmojiInput","StepOne","state","steps","smsCampaign","name","NameError","source","deviceType","campaignType","senderName","handleContinue","anyError","setState","rest","parentID","props","CreateCampaign","data","next","search","location","campaignId","indexOf","split","key","value","error","loading","color","message","e","handleInputFields","target","history","goBack"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Stepper from '@/components/stepper'\nimport WrapComponents from '@/components/wrapper'\nimport { Radio } from '@/components/radio'\nimport Alert from '@/components/alert'\nimport Loader from '@/components/loader'\nimport ConnectComponent from '../../../../connect'\nimport { ColoredButtons, TransparentButtons } from '@/components/button'\nimport { SmallHeading } from '@/components/headings/index'\nimport { CreateSMSCampaignAction } from '@/actions/CreateCampaign/emailCampaign'\nimport { createParentId } from '@/actions/utils'\nimport EmojiInput from './inputwithEmoji'\n\nclass StepOne extends Component {\n    state = {\n        steps: ['Channel', 'Message', 'Scheduling', 'Segmentation', 'Overview'],\n        smsCampaign: true,\n        name: '',\n        NameError: false,\n        source: 'toko-cm',\n        deviceType: 'sms',\n        campaignType: 'general',\n        senderName: 'Tokopedia',\n    }\n\n    async componentDidMount() {\n        const { search } = this.props.location\n        let campaignId = null\n        if (search && search.indexOf('id=') > -1) {\n            campaignId = search.split('id=')[1]\n        }\n        this.setState({\n            campaignId,\n        })\n        if (!campaignId) {\n            createParentId()\n        }\n    }\n\n    handleInputFields(key, value) {\n        this.setState({\n            [key]: value,\n        })\n    }\n\n    handleContinue = () => {\n        const { name } = this.state\n        let anyError = false\n        if (name === '') {\n            this.setState({\n                NameError: true,\n            })\n            anyError = true\n        }\n        if (!anyError) {\n            const { steps, smsCampaign, NameError, ...rest } = this.state\n            const { parentID } = this.props.CreateCampaign.data\n            CreateSMSCampaignAction({ parentID, ...rest, next: 'step-2' })\n        }\n    }\n    render() {\n        const { steps, name, NameError, smsCampaign } = this.state\n        const { error, loading } = this.props.CreateCampaign\n        if (loading) {\n            return <Loader />\n        }\n        return (\n            <WrapComponents>\n                <Stepper steps={steps} activeStep={0} />\n                {error && <Alert>{error}</Alert>}\n                {NameError && <Alert>Error: Name is required</Alert>}\n                <div className=\"mrgn-btm\">\n                    <span>Channel :</span>\n                    <span style={{ color: '#6cae53' }}>SMS</span>\n                </div>\n\n                <div className=\"section\">\n                    <SmallHeading>Campaign Name*</SmallHeading>\n                    <EmojiInput\n                        placeholder=\"Enter Campaign Name\"\n                        type=\"text\"\n                        className=\"form-input\"\n                        name=\"name\"\n                        value={message}\n                        onChange={e => this.handleInputFields('name', e.target.value)}\n                    />\n                    <input\n                        placeholder=\"Enter Campaign Name\"\n                        type=\"text\"\n                        className=\"form-input\"\n                        name=\"name\"\n                        value={name}\n                        onChange={e => this.handleInputFields('name', e.target.value)}\n                    />\n                </div>\n                <div className=\"section\">\n                    <SmallHeading>SMS Type</SmallHeading>\n                    <Radio checked={smsCampaign}>SMS Campaign</Radio>\n                    {/* this function is  not active now */}\n                    {/* <Radio\n                        checked={connector}\n                        onClick={() =>\n                            this.setState({ connector: !connector, smsCampaign: !smsCampaign })\n                        }\n                    >\n                        Connector Campaign\n                    </Radio> */}\n                    <h5 className=\"mrgn-top-15\">\n                        Create campaigns to transfer data to external APIs. You can use Connectors\n                        to send message via other channels (SMS, Facebook messages), post user\n                        action data to owned/3rd Party Analytics systems and sending audiences to Ad\n                        Networks etc.\n                    </h5>\n                </div>\n                <ColoredButtons onClick={this.handleContinue} className=\"float\">\n                    Continue\n                </ColoredButtons>\n                <TransparentButtons\n                    onClick={() => this.props.history.goBack()}\n                    className=\"float grey-border\"\n                >\n                    Go Back\n                </TransparentButtons>\n            </WrapComponents>\n        )\n    }\n}\n\nexport default ConnectComponent(StepOne)\n"]},"metadata":{},"sourceType":"module"}