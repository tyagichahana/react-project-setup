{"ast":null,"code":"import _defineProperty from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chahanatyagi/Work/cm-frontend/src/pages/EmailCampaign/components/steps/step4.js\";\nimport React, { Component } from 'react';\nimport ConnectComponent from '@/connect';\nimport Stepper from '@/components/stepper';\nimport { Radio } from '@/components/radio';\nimport { SmallHeading } from '@/components/headings';\nimport Alert from '@/components/alert';\nimport Loader from '@/components/loader';\nimport { ColoredButtons, TransparentButtons } from '@/components/button';\nimport WrapComponents from '@/components/wrapper';\nimport { UploadContent, GetCampaign, UpdateCampaignData } from '@/actions/CreateCampaign/emailCampaign';\nimport { AddUser } from '@/actions/utils';\n\nvar StepFour =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StepFour, _Component);\n\n  function StepFour() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StepFour);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StepFour)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      campaignId: '',\n      userFilePath: '',\n      segment_id: '',\n      steps: ['Channel', 'Message', 'Scheduling', 'Segmentation', 'Overview & Send'],\n      uploadCsv: false,\n      fileUploaded: false,\n      error: false,\n      usersCount: 0\n    };\n\n    _this.handleFileChange =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var files, _this$state, campaignId, segment_id, response, addUserResponse;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                files = e.target.files;\n                _this$state = _this.state, campaignId = _this$state.campaignId, segment_id = _this$state.segment_id;\n\n                if (!files.length) {\n                  _context.next = 12;\n                  break;\n                }\n\n                _context.next = 5;\n                return UploadContent(files[0], 'user_segment');\n\n              case 5:\n                response = _context.sent;\n\n                if (!response) {\n                  _context.next = 12;\n                  break;\n                }\n\n                _this.setState({\n                  fileUploaded: true,\n                  userFilePath: response.s3url,\n                  segment_id: response.id,\n                  usersCount: response.usersCount\n                });\n\n                _context.next = 10;\n                return AddUser({\n                  campaignId: campaignId,\n                  segment_id: segment_id\n                });\n\n              case 10:\n                addUserResponse = _context.sent;\n                console.log(addUserResponse);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleContinue = function () {\n      var _this$state2 = _this.state,\n          campaignId = _this$state2.campaignId,\n          userFilePath = _this$state2.userFilePath,\n          fileUploaded = _this$state2.fileUploaded,\n          usersCount = _this$state2.usersCount;\n      var anyError = false;\n\n      if (!fileUploaded) {\n        _this.setState({\n          error: true\n        });\n\n        anyError = true;\n      }\n\n      if (!anyError) {\n        var parentID = _this.props.CreateCampaign.data.parentID;\n        UpdateCampaignData({\n          campaignId: campaignId,\n          parentID: parentID,\n          userFilePath: userFilePath,\n          next: 'step-5'\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(StepFour, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var campaignId = this.props.match.params.campaignId;\n      this.setState({\n        campaignId: campaignId\n      });\n\n      if (!this.props.CreateCampaign.data) {\n        GetCampaign(campaignId);\n      }\n    }\n  }, {\n    key: \"handleInputFields\",\n    value: function handleInputFields(key, value) {\n      if (!value) {\n        this.setState(_defineProperty({}, key, value));\n      } else {\n        this.setState(_defineProperty({}, key, value));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          steps = _this$state3.steps,\n          uploadCsv = _this$state3.uploadCsv,\n          fileUploaded = _this$state3.fileUploaded,\n          error = _this$state3.error,\n          usersCount = _this$state3.usersCount;\n      var CreateCampaign = this.props.CreateCampaign;\n\n      if (CreateCampaign.loading) {\n        return React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(WrapComponents, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Stepper, {\n        steps: steps,\n        activeStep: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), error && React.createElement(Alert, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"*Please upload users file\"), CreateCampaign.error && React.createElement(Alert, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Error: \", CreateCampaign.error), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"section-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"section \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Target Audience\"), React.createElement(Radio, {\n        checked: uploadCsv,\n        onClick: function onClick() {\n          return _this2.setState({\n            uploadCsv: !uploadCsv\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Upload CSV\"), uploadCsv && React.createElement(\"div\", {\n        className: \"section mrgn-top-15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"upload-file-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Upload CSV file\"), React.createElement(\"label\", {\n        htmlFor: \"uploadFile\",\n        className: \"upload-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        id: \"uploadFile\",\n        onChange: this.handleFileChange,\n        accept: \".csv\",\n        className: \"upload-file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }))), fileUploaded && React.createElement(React.Fragment, null, React.createElement(Alert, {\n        className: \"success mrgn-top-15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"File has been uploaded successfully\"), React.createElement(SmallHeading, {\n        className: \"success mrgn-top-15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, usersCount, \" Users added\")))), React.createElement(ColoredButtons, {\n        onClick: this.handleContinue,\n        className: \"float\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Continue\"), React.createElement(TransparentButtons, {\n        onClick: function onClick() {\n          return _this2.props.history.goBack();\n        },\n        className: \"float grey-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Go Back\")), CreateCampaign.error && React.createElement(\"div\", {\n        className: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, CreateCampaign.error)));\n    }\n  }]);\n\n  return StepFour;\n}(Component);\n\nexport default ConnectComponent(StepFour);","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/pages/EmailCampaign/components/steps/step4.js"],"names":["React","Component","ConnectComponent","Stepper","Radio","SmallHeading","Alert","Loader","ColoredButtons","TransparentButtons","WrapComponents","UploadContent","GetCampaign","UpdateCampaignData","AddUser","StepFour","state","campaignId","userFilePath","segment_id","steps","uploadCsv","fileUploaded","error","usersCount","handleFileChange","e","files","target","length","response","setState","s3url","id","addUserResponse","console","log","handleContinue","anyError","parentID","props","CreateCampaign","data","next","match","params","key","value","loading","history","goBack"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,WAA7B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,cAAT,EAAyBC,kBAAzB,QAAmD,qBAAnD;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,SACIC,aADJ,EAEIC,WAFJ,EAGIC,kBAHJ,QAIO,wCAJP;AAKA,SAASC,OAAT,QAAwB,iBAAxB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,UAAU,EAAE,EAHR;AAIJC,MAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,YAAvB,EAAqC,cAArC,EAAqD,iBAArD,CAJH;AAKJC,MAAAA,SAAS,EAAE,KALP;AAMJC,MAAAA,YAAY,EAAE,KANV;AAOJC,MAAAA,KAAK,EAAE,KAPH;AAQJC,MAAAA,UAAU,EAAE;AARR,K;;UAmCRC,gB;;;;;+BAAmB,iBAAMC,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACPC,gBAAAA,KADO,GACGD,CAAC,CAACE,MADL,CACPD,KADO;AAAA,8BAEoB,MAAKX,KAFzB,EAEPC,UAFO,eAEPA,UAFO,EAEKE,UAFL,eAEKA,UAFL;;AAAA,qBAGXQ,KAAK,CAACE,MAHK;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAIYlB,aAAa,CAACgB,KAAK,CAAC,CAAD,CAAN,EAAW,cAAX,CAJzB;;AAAA;AAILG,gBAAAA,QAJK;;AAAA,qBAKPA,QALO;AAAA;AAAA;AAAA;;AAMP,sBAAKC,QAAL,CAAc;AACVT,kBAAAA,YAAY,EAAE,IADJ;AAEVJ,kBAAAA,YAAY,EAAEY,QAAQ,CAACE,KAFb;AAGVb,kBAAAA,UAAU,EAAEW,QAAQ,CAACG,EAHX;AAIVT,kBAAAA,UAAU,EAAEM,QAAQ,CAACN;AAJX,iBAAd;;AANO;AAAA,uBAYuBV,OAAO,CAAC;AAAEG,kBAAAA,UAAU,EAAVA,UAAF;AAAcE,kBAAAA,UAAU,EAAVA;AAAd,iBAAD,CAZ9B;;AAAA;AAYDe,gBAAAA,eAZC;AAaPC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;;AAbO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;UAkBnBG,c,GAAiB,YAAM;AAAA,yBAC4C,MAAKrB,KADjD;AAAA,UACXC,UADW,gBACXA,UADW;AAAA,UACCC,YADD,gBACCA,YADD;AAAA,UACeI,YADf,gBACeA,YADf;AAAA,UAC6BE,UAD7B,gBAC6BA,UAD7B;AAGnB,UAAIc,QAAQ,GAAG,KAAf;;AACA,UAAI,CAAChB,YAAL,EAAmB;AACf,cAAKS,QAAL,CAAc;AACVR,UAAAA,KAAK,EAAE;AADG,SAAd;;AAGAe,QAAAA,QAAQ,GAAG,IAAX;AACH;;AACD,UAAI,CAACA,QAAL,EAAe;AAAA,YACHC,QADG,GACU,MAAKC,KAAL,CAAWC,cAAX,CAA0BC,IADpC,CACHH,QADG;AAEX1B,QAAAA,kBAAkB,CAAC;AAAEI,UAAAA,UAAU,EAAVA,UAAF;AAAcsB,UAAAA,QAAQ,EAARA,QAAd;AAAwBrB,UAAAA,YAAY,EAAZA,YAAxB;AAAsCyB,UAAAA,IAAI,EAAE;AAA5C,SAAD,CAAlB;AACH;AACJ,K;;;;;;;yCAxDoB;AAAA,UAEH1B,UAFG,GAGb,KAAKuB,KAAL,CAAWI,KAHE,CAEbC,MAFa,CAEH5B,UAFG;AAIjB,WAAKc,QAAL,CAAc;AACVd,QAAAA,UAAU,EAAVA;AADU,OAAd;;AAGA,UAAI,CAAC,KAAKuB,KAAL,CAAWC,cAAX,CAA0BC,IAA/B,EAAqC;AACjC9B,QAAAA,WAAW,CAACK,UAAD,CAAX;AACH;AACJ;;;sCAEiB6B,G,EAAKC,K,EAAO;AAC1B,UAAI,CAACA,KAAL,EAAY;AACR,aAAKhB,QAAL,qBACKe,GADL,EACWC,KADX;AAGH,OAJD,MAIO;AACH,aAAKhB,QAAL,qBACKe,GADL,EACWC,KADX;AAGH;AACJ;;;6BAoCQ;AAAA;;AAAA,yBACyD,KAAK/B,KAD9D;AAAA,UACGI,KADH,gBACGA,KADH;AAAA,UACUC,SADV,gBACUA,SADV;AAAA,UACqBC,YADrB,gBACqBA,YADrB;AAAA,UACmCC,KADnC,gBACmCA,KADnC;AAAA,UAC0CC,UAD1C,gBAC0CA,UAD1C;AAAA,UAEGiB,cAFH,GAEsB,KAAKD,KAF3B,CAEGC,cAFH;;AAGL,UAAIA,cAAc,CAACO,OAAnB,EAA4B;AACxB,eAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAED,aACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE5B,KAAhB;AAAuB,QAAA,UAAU,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEKG,KAAK,IAAI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFd,EAGKkB,cAAc,CAAClB,KAAf,IAAwB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAekB,cAAc,CAAClB,KAA9B,CAH7B,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI,oBAAC,KAAD;AACI,QAAA,OAAO,EAAEF,SADb;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACU,QAAL,CAAc;AAAEV,YAAAA,SAAS,EAAE,CAACA;AAAd,WAAd,CAAN;AAAA,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAQKA,SAAS,IACN;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAO,QAAA,OAAO,EAAC,YAAf;AAA4B,QAAA,SAAS,EAAC,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,EAAE,EAAC,YAFP;AAGI,QAAA,QAAQ,EAAE,KAAKI,gBAHnB;AAII,QAAA,MAAM,EAAC,MAJX;AAKI,QAAA,SAAS,EAAC,aALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,CADJ,EAaKH,YAAY,IACT,0CACI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADJ,EAII,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAC,qBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKE,UADL,iBAJJ,CAdR,CATR,CADJ,EAoCI,oBAAC,cAAD;AAAgB,QAAA,OAAO,EAAE,KAAKa,cAA9B;AAA8C,QAAA,SAAS,EAAC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBApCJ,EAuCI,oBAAC,kBAAD;AACI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACG,KAAL,CAAWS,OAAX,CAAmBC,MAAnB,EAAN;AAAA,SADb;AAEI,QAAA,SAAS,EAAC,mBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAvCJ,CADJ,EA+CKT,cAAc,CAAClB,KAAf,IAAwB;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBkB,cAAc,CAAClB,KAAvC,CA/C7B,CAJJ,CADJ;AAwDH;;;;EArIkBtB,S;;AAuIvB,eAAeC,gBAAgB,CAACa,QAAD,CAA/B","sourcesContent":["import React, { Component } from 'react'\nimport ConnectComponent from '@/connect'\nimport Stepper from '@/components/stepper'\nimport { Radio } from '@/components/radio'\nimport { SmallHeading } from '@/components/headings'\nimport Alert from '@/components/alert'\nimport Loader from '@/components/loader'\nimport { ColoredButtons, TransparentButtons } from '@/components/button'\nimport WrapComponents from '@/components/wrapper'\nimport {\n    UploadContent,\n    GetCampaign,\n    UpdateCampaignData,\n} from '@/actions/CreateCampaign/emailCampaign'\nimport { AddUser } from '@/actions/utils'\n\nclass StepFour extends Component {\n    state = {\n        campaignId: '',\n        userFilePath: '',\n        segment_id: '',\n        steps: ['Channel', 'Message', 'Scheduling', 'Segmentation', 'Overview & Send'],\n        uploadCsv: false,\n        fileUploaded: false,\n        error: false,\n        usersCount: 0,\n    }\n\n    componentWillMount() {\n        const {\n            params: { campaignId },\n        } = this.props.match\n        this.setState({\n            campaignId,\n        })\n        if (!this.props.CreateCampaign.data) {\n            GetCampaign(campaignId)\n        }\n    }\n\n    handleInputFields(key, value) {\n        if (!value) {\n            this.setState({\n                [key]: value,\n            })\n        } else {\n            this.setState({\n                [key]: value,\n            })\n        }\n    }\n\n    handleFileChange = async e => {\n        const { files } = e.target\n        const { campaignId, segment_id } = this.state\n        if (files.length) {\n            const response = await UploadContent(files[0], 'user_segment')\n            if (response) {\n                this.setState({\n                    fileUploaded: true,\n                    userFilePath: response.s3url,\n                    segment_id: response.id,\n                    usersCount: response.usersCount,\n                })\n                const addUserResponse = await AddUser({ campaignId, segment_id })\n                console.log(addUserResponse)\n            }\n        }\n    }\n\n    handleContinue = () => {\n        const { campaignId, userFilePath, fileUploaded, usersCount } = this.state\n\n        let anyError = false\n        if (!fileUploaded) {\n            this.setState({\n                error: true,\n            })\n            anyError = true\n        }\n        if (!anyError) {\n            const { parentID } = this.props.CreateCampaign.data\n            UpdateCampaignData({ campaignId, parentID, userFilePath, next: 'step-5' })\n        }\n    }\n\n    render() {\n        const { steps, uploadCsv, fileUploaded, error, usersCount } = this.state\n        const { CreateCampaign } = this.props\n        if (CreateCampaign.loading) {\n            return <Loader />\n        }\n\n        return (\n            <WrapComponents>\n                <Stepper steps={steps} activeStep={3} />\n                {error && <Alert>*Please upload users file</Alert>}\n                {CreateCampaign.error && <Alert>Error: {CreateCampaign.error}</Alert>}\n                <div>\n                    <div className=\"section-left\">\n                        <div className=\"section \">\n                            <SmallHeading>Target Audience</SmallHeading>\n                            <Radio\n                                checked={uploadCsv}\n                                onClick={() => this.setState({ uploadCsv: !uploadCsv })}\n                            >\n                                Upload CSV\n                            </Radio>\n                            {uploadCsv && (\n                                <div className=\"section mrgn-top-15\">\n                                    <div className=\"upload-file-section\">\n                                        <SmallHeading>Upload CSV file</SmallHeading>\n                                        <label htmlFor=\"uploadFile\" className=\"upload-box\">\n                                            <input\n                                                type=\"file\"\n                                                id=\"uploadFile\"\n                                                onChange={this.handleFileChange}\n                                                accept=\".csv\"\n                                                className=\"upload-file\"\n                                            />\n                                        </label>\n                                    </div>\n                                    {fileUploaded && (\n                                        <>\n                                            <Alert className=\"success mrgn-top-15\">\n                                                File has been uploaded successfully\n                                            </Alert>\n                                            <SmallHeading className=\"success mrgn-top-15\">\n                                                {usersCount} Users added\n                                            </SmallHeading>\n                                        </>\n                                    )}\n                                </div>\n                            )}\n                        </div>\n                        <ColoredButtons onClick={this.handleContinue} className=\"float\">\n                            Continue\n                        </ColoredButtons>\n                        <TransparentButtons\n                            onClick={() => this.props.history.goBack()}\n                            className=\"float grey-border\"\n                        >\n                            Go Back\n                        </TransparentButtons>\n                    </div>\n                    {CreateCampaign.error && <div className=\"alert\">{CreateCampaign.error}</div>}\n                </div>\n            </WrapComponents>\n        )\n    }\n}\nexport default ConnectComponent(StepFour)\n"]},"metadata":{},"sourceType":"module"}