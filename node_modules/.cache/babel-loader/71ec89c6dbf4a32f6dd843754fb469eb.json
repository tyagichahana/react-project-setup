{"ast":null,"code":"import _defineProperty from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chahanatyagi/Work/cm-frontend/src/pages/SMSCampaign/Components/steps/step2.js\";\nimport React, { Component } from 'react';\nimport Stepper from '@/components/stepper';\nimport WrapComponents from '@/components/wrapper';\nimport { SmallHeading } from '@/components/headings';\nimport { ColoredButtons, TransparentButtons } from '@/components/button';\nimport { Checkbox } from '@/components/checkBox/index';\n\nvar StepTwo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StepTwo, _Component);\n\n  function StepTwo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StepTwo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StepTwo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      steps: ['Channel', 'Message', 'Segmentation', 'Scheduling & Send'],\n      message: '',\n      messageError: false,\n      clickURL: false\n    };\n\n    _this.handleContinue = function () {\n      var message = _this.state.message;\n      var anyError = false;\n\n      if (message === '') {\n        _this.setState({\n          messageError: true\n        });\n\n        anyError = true;\n      }\n\n      if (!anyError) {\n        _this.props.onSubmit({\n          message: message\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(StepTwo, [{\n    key: \"handleInputFields\",\n    value: function handleInputFields(key, value) {\n      this.setState(_defineProperty({}, key, value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          steps = _this$state.steps,\n          message = _this$state.message,\n          messageError = _this$state.messageError,\n          clickURL = _this$state.clickURL;\n      return React.createElement(WrapComponents, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Stepper, {\n        steps: steps,\n        activeStep: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Create Message\"), messageError && React.createElement(\"div\", {\n        className: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"*This field is Required\"), React.createElement(\"textarea\", {\n        placeholder: \"Write your message here( *less than equal to 1000 words)\",\n        name: \"message\",\n        className: \"form-input\",\n        value: message,\n        onChange: function onChange(e) {\n          return _this2.handleInputFields('message', e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"dotted-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Checkbox, {\n        onClick: function onClick() {\n          return _this2.setState({\n            clickURL: !clickURL\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Track SMS Click for URL\"), clickURL && React.createElement(\"input\", {\n        className: \"form-input\",\n        placeholder: \"Paste/Type the URL you want to track\",\n        name: \"clickURLvalue\",\n        value: urlValue,\n        onChange: function onChange(e) {\n          return _this2.handleInputFields('urlValue', e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(ColoredButtons, {\n        onClick: this.handleContinue,\n        className: \"float\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Continue\"), React.createElement(TransparentButtons, {\n        onClick: this.back,\n        className: \"float grey-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Save as Draft\"));\n    }\n  }]);\n\n  return StepTwo;\n}(Component);\n\nexport default StepTwo;","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/pages/SMSCampaign/Components/steps/step2.js"],"names":["React","Component","Stepper","WrapComponents","SmallHeading","ColoredButtons","TransparentButtons","Checkbox","StepTwo","state","steps","message","messageError","clickURL","handleContinue","anyError","setState","props","onSubmit","key","value","e","handleInputFields","target","urlValue","back"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Stepper from '@/components/stepper'\nimport WrapComponents from '@/components/wrapper'\nimport { SmallHeading } from '@/components/headings'\nimport { ColoredButtons, TransparentButtons } from '@/components/button'\nimport { Checkbox } from '@/components/checkBox/index'\n\nclass StepTwo extends Component {\n    state = {\n        steps: ['Channel', 'Message', 'Segmentation', 'Scheduling & Send'],\n        message: '',\n        messageError: false,\n        clickURL: false,\n    }\n\n    handleInputFields(key, value) {\n        this.setState({\n            [key]: value,\n        })\n    }\n\n    handleContinue = () => {\n        const { message } = this.state\n\n        let anyError = false\n\n        if (message === '') {\n            this.setState({\n                messageError: true,\n            })\n            anyError = true\n        }\n        if (!anyError) {\n            this.props.onSubmit({ message })\n        }\n    }\n\n    render() {\n        const { steps, message, messageError, clickURL } = this.state\n        return (\n            <WrapComponents>\n                <Stepper steps={steps} activeStep={1} />\n                <div className=\"section\">\n                    <SmallHeading>Create Message</SmallHeading>\n                    {messageError && <div className=\"alert\">*This field is Required</div>}\n                    <textarea\n                        placeholder=\"Write your message here( *less than equal to 1000 words)\"\n                        name=\"message\"\n                        className=\"form-input\"\n                        value={message}\n                        onChange={e => this.handleInputFields('message', e.target.value)}\n                    />\n                    <div className=\"dotted-line\" />\n                    <Checkbox onClick={() => this.setState({ clickURL: !clickURL })}>\n                        Track SMS Click for URL\n                    </Checkbox>\n                    {clickURL && (\n                        <input\n                            className=\"form-input\"\n                            placeholder=\"Paste/Type the URL you want to track\"\n                            name=\"clickURLvalue\"\n                            value={urlValue}\n                            onChange={e => this.handleInputFields('urlValue', e.target.value)}\n                        />\n                    )}\n                </div>\n\n                <ColoredButtons onClick={this.handleContinue} className=\"float\">\n                    Continue\n                </ColoredButtons>\n                <TransparentButtons onClick={this.back} className=\"float grey-border\">\n                    Save as Draft\n                </TransparentButtons>\n            </WrapComponents>\n        )\n    }\n}\n\nexport default StepTwo\n"]},"metadata":{},"sourceType":"module"}