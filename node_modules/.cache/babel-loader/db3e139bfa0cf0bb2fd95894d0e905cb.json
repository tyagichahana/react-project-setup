{"ast":null,"code":"import _defineProperty from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chahanatyagi/Work/cm-frontend/src/pages/SMSCampaign/Components/steps/step4.js\";\nimport React, { Component } from 'react';\nimport Stepper from '@/components/stepper';\nimport { Radio } from '@/components/radio';\nimport ConnectComponent from '../../../../connect';\nimport { SmallHeading } from '@/components/headings';\nimport Alert from '@/components/alert';\nimport Loader from '@/components/loader';\nimport { ColoredButtons, TransparentButtons } from '@/components/button';\nimport WrapComponents from '@/components/wrapper';\n\nvar StepFour =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StepFour, _Component);\n\n  function StepFour() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StepFour);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StepFour)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      steps: ['Channel', 'Message', 'Scheduling', 'Segmentation', 'Overview'],\n      uploadCsv: false\n    };\n\n    _this.back = function (e) {\n      e.preventDefault();\n\n      _this.props.prevStep();\n    };\n\n    _this.handleFileChange = function (e) {\n      var files = e.target.files;\n\n      if (files.length) {\n        var formData = new FormData();\n        formData.append('input_file', files[0]); // uploadSegmentFileAction(formData)\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(StepFour, [{\n    key: \"handleInputFields\",\n    value: function handleInputFields(key, value) {\n      if (!value) {\n        this.setState(_defineProperty({}, key, value));\n      } else {\n        this.setState(_defineProperty({}, key, value));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          steps = _this$state.steps,\n          uploadCsv = _this$state.uploadCsv;\n      var _this$props$CreateCam = this.props.CreateCampaign,\n          error = _this$props$CreateCam.error,\n          loading = _this$props$CreateCam.loading;\n\n      if (loading) {\n        return React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(WrapComponents, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Stepper, {\n        steps: steps,\n        activeStep: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"section-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"section \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Target Audience\"), React.createElement(Radio, {\n        Checked: uploadCsv,\n        onClick: function onClick() {\n          return _this2.setState({\n            uploadCsv: !uploadCsv\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Upload CSV\"), uploadCsv && React.createElement(\"div\", {\n        className: \"section mrgn-top-15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"upload-file-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Upload CSV file\"), React.createElement(\"label\", {\n        htmlFor: \"uploadFile\",\n        className: \"upload-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        id: \"uploadFile\",\n        onChange: this.handleFileChange,\n        accept: \".csv\",\n        className: \"upload-file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))))), React.createElement(ColoredButtons, {\n        as: \"link\",\n        to: \"/sms/step-5\",\n        className: \"float\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Continue\"), React.createElement(TransparentButtons, {\n        onClick: function onClick() {\n          return _this2.props.history.goBack();\n        },\n        className: \"float grey-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Go Back\"))));\n    }\n  }]);\n\n  return StepFour;\n}(Component);\n\nexport default ConnectComponent(StepFour);","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/pages/SMSCampaign/Components/steps/step4.js"],"names":["React","Component","Stepper","Radio","ConnectComponent","SmallHeading","Alert","Loader","ColoredButtons","TransparentButtons","WrapComponents","StepFour","state","steps","uploadCsv","back","e","preventDefault","props","prevStep","handleFileChange","files","target","length","formData","FormData","append","key","value","setState","CreateCampaign","error","loading","history","goBack"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Stepper from '@/components/stepper'\nimport { Radio } from '@/components/radio'\nimport ConnectComponent from '../../../../connect'\nimport { SmallHeading } from '@/components/headings'\nimport Alert from '@/components/alert'\nimport Loader from '@/components/loader'\n\nimport { ColoredButtons, TransparentButtons } from '@/components/button'\nimport WrapComponents from '@/components/wrapper'\n\nclass StepFour extends Component {\n    state = {\n        steps: ['Channel', 'Message', 'Scheduling', 'Segmentation', 'Overview'],\n        uploadCsv: false,\n    }\n\n    back = e => {\n        e.preventDefault()\n        this.props.prevStep()\n    }\n\n    handleInputFields(key, value) {\n        if (!value) {\n            this.setState({\n                [key]: value,\n            })\n        } else {\n            this.setState({\n                [key]: value,\n            })\n        }\n    }\n\n    handleFileChange = e => {\n        const { files } = e.target\n        if (files.length) {\n            const formData = new FormData()\n            formData.append('input_file', files[0])\n            // uploadSegmentFileAction(formData)\n        }\n    }\n\n    render() {\n        const { steps, uploadCsv } = this.state\n        const { error, loading } = this.props.CreateCampaign\n        if (loading) {\n            return <Loader />\n        }\n\n        return (\n            <WrapComponents>\n                <Stepper steps={steps} activeStep={3} />\n                <div>\n                    <div className=\"section-left\">\n                        <div className=\"section \">\n                            <SmallHeading>Target Audience</SmallHeading>\n                            <Radio\n                                Checked={uploadCsv}\n                                onClick={() => this.setState({ uploadCsv: !uploadCsv })}\n                            >\n                                Upload CSV\n                            </Radio>\n                            {uploadCsv && (\n                                <div className=\"section mrgn-top-15\">\n                                    <div className=\"upload-file-section\">\n                                        <SmallHeading>Upload CSV file</SmallHeading>\n                                        <label htmlFor=\"uploadFile\" className=\"upload-box\">\n                                            <input\n                                                type=\"file\"\n                                                id=\"uploadFile\"\n                                                onChange={this.handleFileChange}\n                                                accept=\".csv\"\n                                                className=\"upload-file\"\n                                            />\n                                        </label>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                        <ColoredButtons as=\"link\" to=\"/sms/step-5\" className=\"float\">\n                            Continue\n                        </ColoredButtons>\n                        <TransparentButtons\n                            onClick={() => this.props.history.goBack()}\n                            className=\"float grey-border\"\n                        >\n                            Go Back\n                        </TransparentButtons>\n                    </div>\n                </div>\n            </WrapComponents>\n        )\n    }\n}\nexport default ConnectComponent(StepFour)\n"]},"metadata":{},"sourceType":"module"}