{"ast":null,"code":"import * as types from '@/constants/Types';\nimport Api from '@/utils/Api';\nimport Store from '@/reducer';\nexport var AUTH_TOKEN_KEY = 'AUTH_TOKEN_KEY';\nexport var loginAction = function loginAction(data) {\n  Store.dispatch({\n    type: types.LOGIN_LOADING\n  });\n  Api.loginUser(data).then(function (res) {\n    console.log(res, \"response is here\");\n\n    if (res.success) {\n      Store.dispatch({\n        type: types.LOGIN_SUCCESS,\n        data: res\n      });\n      window.localStorage.setItem(AUTH_TOKEN_KEY, res.token);\n    } else {\n      Store.dispatch({\n        type: types.LOGIN_FAILURE,\n        error: res.error\n      });\n    } // window.location.reload();\n\n  }).catch(function (err) {\n    Store.dispatch({\n      type: types.LOGIN_FAILURE,\n      error: err\n    });\n  });\n};\nexport function redirectLogin() {\n  var localToken = window.localStorage.getItem(AUTH_TOKEN_KEY);\n\n  if (localToken) {\n    Store.dispatch({\n      type: 'LOGIN_REDIRECT'\n    });\n  } else {\n    var pathname = window.location.pathname;\n\n    if (pathname === '/login') {\n      return;\n    } else {\n      window.location.href = '/login';\n    }\n  }\n}\nexport default loginAction;","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/actions/User.js"],"names":["types","Api","Store","AUTH_TOKEN_KEY","loginAction","data","dispatch","type","LOGIN_LOADING","loginUser","then","res","console","log","success","LOGIN_SUCCESS","window","localStorage","setItem","token","LOGIN_FAILURE","error","catch","err","redirectLogin","localToken","getItem","pathname","location","href"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,mBAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAO,IAAMC,cAAc,GAAC,gBAArB;AAEP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AACjCH,EAAAA,KAAK,CAACI,QAAN,CAAe;AACXC,IAAAA,IAAI,EAAEP,KAAK,CAACQ;AADD,GAAf;AAGAP,EAAAA,GAAG,CAACQ,SAAJ,CAAcJ,IAAd,EACKK,IADL,CACU,UAAAC,GAAG,EAAI;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAgB,kBAAhB;;AACA,QAAIA,GAAG,CAACG,OAAR,EAAgB;AACZZ,MAAAA,KAAK,CAACI,QAAN,CAAe;AACXC,QAAAA,IAAI,EAAEP,KAAK,CAACe,aADD;AAEXV,QAAAA,IAAI,EAAEM;AAFK,OAAf;AAIAK,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4Bf,cAA5B,EAA4CQ,GAAG,CAACQ,KAAhD;AACH,KAND,MAMK;AACDjB,MAAAA,KAAK,CAACI,QAAN,CAAe;AACXC,QAAAA,IAAI,EAAEP,KAAK,CAACoB,aADD;AAEXC,QAAAA,KAAK,EAAEV,GAAG,CAACU;AAFA,OAAf;AAIH,KAbQ,CAeT;;AAEH,GAlBL,EAmBKC,KAnBL,CAmBW,UAAAC,GAAG,EAAI;AACVrB,IAAAA,KAAK,CAACI,QAAN,CAAe;AACXC,MAAAA,IAAI,EAAEP,KAAK,CAACoB,aADD;AAEXC,MAAAA,KAAK,EAAEE;AAFI,KAAf;AAIH,GAxBL;AAyBH,CA7BM;AA+BP,OAAO,SAASC,aAAT,GAA0B;AAC7B,MAAMC,UAAU,GAAGT,MAAM,CAACC,YAAP,CAAoBS,OAApB,CAA4BvB,cAA5B,CAAnB;;AACA,MAAIsB,UAAJ,EAAgB;AACZvB,IAAAA,KAAK,CAACI,QAAN,CAAe;AACXC,MAAAA,IAAI,EAAE;AADK,KAAf;AAGH,GAJD,MAIO;AAAA,QACKoB,QADL,GACkBX,MAAM,CAACY,QADzB,CACKD,QADL;;AAEH,QAAIA,QAAQ,KAAK,QAAjB,EAA2B;AACvB;AACH,KAFD,MAGK;AACDX,MAAAA,MAAM,CAACY,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACH;AACJ;AACJ;AACD,eAAezB,WAAf","sourcesContent":["import * as types from '@/constants/Types';\nimport Api from '@/utils/Api';\nimport Store from '@/reducer';\nexport const AUTH_TOKEN_KEY='AUTH_TOKEN_KEY'\n\nexport const loginAction = (data) => {\n    Store.dispatch({\n        type: types.LOGIN_LOADING,\n    });\n    Api.loginUser(data)\n        .then(res => {\n            console.log(res,\"response is here\")\n            if (res.success){\n                Store.dispatch({\n                    type: types.LOGIN_SUCCESS,\n                    data: res,\n                });\n                window.localStorage.setItem(AUTH_TOKEN_KEY, res.token)\n            }else{\n                Store.dispatch({\n                    type: types.LOGIN_FAILURE,\n                    error: res.error,\n                });\n            }\n\n            // window.location.reload();\n\n        })\n        .catch(err => {\n            Store.dispatch({\n                type: types.LOGIN_FAILURE,\n                error: err,\n            });\n        });\n};\n\nexport function redirectLogin () {\n    const localToken = window.localStorage.getItem(AUTH_TOKEN_KEY)\n    if (localToken) {\n        Store.dispatch({\n            type: 'LOGIN_REDIRECT',\n        })\n    } else {\n        const { pathname } = window.location;\n        if (pathname === '/login') {\n            return;\n        }\n        else {\n            window.location.href = '/login'\n        }\n    }\n}\nexport default loginAction\n"]},"metadata":{},"sourceType":"module"}