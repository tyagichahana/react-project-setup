{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar PluginPass =\n/*#__PURE__*/\nfunction () {\n  function PluginPass(file, key, options) {\n    _classCallCheck(this, PluginPass);\n\n    this._map = new Map();\n    this.key = key;\n    this.file = file;\n    this.opts = options || {};\n    this.cwd = file.opts.cwd;\n    this.filename = file.opts.filename;\n  }\n\n  _createClass(PluginPass, [{\n    key: \"set\",\n    value: function set(key, val) {\n      this._map.set(key, val);\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this._map.get(key);\n    }\n  }, {\n    key: \"availableHelper\",\n    value: function availableHelper(name, versionRange) {\n      return this.file.availableHelper(name, versionRange);\n    }\n  }, {\n    key: \"addHelper\",\n    value: function addHelper(name) {\n      return this.file.addHelper(name);\n    }\n  }, {\n    key: \"addImport\",\n    value: function addImport() {\n      return this.file.addImport();\n    }\n  }, {\n    key: \"getModuleName\",\n    value: function getModuleName() {\n      return this.file.getModuleName();\n    }\n  }, {\n    key: \"buildCodeFrameError\",\n    value: function buildCodeFrameError(node, msg, Error) {\n      return this.file.buildCodeFrameError(node, msg, Error);\n    }\n  }]);\n\n  return PluginPass;\n}();\n\nexports.default = PluginPass;","map":null,"metadata":{},"sourceType":"script"}