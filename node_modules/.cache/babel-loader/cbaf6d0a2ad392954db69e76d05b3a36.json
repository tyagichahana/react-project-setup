{"ast":null,"code":"var _jsxFileName = \"/Users/chahanatyagi/Work/cm-frontend/src/pages/Campaign/emailCamp/components/ListView/index.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Table, { Tcol, Trow, Thead, Tbody } from '../../../../components/table';\nimport Loader from '@/components/loader'; // actions\n\nimport { toggleAllCheckboxes, toggleCheckbox, toggleMenu, deleteCampaign } from '../../../../store/actions';\n\nvar ListView = function ListView(_ref) {\n  var data = _ref.data,\n      headers = _ref.headers,\n      loading = _ref.loading;\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }));\n  }\n\n  if (!headers.length) {\n    return null;\n  }\n\n  return React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Thead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Trow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, headers.map(function (item, index) {\n    if (item.checkbox) {\n      return React.createElement(Tcol, {\n        key: index,\n        component: \"th\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: item.checked,\n        value: item.name,\n        onClick: function onClick() {\n          return toggleAllCheckboxes(!item.checked, data, headers);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(Tcol, {\n      key: index,\n      component: \"th\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, item.name);\n  }))), React.createElement(Tbody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, data.map(function (item, index) {\n    return React.createElement(RenderRow, {\n      key: index,\n      row: item,\n      headers: headers,\n      rowIndex: index,\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n  })));\n};\n\nvar RenderRow = function RenderRow(_ref2) {\n  var row = _ref2.row,\n      headers = _ref2.headers,\n      rowIndex = _ref2.rowIndex,\n      data = _ref2.data;\n  return React.createElement(Trow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Tcol, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: row.checked,\n    value: row.checked,\n    onClick: function onClick() {\n      return toggleCheckbox(!row.checked, rowIndex, data, headers);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(Tcol, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/campaign/detail/\".concat(row.campaign_id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, row.campaign_name)), React.createElement(Tcol, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, row.campaignstats__delivered), React.createElement(Tcol, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, row.campaignstats__unique_opens), React.createElement(Tcol, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, row.campaignstats__unique_clicks), React.createElement(Tcol, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, row.campaignstats__unsubscribes), React.createElement(Tcol, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, row.campaignstats__bounces), React.createElement(Tcol, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"table-menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    onClick: function onClick() {\n      return toggleMenu(rowIndex, !row.showMenu, data);\n    },\n    className: \"table-menu-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"icon ion-md-more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), row.showMenu && React.createElement(\"div\", {\n    className: \"table-menu-items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"item\",\n    onClick: function onClick() {\n      deleteCampaign(row.campaign_id, data);\n      toggleMenu(rowIndex, !row.showMenu, data);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"icon ion-md-trash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }))))));\n};\n\nexport default ListView;","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/pages/Campaign/emailCamp/components/ListView/index.js"],"names":["React","Link","Table","Tcol","Trow","Thead","Tbody","Loader","toggleAllCheckboxes","toggleCheckbox","toggleMenu","deleteCampaign","ListView","data","headers","loading","length","map","item","index","checkbox","checked","name","RenderRow","row","rowIndex","campaign_id","campaign_name","campaignstats__delivered","campaignstats__unique_opens","campaignstats__unique_clicks","campaignstats__unsubscribes","campaignstats__bounces","showMenu"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Table, { Tcol, Trow, Thead, Tbody } from '../../../../components/table'\nimport Loader from '@/components/loader'\n// actions\nimport {\n    toggleAllCheckboxes,\n    toggleCheckbox,\n    toggleMenu,\n    deleteCampaign,\n} from '../../../../store/actions'\n\nconst ListView = ({ data, headers, loading }) => {\n    if (loading) {\n        return (\n            <div className=\"text-center\">\n                <Loader inline />\n            </div>\n        )\n    }\n\n    if (!headers.length) {\n        return null\n    }\n\n    return (\n        <Table>\n            <Thead>\n                <Trow>\n                    {headers.map((item, index) => {\n                        if (item.checkbox) {\n                            return (\n                                <Tcol key={index} component=\"th\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={item.checked}\n                                        value={item.name}\n                                        onClick={() =>\n                                            toggleAllCheckboxes(!item.checked, data, headers)\n                                        }\n                                    />\n                                </Tcol>\n                            )\n                        }\n                        return (\n                            <Tcol key={index} component=\"th\">\n                                {item.name}\n                            </Tcol>\n                        )\n                    })}\n                </Trow>\n            </Thead>\n            <Tbody>\n                {data.map((item, index) => {\n                    return (\n                        <RenderRow\n                            key={index}\n                            row={item}\n                            headers={headers}\n                            rowIndex={index}\n                            data={data}\n                        />\n                    )\n                })}\n            </Tbody>\n        </Table>\n    )\n}\n\nconst RenderRow = ({ row, headers, rowIndex, data }) => {\n    return (\n        <Trow>\n            <Tcol>\n                <input\n                    type=\"checkbox\"\n                    checked={row.checked}\n                    value={row.checked}\n                    onClick={() => toggleCheckbox(!row.checked, rowIndex, data, headers)}\n                />\n            </Tcol>\n            <Tcol>\n                <Link to={`/campaign/detail/${row.campaign_id}`}>{row.campaign_name}</Link>\n            </Tcol>\n            <Tcol>{row.campaignstats__delivered}</Tcol>\n            <Tcol>{row.campaignstats__unique_opens}</Tcol>\n            <Tcol>{row.campaignstats__unique_clicks}</Tcol>\n            <Tcol>{row.campaignstats__unsubscribes}</Tcol>\n            <Tcol>{row.campaignstats__bounces}</Tcol>\n            <Tcol>\n                <div className=\"table-menu\">\n                    <span\n                        onClick={() => toggleMenu(rowIndex, !row.showMenu, data)}\n                        className=\"table-menu-button\"\n                    >\n                        <i className=\"icon ion-md-more\" />\n                    </span>\n                    {row.showMenu && (\n                        <div className=\"table-menu-items\">\n                            <div\n                                className=\"item\"\n                                onClick={() => {\n                                    deleteCampaign(row.campaign_id, data)\n                                    toggleMenu(rowIndex, !row.showMenu, data)\n                                }}\n                            >\n                                <i className=\"icon ion-md-trash\" />\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </Tcol>\n        </Trow>\n    )\n}\n\nexport default ListView\n"]},"metadata":{},"sourceType":"module"}