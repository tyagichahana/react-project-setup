{"ast":null,"code":"import _defineProperty from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chahanatyagi/Work/cm-frontend/src/pages/EmailCampaign/components/steps/step4.js\";\nimport React, { Component } from 'react';\nimport ConnectComponent from '@/connect';\nimport Stepper from '@/components/stepper';\nimport { Radio } from '@/components/radio';\nimport { SmallHeading } from '@/components/headings';\nimport { ColoredButtons, TransparentButtons } from '@/components/button';\nimport WrapComponents from '@/components/wrapper';\nimport { UploadContent, GetCampaign } from '@/actions/CreateCampaign/emailCampaign';\n\nvar StepFour =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StepFour, _Component);\n\n  function StepFour() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StepFour);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StepFour)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      campaign_id: '',\n      steps: ['Channel', 'Message', 'Scheduling', 'Segmentation', 'Overview & Send'],\n      uploadCsv: false,\n      fileUploaded: false\n    };\n\n    _this.handleFileChange =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var files, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                files = e.target.files;\n\n                if (!files.length) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 4;\n                return UploadContent(files[0], 'user_segment');\n\n              case 4:\n                response = _context.sent;\n\n                if (response) {\n                  _this.setState({\n                    fileUploaded: true\n                  });\n                }\n\n                console.log(response);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(StepFour, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var campaign_id = this.props.match.params.campaign_id;\n      this.setState({\n        campaign_id: campaign_id\n      });\n\n      if (!this.props.CreateCampaign.data) {\n        GetCampaign(campaign_id);\n      }\n    }\n  }, {\n    key: \"handleInputFields\",\n    value: function handleInputFields(key, value) {\n      if (!value) {\n        this.setState(_defineProperty({}, key, value));\n      } else {\n        this.setState(_defineProperty({}, key, value));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          steps = _this$state.steps,\n          uploadCsv = _this$state.uploadCsv,\n          fileUploaded = _this$state.fileUploaded;\n      var CreateCampaign = this.props.CreateCampaign;\n      return React.createElement(WrapComponents, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Stepper, {\n        steps: steps,\n        activeStep: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"section-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"section \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Target Audience\"), React.createElement(Radio, {\n        checked: uploadCsv,\n        onClick: function onClick() {\n          return _this2.setState({\n            uploadCsv: !uploadCsv\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Upload CSV\"), uploadCsv && React.createElement(\"div\", {\n        className: \"section mrgn-top-15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"upload-file-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Upload CSV file\"), React.createElement(\"label\", {\n        htmlFor: \"uploadFile\",\n        className: \"upload-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        id: \"uploadFile\",\n        onChange: this.handleFileChange,\n        accept: \".csv\",\n        className: \"upload-file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }))), fileUploaded && React.createElement(\"div\", {\n        className: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"File has been uploaded successfully\"))), React.createElement(ColoredButtons, {\n        as: \"link\",\n        to: \"/email/step-5\",\n        className: \"float\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Continue\"), React.createElement(TransparentButtons, {\n        onClick: function onClick() {\n          return _this2.props.history.goBack();\n        },\n        className: \"float grey-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Go Back\")), CreateCampaign.error && React.createElement(\"div\", {\n        className: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, CreateCampaign.error)));\n    }\n  }]);\n\n  return StepFour;\n}(Component);\n\nexport default ConnectComponent(StepFour);","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/pages/EmailCampaign/components/steps/step4.js"],"names":["React","Component","ConnectComponent","Stepper","Radio","SmallHeading","ColoredButtons","TransparentButtons","WrapComponents","UploadContent","GetCampaign","StepFour","state","campaign_id","steps","uploadCsv","fileUploaded","handleFileChange","e","files","target","length","response","setState","console","log","props","match","params","CreateCampaign","data","key","value","history","goBack","error"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ConnectComponent from '@/connect'\nimport Stepper from '@/components/stepper'\nimport { Radio } from '@/components/radio'\nimport { SmallHeading } from '@/components/headings'\nimport { ColoredButtons, TransparentButtons } from '@/components/button'\nimport WrapComponents from '@/components/wrapper'\nimport { UploadContent, GetCampaign } from '@/actions/CreateCampaign/emailCampaign'\n\nclass StepFour extends Component {\n    state = {\n        campaign_id: '',\n        steps: ['Channel', 'Message', 'Scheduling', 'Segmentation', 'Overview & Send'],\n        uploadCsv: false,\n        fileUploaded: false,\n    }\n\n    componentWillMount() {\n        const {\n            params: { campaign_id },\n        } = this.props.match\n        this.setState({\n            campaign_id,\n        })\n        if (!this.props.CreateCampaign.data) {\n            GetCampaign(campaign_id)\n        }\n    }\n\n    handleInputFields(key, value) {\n        if (!value) {\n            this.setState({\n                [key]: value,\n            })\n        } else {\n            this.setState({\n                [key]: value,\n            })\n        }\n    }\n\n    handleFileChange = async e => {\n        const { files } = e.target\n        if (files.length) {\n            const response = await UploadContent(files[0], 'user_segment')\n            if (response) {\n                this.setState({\n                    fileUploaded: true,\n                })\n            }\n            console.log(response)\n        }\n    }\n\n    render() {\n        const { steps, uploadCsv, fileUploaded } = this.state\n        const { CreateCampaign } = this.props\n        return (\n            <WrapComponents>\n                <Stepper steps={steps} activeStep={3} />\n                <div>\n                    <div className=\"section-left\">\n                        <div className=\"section \">\n                            <SmallHeading>Target Audience</SmallHeading>\n                            <Radio\n                                checked={uploadCsv}\n                                onClick={() => this.setState({ uploadCsv: !uploadCsv })}\n                            >\n                                Upload CSV\n                            </Radio>\n                            {uploadCsv && (\n                                <div className=\"section mrgn-top-15\">\n                                    <div className=\"upload-file-section\">\n                                        <SmallHeading>Upload CSV file</SmallHeading>\n                                        <label htmlFor=\"uploadFile\" className=\"upload-box\">\n                                            <input\n                                                type=\"file\"\n                                                id=\"uploadFile\"\n                                                onChange={this.handleFileChange}\n                                                accept=\".csv\"\n                                                className=\"upload-file\"\n                                            />\n                                        </label>\n                                    </div>\n                                    {fileUploaded && (\n                                        <div className=\"success\">\n                                            File has been uploaded successfully\n                                        </div>\n                                    )}\n                                </div>\n                            )}\n                        </div>\n                        <ColoredButtons as=\"link\" to=\"/email/step-5\" className=\"float\">\n                            Continue\n                        </ColoredButtons>\n                        <TransparentButtons\n                            onClick={() => this.props.history.goBack()}\n                            className=\"float grey-border\"\n                        >\n                            Go Back\n                        </TransparentButtons>\n                    </div>\n                    {CreateCampaign.error && <div className=\"alert\">{CreateCampaign.error}</div>}\n                </div>\n            </WrapComponents>\n        )\n    }\n}\nexport default ConnectComponent(StepFour)\n"]},"metadata":{},"sourceType":"module"}