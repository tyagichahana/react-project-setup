{"ast":null,"code":"import _defineProperty from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chahanatyagi/Work/cm-frontend/src/pages/SMSCampaign/Components/steps/step2.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport history from '@/utils/history';\nimport Stepper from '@/components/stepper';\nimport ConnectComponent from '../../../../connect';\nimport WrapComponents from '@/components/wrapper';\nimport Alert from '@/components/alert';\nimport Loader from '@/components/loader';\nimport { SmallHeading } from '@/components/headings';\nimport { ColoredButtons, TransparentButtons } from '@/components/button';\nimport { GetCampaign, SaveStep2 } from '@/actions/CreateCampaign/emailCampaign';\nimport './index.scss';\n\nvar StepTwo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StepTwo, _Component);\n\n  function StepTwo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StepTwo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StepTwo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      steps: ['Channel', 'Message', 'Scheduling', 'Segmentation', 'Overview'],\n      message: '',\n      messageError: false,\n      campaignId: '',\n      emoji: '',\n      textCount: 0\n    };\n\n    _this.handleContinue = function () {\n      var message = _this.state.message;\n      var anyError = false;\n\n      if (message === '') {\n        _this.setState({\n          messageError: true\n        });\n\n        anyError = true;\n      }\n\n      if (!anyError) {\n        var _this$state = _this.state,\n            steps = _this$state.steps,\n            campaignId = _this$state.campaignId,\n            messageError = _this$state.messageError,\n            emoji = _this$state.emoji,\n            rest = _objectWithoutProperties(_this$state, [\"steps\", \"campaignId\", \"messageError\", \"emoji\"]);\n\n        var data = _this.props.CreateCampaign.data;\n        SaveStep2(_objectSpread({}, _.assign({}, data, rest)));\n        history.push(\"/sms/step-3/\".concat(campaignId));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(StepTwo, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var campaignId, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                campaignId = this.props.match.params.campaignId;\n                this.setState({\n                  campaignId: campaignId\n                });\n                _context.next = 4;\n                return GetCampaign(campaignId);\n\n              case 4:\n                res = _context.sent;\n                this.setState({\n                  message: _.get(res, 'message', '')\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"handleInputFields\",\n    value: function handleInputFields(key, value) {\n      this.setState({\n        textCount: value.length\n      });\n      this.setState(_defineProperty({}, key, value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          steps = _this$state2.steps,\n          message = _this$state2.message,\n          messageError = _this$state2.messageError,\n          emoji = _this$state2.emoji,\n          textCount = _this$state2.textCount;\n      var _this$props$CreateCam = this.props.CreateCampaign,\n          error = _this$props$CreateCam.error,\n          loading = _this$props$CreateCam.loading;\n\n      if (loading) {\n        return React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(WrapComponents, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Stepper, {\n        steps: steps,\n        activeStep: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Create Message\"), messageError && React.createElement(Alert, {\n        className: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"*This field is Required\"), error && React.createElement(Alert, {\n        className: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"*This field is Required\"), React.createElement(\"textarea\", {\n        placeholder: \"Write your message here( *less than equal to 1000 words)\",\n        name: \"message\",\n        className: \"text-area\",\n        value: message,\n        onChange: function onChange(e) {\n          return _this2.handleInputFields('message', e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"text-count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, textCount, \"/300\")), React.createElement(ColoredButtons, {\n        onClick: this.handleContinue,\n        className: \"float\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Continue\"), React.createElement(TransparentButtons, {\n        onClick: function onClick() {\n          return _this2.props.history.goBack();\n        },\n        className: \"float grey-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Go Back\"));\n    }\n  }]);\n\n  return StepTwo;\n}(Component);\n\nexport default ConnectComponent(StepTwo);","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/pages/SMSCampaign/Components/steps/step2.js"],"names":["React","Component","_","history","Stepper","ConnectComponent","WrapComponents","Alert","Loader","SmallHeading","ColoredButtons","TransparentButtons","GetCampaign","SaveStep2","StepTwo","state","steps","message","messageError","campaignId","emoji","textCount","handleContinue","anyError","setState","rest","data","props","CreateCampaign","assign","push","match","params","res","get","key","value","length","error","loading","e","handleInputFields","target","goBack"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport _ from 'lodash'\nimport history from '@/utils/history'\nimport Stepper from '@/components/stepper'\nimport ConnectComponent from '../../../../connect'\nimport WrapComponents from '@/components/wrapper'\nimport Alert from '@/components/alert'\nimport Loader from '@/components/loader'\nimport { SmallHeading } from '@/components/headings'\nimport { ColoredButtons, TransparentButtons } from '@/components/button'\nimport { GetCampaign, SaveStep2 } from '@/actions/CreateCampaign/emailCampaign'\nimport './index.scss'\n\nclass StepTwo extends Component {\n    state = {\n        steps: ['Channel', 'Message', 'Scheduling', 'Segmentation', 'Overview'],\n        message: '',\n        messageError: false,\n        campaignId: '',\n        emoji: '',\n        textCount: 0,\n    }\n\n    async componentWillMount() {\n        const {\n            params: { campaignId },\n        } = this.props.match\n        this.setState({\n            campaignId,\n        })\n        const res = await GetCampaign(campaignId)\n        this.setState({\n            message: _.get(res, 'message', ''),\n        })\n    }\n\n    handleInputFields(key, value) {\n        this.setState({ textCount: value.length })\n        this.setState({\n            [key]: value,\n        })\n    }\n\n    handleContinue = () => {\n        const { message } = this.state\n        let anyError = false\n        if (message === '') {\n            this.setState({\n                messageError: true,\n            })\n            anyError = true\n        }\n        if (!anyError) {\n            const { steps, campaignId, messageError, emoji, ...rest } = this.state\n            const { data } = this.props.CreateCampaign\n            SaveStep2({ ..._.assign({}, data, rest) })\n            history.push(`/sms/step-3/${campaignId}`)\n        }\n    }\n\n    render() {\n        const { steps, message, messageError, emoji, textCount } = this.state\n        const { error, loading } = this.props.CreateCampaign\n        if (loading) {\n            return <Loader />\n        }\n\n        return (\n            <WrapComponents>\n                <Stepper steps={steps} activeStep={1} />\n                <div className=\"section\">\n                    <SmallHeading>Create Message</SmallHeading>\n                    {messageError && <Alert className=\"alert\">*This field is Required</Alert>}\n                    {error && <Alert className=\"alert\">*This field is Required</Alert>}\n                    <textarea\n                        placeholder=\"Write your message here( *less than equal to 1000 words)\"\n                        name=\"message\"\n                        className=\"text-area\"\n                        value={message}\n                        onChange={e => this.handleInputFields('message', e.target.value)}\n                    />\n                    <span className=\"text-count\">{textCount}/300</span>\n                    {/* <div className=\"dotted-line\" /> */}\n                    {/* <Checkbox onClick={() => this.setState({ clickURL: !clickURL })}>\n                        Track SMS Click for URL\n                    </Checkbox>\n                    {clickURL && (\n                        <input\n                            className=\"form-input mrgn-top-15\"\n                            placeholder=\"Paste/Type the URL you want to track\"\n                            name=\"clickURLvalue\"\n                            value={clickURLvalue}\n                            onChange={e => this.handleInputFields('clickURLvalue', e.target.value)}\n                        />\n                    )} */}\n                </div>\n\n                <ColoredButtons onClick={this.handleContinue} className=\"float\">\n                    Continue\n                </ColoredButtons>\n                <TransparentButtons\n                    onClick={() => this.props.history.goBack()}\n                    className=\"float grey-border\"\n                >\n                    Go Back\n                </TransparentButtons>\n            </WrapComponents>\n        )\n    }\n}\n\nexport default ConnectComponent(StepTwo)\n"]},"metadata":{},"sourceType":"module"}