{"ast":null,"code":"import _defineProperty from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chahanatyagi/Work/cm-frontend/src/pages/Campaign/CreateCampaign/PushNotification/step1.js\";\nimport React, { Component } from 'react';\nimport { ColoredButtons, TransparentButtons } from '@/components/button';\nimport { SmallHeading } from '@/components/headings';\nimport { Checkbox } from '@/components/checkBox';\nimport { Radio } from '@/components/radio';\nimport Stepper from '@/components/stepper';\nimport WrapComponents from '@/components/wrapper';\n\nvar StepOne =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StepOne, _Component);\n\n  function StepOne() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StepOne);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StepOne)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      steps: ['Channel', 'Message', 'Segmentation', 'Scheduling', 'Overview'],\n      deviceType: [{\n        name: 'IOS',\n        checked: false\n      }, {\n        name: 'Android',\n        checked: false\n      }, {\n        name: 'Web',\n        checked: false\n      }, {\n        name: 'Mobile',\n        checked: false\n      }, {\n        name: 'Tablet',\n        checked: false\n      }],\n      type: [{\n        name: 'General Campaign',\n        checked: false\n      }, {\n        name: 'Trigger Campaign',\n        checked: false\n      }]\n    };\n\n    _this.saveAndContinue = function (e) {\n      e.preventDefault();\n\n      _this.props.nextStep();\n    };\n\n    _this.back = function (e) {\n      e.preventDefault();\n\n      _this.props.prevStep();\n    };\n\n    _this.handleCheckbox = function (check) {\n      var devices = _this.state.devices;\n\n      _this.setState({\n        devices: devices.map(function (part) {\n          if (part.name === check.name) {\n            part.checked = !check.checked;\n          }\n\n          return part;\n        })\n      });\n    };\n\n    _this.handleRadio = function (check) {\n      console.log(_this.props, 'props for step 1 component');\n      var type = _this.state.type;\n\n      _this.setState({\n        type: type.map(function (part) {\n          if (part.name === check.name) {\n            part.checked = true;\n          } else {\n            part.checked = false;\n          }\n\n          return part;\n        })\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(StepOne, [{\n    key: \"handleInputFields\",\n    value: function handleInputFields(key, value) {\n      if (!value) {\n        this.setState(_defineProperty({}, key, value));\n      } else {\n        this.setState(_defineProperty({}, key, value));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state, 'state');\n      var _this$state = this.state,\n          steps = _this$state.steps,\n          devices = _this$state.devices,\n          type = _this$state.type;\n      return React.createElement(WrapComponents, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Stepper, {\n        steps: steps,\n        activeStep: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Campaign Name\"), React.createElement(\"input\", {\n        placeholder: \"Enter Campaign Name\",\n        type: \"text\",\n        className: \"form-input\",\n        name: \"name\",\n        value: this.state.name,\n        onChange: function onChange(e) {\n          return _this2.handleInputFields('name', e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Platforms\"), React.createElement(\"div\", {\n        className: \"mrgn-top-15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, devices.map(function (part) {\n        if (part.name === 'Web') {\n          return React.createElement(\"span\", {\n            key: part.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, React.createElement(Checkbox, {\n            onClick: function onClick() {\n              return _this2.handleCheckbox(part);\n            },\n            name: \"device\",\n            checked: part.checked,\n            id: part.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, part.name), React.createElement(\"div\", {\n            className: \"line\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, \"|\"));\n        }\n\n        return React.createElement(Checkbox, {\n          key: part.name,\n          onClick: function onClick() {\n            return _this2.handleCheckbox(part);\n          },\n          name: \"device\",\n          id: part.name,\n          checked: part.checked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, part.name);\n      }))), React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Campaign Type\"), React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, type.map(function (part) {\n        return React.createElement(Radio, {\n          onClick: function onClick() {\n            return _this2.handleRadio(part);\n          },\n          key: part.name,\n          checked: part.checked,\n          id: part.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, part.name);\n      }))), React.createElement(ColoredButtons, {\n        onClick: this.saveAndContinue,\n        className: \"float\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Continue\"), React.createElement(TransparentButtons, {\n        onClick: this.back,\n        className: \"float\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"back\"));\n    }\n  }]);\n\n  return StepOne;\n}(Component);\n\nexport default StepOne;","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/pages/Campaign/CreateCampaign/PushNotification/step1.js"],"names":["React","Component","ColoredButtons","TransparentButtons","SmallHeading","Checkbox","Radio","Stepper","WrapComponents","StepOne","state","steps","deviceType","name","checked","type","saveAndContinue","e","preventDefault","props","nextStep","back","prevStep","handleCheckbox","check","devices","setState","map","part","handleRadio","console","log","key","value","handleInputFields","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { ColoredButtons, TransparentButtons } from '@/components/button'\nimport { SmallHeading } from '@/components/headings'\nimport { Checkbox } from '@/components/checkBox'\nimport { Radio } from '@/components/radio'\nimport Stepper from '@/components/stepper'\nimport WrapComponents from '@/components/wrapper'\n\nclass StepOne extends Component {\n    state = {\n        steps: ['Channel', 'Message', 'Segmentation', 'Scheduling', 'Overview'],\n        deviceType: [\n            {\n                name: 'IOS',\n                checked: false,\n            },\n            {\n                name: 'Android',\n                checked: false,\n            },\n            {\n                name: 'Web',\n                checked: false,\n            },\n            {\n                name: 'Mobile',\n                checked: false,\n            },\n            {\n                name: 'Tablet',\n                checked: false,\n            },\n        ],\n        type: [\n            {\n                name: 'General Campaign',\n                checked: false,\n            },\n            {\n                name: 'Trigger Campaign',\n                checked: false,\n            },\n        ],\n    }\n    saveAndContinue = e => {\n        e.preventDefault()\n        this.props.nextStep()\n    }\n\n    back = e => {\n        e.preventDefault()\n        this.props.prevStep()\n    }\n\n    handleInputFields(key, value) {\n        if (!value) {\n            this.setState({\n                [key]: value,\n            })\n        } else {\n            this.setState({\n                [key]: value,\n            })\n        }\n    }\n\n    handleCheckbox = check => {\n        const { devices } = this.state\n        this.setState({\n            devices: devices.map(part => {\n                if (part.name === check.name) {\n                    part.checked = !check.checked\n                }\n                return part\n            }),\n        })\n    }\n\n    handleRadio = check => {\n        console.log(this.props, 'props for step 1 component')\n        const { type } = this.state\n        this.setState({\n            type: type.map(part => {\n                if (part.name === check.name) {\n                    part.checked = true\n                } else {\n                    part.checked = false\n                }\n                return part\n            }),\n        })\n    }\n\n    render() {\n        console.log(this.state, 'state')\n        const { steps, devices, type } = this.state\n        return (\n            <WrapComponents>\n                <Stepper steps={steps} activeStep={0} />\n                <div className=\"section\">\n                    <SmallHeading>Campaign Name</SmallHeading>\n                    <input\n                        placeholder=\"Enter Campaign Name\"\n                        type=\"text\"\n                        className=\"form-input\"\n                        name=\"name\"\n                        value={this.state.name}\n                        onChange={e => this.handleInputFields('name', e.target.value)}\n                    />\n                </div>\n                <div className=\"section\">\n                    <SmallHeading>Platforms</SmallHeading>\n                    <div className=\"mrgn-top-15\">\n                        {devices.map(part => {\n                            if (part.name === 'Web') {\n                                return (\n                                    <span key={part.name}>\n                                        <Checkbox\n                                            onClick={() => this.handleCheckbox(part)}\n                                            name=\"device\"\n                                            checked={part.checked}\n                                            id={part.name}\n                                        >\n                                            {part.name}\n                                        </Checkbox>\n                                        <div className=\"line\">|</div>\n                                    </span>\n                                )\n                            }\n                            return (\n                                <Checkbox\n                                    key={part.name}\n                                    onClick={() => this.handleCheckbox(part)}\n                                    name=\"device\"\n                                    id={part.name}\n                                    checked={part.checked}\n                                >\n                                    {part.name}\n                                </Checkbox>\n                            )\n                        })}\n                    </div>\n                </div>\n                <div className=\"section\">\n                    <SmallHeading>Campaign Type</SmallHeading>\n                    <div className=\"\">\n                        {type.map(part => (\n                            <Radio\n                                onClick={() => this.handleRadio(part)}\n                                key={part.name}\n                                checked={part.checked}\n                                id={part.name}\n                            >\n                                {part.name}\n                            </Radio>\n                        ))}\n                    </div>\n                </div>\n                <ColoredButtons onClick={this.saveAndContinue} className=\"float\">\n                    Continue\n                </ColoredButtons>\n                <TransparentButtons onClick={this.back} className=\"float\">\n                    back\n                </TransparentButtons>\n            </WrapComponents>\n        )\n    }\n}\n\nexport default StepOne\n"]},"metadata":{},"sourceType":"module"}