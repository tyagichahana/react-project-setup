{"ast":null,"code":"import _classCallCheck from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chahanatyagi/Work/cm-frontend/src/pages/Segmentation/createSegment.js\";\nimport React, { Component } from 'react';\nimport WrapComponents from '@/components/wrapper';\nimport { Radio } from '@/components/radio';\nimport CreateRuleImport from './CreateRule';\nimport './index.scss';\nimport { SmallHeading } from '@/components/headings/index';\n\nvar CreateSegementation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateSegementation, _Component);\n\n  function CreateSegementation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateSegementation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateSegementation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      createSegment: true,\n      inCludeType: 'createRule',\n      exCludeType: 'createRule'\n    };\n\n    _this.handleFileChange = function () {};\n\n    return _this;\n  }\n\n  _createClass(CreateSegementation, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          createSegment = _this$state.createSegment,\n          inCludeType = _this$state.inCludeType,\n          exCludeType = _this$state.exCludeType;\n      return React.createElement(\"div\", {\n        className: \"mrgn-top-15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Create Segment\"), createSegment && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"s-btn mrgn-top-15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Include \", React.createElement(\"b\", {\n        style: {\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"+\")), React.createElement(Radio, {\n        checked: inCludeType === 'customSegment' ? true : false,\n        onChange: function onChange() {\n          return _this2.setState({\n            inCludeType: 'customSegment'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Custom Segment\"), React.createElement(Radio, {\n        checked: inCludeType === 'uploadCSV' ? true : false,\n        onChange: function onChange() {\n          return _this2.setState({\n            inCludeType: 'uploadCSV'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"CSV Upload\"), React.createElement(Radio, {\n        checked: inCludeType === 'createRule' ? true : false,\n        onChange: function onChange() {\n          return _this2.setState({\n            inCludeType: 'createRule'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Create Rule\"), function () {\n        switch (_this2.state.inCludeType) {\n          case 'createRule':\n            return React.createElement(CreateRuleImport, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 49\n              },\n              __self: this\n            });\n\n          case 'uploadCSV':\n            return React.createElement(\"div\", {\n              className: \"section mrgn-top-15\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 52\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"upload-file-section\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53\n              },\n              __self: this\n            }, React.createElement(SmallHeading, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54\n              },\n              __self: this\n            }, \"Upload CSV file\"), React.createElement(\"label\", {\n              htmlFor: \"uploadFile\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              type: \"file\",\n              id: \"uploadFile\",\n              onChange: _this2.handleFileChange,\n              accept: \".csv\",\n              className: \"upload-file\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56\n              },\n              __self: this\n            }))));\n\n          default:\n            return React.createElement(\"div\", {\n              className: \"section\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70\n              },\n              __self: this\n            }, \"Custom Segments Are not Available\");\n        }\n      }(), React.createElement(\"div\", {\n        className: \"dotted-line mrgn-top-bottom-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"s-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Exclude \", React.createElement(\"b\", {\n        style: {\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"-\")), React.createElement(Radio, {\n        checked: exCludeType === 'customSegment' ? true : false,\n        onChange: function onChange() {\n          return _this2.setState({\n            exCludeType: 'customSegment'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Custom Segment\"), React.createElement(Radio, {\n        checked: exCludeType === 'customSegment' ? true : false,\n        onChange: function onChange() {\n          return _this2.setState({\n            exCludeType: 'uploadCSV'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"CSV Upload\"), React.createElement(Radio, {\n        checked: exCludeType === 'createRule' ? true : false,\n        onChange: function onChange() {\n          return _this2.setState({\n            exCludeType: 'createRule'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Create Rule\"), function () {\n        switch (exCludeType) {\n          case 'createRule':\n            return React.createElement(CreateRuleImport, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 103\n              },\n              __self: this\n            });\n\n          case 'uploadCSV':\n            return React.createElement(\"div\", {\n              className: \"section\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105\n              },\n              __self: this\n            }, \"gruploadCSV\");\n\n          default:\n            return React.createElement(\"div\", {\n              className: \"section\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107\n              },\n              __self: this\n            }, \"createRule\");\n        }\n      }()))));\n    }\n  }]);\n\n  return CreateSegementation;\n}(Component);\n\nexport default CreateSegementation;","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/pages/Segmentation/createSegment.js"],"names":["React","Component","WrapComponents","Radio","CreateRuleImport","SmallHeading","CreateSegementation","state","createSegment","inCludeType","exCludeType","handleFileChange","fontWeight","setState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport WrapComponents from '@/components/wrapper'\nimport { Radio } from '@/components/radio'\nimport CreateRuleImport from './CreateRule'\nimport './index.scss'\nimport { SmallHeading } from '@/components/headings/index'\n\nclass CreateSegementation extends Component {\n    state = {\n        createSegment: true,\n        inCludeType: 'createRule',\n        exCludeType: 'createRule',\n    }\n    handleFileChange = () => {}\n    render() {\n        const { createSegment, inCludeType, exCludeType } = this.state\n        return (\n            <div className=\"mrgn-top-15\">\n                <div className=\"section\">\n                    <SmallHeading>Create Segment</SmallHeading>\n                    {createSegment && (\n                        <>\n                            <div className=\"s-btn mrgn-top-15\">\n                                Include <b style={{ fontWeight: 'bolder' }}>+</b>\n                            </div>\n                            <Radio\n                                checked={inCludeType === 'customSegment' ? true : false}\n                                onChange={() => this.setState({ inCludeType: 'customSegment' })}\n                            >\n                                Custom Segment\n                            </Radio>\n                            <Radio\n                                checked={inCludeType === 'uploadCSV' ? true : false}\n                                onChange={() => this.setState({ inCludeType: 'uploadCSV' })}\n                            >\n                                CSV Upload\n                            </Radio>\n                            <Radio\n                                checked={inCludeType === 'createRule' ? true : false}\n                                onChange={() => this.setState({ inCludeType: 'createRule' })}\n                            >\n                                Create Rule\n                            </Radio>\n                            {/* <hr className=\"mrgn-top-bottom-30\" /> */}\n\n                            {(() => {\n                                switch (this.state.inCludeType) {\n                                    case 'createRule':\n                                        return <CreateRuleImport />\n                                    case 'uploadCSV':\n                                        return (\n                                            <div className=\"section mrgn-top-15\">\n                                                <div className=\"upload-file-section\">\n                                                    <SmallHeading>Upload CSV file</SmallHeading>\n                                                    <label htmlFor=\"uploadFile\">\n                                                        <input\n                                                            type=\"file\"\n                                                            id=\"uploadFile\"\n                                                            onChange={this.handleFileChange}\n                                                            accept=\".csv\"\n                                                            className=\"upload-file\"\n                                                        />\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        )\n\n                                    default:\n                                        return (\n                                            <div className=\"section\">\n                                                Custom Segments Are not Available\n                                            </div>\n                                        )\n                                }\n                            })()}\n                            <div className=\"dotted-line mrgn-top-bottom-30\" />\n\n                            <>\n                                <div className=\"s-btn\">\n                                    Exclude <b style={{ fontWeight: 'bolder' }}>-</b>\n                                </div>\n                                <Radio\n                                    checked={exCludeType === 'customSegment' ? true : false}\n                                    onChange={() => this.setState({ exCludeType: 'customSegment' })}\n                                >\n                                    Custom Segment\n                                </Radio>\n                                <Radio\n                                    checked={exCludeType === 'customSegment' ? true : false}\n                                    onChange={() => this.setState({ exCludeType: 'uploadCSV' })}\n                                >\n                                    CSV Upload\n                                </Radio>\n                                <Radio\n                                    checked={exCludeType === 'createRule' ? true : false}\n                                    onChange={() => this.setState({ exCludeType: 'createRule' })}\n                                >\n                                    Create Rule\n                                </Radio>\n                                {(() => {\n                                    switch (exCludeType) {\n                                        case 'createRule':\n                                            return <CreateRuleImport />\n                                        case 'uploadCSV':\n                                            return <div className=\"section\">gruploadCSV</div>\n                                        default:\n                                            return <div className=\"section\">createRule</div>\n                                    }\n                                })()}\n                            </>\n                        </>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CreateSegementation\n"]},"metadata":{},"sourceType":"module"}