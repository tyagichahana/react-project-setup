{"ast":null,"code":"import _classCallCheck from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chahanatyagi/Work/cm-frontend/src/pages/Segmentation/index.js\";\nimport React, { Component } from 'react';\nimport WrapComponents from '@/components/wrapper';\nimport { Radio } from '@/components/radio';\nimport './index.scss';\n\nvar Segementation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Segementation, _Component);\n\n  function Segementation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Segementation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Segementation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      createSegment: true,\n      inCludeType: 'createRule',\n      exCludeType: 'createRule'\n    };\n    return _this;\n  }\n\n  _createClass(Segementation, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          createSegment = _this$state.createSegment,\n          inCludeType = _this$state.inCludeType,\n          exCludeType = _this$state.exCludeType;\n      return React.createElement(WrapComponents, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(Radio, {\n        checked: !createSegment,\n        onClick: function onClick() {\n          return _this2.setState({\n            createSegment: !createSegment\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"All User\"), React.createElement(Radio, {\n        checked: createSegment,\n        onClick: function onClick() {\n          return _this2.setState({\n            createSegment: !createSegment\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Create Segment\"), createSegment && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"s-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Include \", React.createElement(\"b\", {\n        style: {\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"+\")), React.createElement(Radio, {\n        checked: inCludeType === 'customSegment' ? true : false,\n        onChange: function onChange() {\n          return _this2.setState({\n            inCludeType: 'customSegment'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Custom Segment\"), React.createElement(Radio, {\n        checked: inCludeType === 'uploadCSV' ? true : false,\n        onChange: function onChange() {\n          return _this2.setState({\n            inCludeType: 'uploadCSV'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"CSV Upload\"), React.createElement(Radio, {\n        checked: inCludeType === 'createRule' ? true : false,\n        onChange: function onChange() {\n          return _this2.setState({\n            inCludeType: 'createRule'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Create Rule\"), React.createElement(\"div\", {\n        className: \"dotted-line mrgn-top-bottom-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), \"if (inCludeType==='createRule')\", React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"s-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Exclude \", React.createElement(\"b\", {\n        style: {\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"-\")), React.createElement(Radio, {\n        checked: exCludeType === 'customSegment' ? true : false,\n        onChange: function onChange() {\n          return _this2.setState({\n            exCludeType: 'customSegment'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Custom Segment\"), React.createElement(Radio, {\n        checked: exCludeType === 'customSegment' ? true : false,\n        onChange: function onChange() {\n          return _this2.setState({\n            exCludeType: 'customSegment'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"CSV Upload\"), React.createElement(Radio, {\n        checked: exCludeType === 'customSegment' ? true : false,\n        onChange: function onChange() {\n          return _this2.setState({\n            exCludeType: 'customSegment'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Create Rule\"), React.createElement(\"div\", {\n        className: \"dotted-line mrgn-top-bottom-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Segementation;\n}(Component);\n\nexport default Segementation;","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/pages/Segmentation/index.js"],"names":["React","Component","WrapComponents","Radio","Segementation","state","createSegment","inCludeType","exCludeType","setState","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport WrapComponents from '@/components/wrapper'\nimport { Radio } from '@/components/radio'\nimport './index.scss'\n\nclass Segementation extends Component {\n    state = {\n        createSegment: true,\n        inCludeType: 'createRule',\n        exCludeType: 'createRule',\n    }\n    render() {\n        const { createSegment, inCludeType, exCludeType } = this.state\n        return (\n            <WrapComponents>\n                <div className=\"section\">\n                    <Radio\n                        checked={!createSegment}\n                        onClick={() => this.setState({ createSegment: !createSegment })}\n                    >\n                        All User\n                    </Radio>\n                    <Radio\n                        checked={createSegment}\n                        onClick={() => this.setState({ createSegment: !createSegment })}\n                    >\n                        Create Segment\n                    </Radio>\n                    {createSegment && (\n                        <>\n                            <div className=\"s-btn\">\n                                Include <b style={{ fontWeight: 'bolder' }}>+</b>\n                            </div>\n                            <Radio\n                                checked={inCludeType === 'customSegment' ? true : false}\n                                onChange={() => this.setState({ inCludeType: 'customSegment' })}\n                            >\n                                Custom Segment\n                            </Radio>\n                            <Radio\n                                checked={inCludeType === 'uploadCSV' ? true : false}\n                                onChange={() => this.setState({ inCludeType: 'uploadCSV' })}\n                            >\n                                CSV Upload\n                            </Radio>\n                            <Radio\n                                checked={inCludeType === 'createRule' ? true : false}\n                                onChange={() => this.setState({ inCludeType: 'createRule' })}\n                            >\n                                Create Rule\n                            </Radio>\n                            <div className=\"dotted-line mrgn-top-bottom-30\" />\n                            if (inCludeType==='createRule'){}\n                            <>\n                                <div className=\"s-btn\">\n                                    Exclude <b style={{ fontWeight: 'bolder' }}>-</b>\n                                </div>\n                                <Radio\n                                    checked={exCludeType === 'customSegment' ? true : false}\n                                    onChange={() => this.setState({ exCludeType: 'customSegment' })}\n                                >\n                                    Custom Segment\n                                </Radio>\n                                <Radio\n                                    checked={exCludeType === 'customSegment' ? true : false}\n                                    onChange={() => this.setState({ exCludeType: 'customSegment' })}\n                                >\n                                    CSV Upload\n                                </Radio>\n                                <Radio\n                                    checked={exCludeType === 'customSegment' ? true : false}\n                                    onChange={() => this.setState({ exCludeType: 'customSegment' })}\n                                >\n                                    Create Rule\n                                </Radio>\n                                <div className=\"dotted-line mrgn-top-bottom-30\" />\n                            </>\n                        </>\n                    )}\n                </div>\n            </WrapComponents>\n        )\n    }\n}\n\nexport default Segementation\n"]},"metadata":{},"sourceType":"module"}