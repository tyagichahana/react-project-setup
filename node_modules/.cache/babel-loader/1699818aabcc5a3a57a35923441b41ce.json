{"ast":null,"code":"import _defineProperty from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chahanatyagi/Work/cm-frontend/src/pages/PushNotification/step1.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport { ColoredButtons, TransparentButtons } from '@/components/button';\nimport { SmallHeading } from '@/components/headings';\nimport { Checkbox } from '@/components/checkBox';\nimport { Radio } from '@/components/radio';\nimport Stepper from '@/components/stepper';\nimport WrapComponents from '@/components/wrapper';\n\nvar StepOne =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StepOne, _Component);\n\n  function StepOne() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StepOne);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StepOne)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: '',\n      nameError: false,\n      steps: ['Channel', 'Message', 'Scheduling', 'Segmentation', 'Overview'],\n      deviceType: [{\n        name: 'Android',\n        checked: false\n      }, {\n        name: 'iOS',\n        checked: false\n      }, {\n        name: 'Web',\n        checked: false\n      }],\n      deviceTypeError: false,\n      type: [{\n        name: 'General Campaign',\n        checked: true\n      }]\n    };\n\n    _this._checkHasError = function (data) {\n      var anyChecked = false;\n\n      _.forEach(data, function (part) {\n        if (part.checked) {\n          anyChecked = true;\n        }\n      });\n\n      return anyChecked;\n    };\n\n    _this.handleContinue = function () {\n      var _this$state = _this.state,\n          name = _this$state.name,\n          deviceType = _this$state.deviceType,\n          type = _this$state.type;\n      var anyError = false;\n\n      if (name === '') {\n        _this.setState({\n          nameError: true\n        });\n\n        anyError = true;\n      }\n\n      if (!_this._checkHasError(deviceType)) {\n        _this.setState({\n          deviceTypeError: true\n        });\n\n        anyError = true;\n      }\n\n      if (!_this._checkHasError(type)) {\n        _this.setState({\n          typeError: true\n        });\n\n        anyError = true;\n      }\n\n      if (!anyError) {\n        _this.props.onSubmit({\n          name: name,\n          deviceType: deviceType,\n          type: type\n        });\n      }\n    };\n\n    _this.back = function (e) {\n      e.preventDefault();\n\n      _this.props.prevStep();\n    };\n\n    _this.handleCheckbox = function (check) {\n      var deviceType = _this.state.deviceType;\n\n      _this.setState({\n        deviceType: deviceType.map(function (part) {\n          if (part.name === check.name) {\n            part.checked = !check.checked;\n          }\n\n          return part;\n        })\n      });\n    };\n\n    _this.handleRadio = function (check) {\n      var type = _this.state.type;\n\n      _this.setState({\n        type: type.map(function (part) {\n          if (part.name === check.name) {\n            part.checked = true;\n          } else {\n            part.checked = false;\n          }\n\n          return part;\n        })\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(StepOne, [{\n    key: \"handleInputFields\",\n    value: function handleInputFields(key, value) {\n      if (!value) {\n        this.setState(_defineProperty({}, key, value));\n      } else {\n        this.setState(_defineProperty({}, key, value));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          steps = _this$state2.steps,\n          deviceType = _this$state2.deviceType,\n          type = _this$state2.type,\n          deviceTypeError = _this$state2.deviceTypeError,\n          nameError = _this$state2.nameError;\n      return React.createElement(WrapComponents, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Stepper, {\n        steps: steps,\n        activeStep: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, nameError && React.createElement(\"div\", {\n        className: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"*this is mandatory field\"), React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Campaign Name*\"), React.createElement(\"input\", {\n        placeholder: \"Enter Campaign Name\",\n        type: \"text\",\n        className: \"form-input\",\n        name: \"name\",\n        value: this.state.name,\n        onChange: function onChange(e) {\n          return _this2.handleInputFields('name', e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Platforms*\"), deviceTypeError && React.createElement(\"div\", {\n        className: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"*this is mandatory field\"), React.createElement(\"div\", {\n        className: \"mrgn-top-15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, deviceType.map(function (part) {\n        return React.createElement(Checkbox, {\n          key: part.name,\n          onClick: function onClick() {\n            return _this2.handleCheckbox(part);\n          },\n          name: \"device\",\n          id: part.name,\n          checked: part.checked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, part.name);\n      }))), React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Campaign Type\"), React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, type.map(function (part) {\n        return React.createElement(Radio, {\n          onClick: function onClick() {\n            return _this2.handleRadio(part);\n          },\n          key: part.name,\n          checked: part.checked,\n          id: part.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, part.name);\n      }))), React.createElement(ColoredButtons, {\n        as: \"link\",\n        to: \"/push-notification/step-2\",\n        className: \"float\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Continue\"), React.createElement(TransparentButtons, {\n        onClick: this.back,\n        className: \"float grey-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Back\"));\n    }\n  }]);\n\n  return StepOne;\n}(Component);\n\nexport default StepOne;","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/pages/PushNotification/step1.js"],"names":["React","Component","_","ColoredButtons","TransparentButtons","SmallHeading","Checkbox","Radio","Stepper","WrapComponents","StepOne","state","name","nameError","steps","deviceType","checked","deviceTypeError","type","_checkHasError","data","anyChecked","forEach","part","handleContinue","anyError","setState","typeError","props","onSubmit","back","e","preventDefault","prevStep","handleCheckbox","check","map","handleRadio","key","value","handleInputFields","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport _ from 'lodash'\nimport { ColoredButtons, TransparentButtons } from '@/components/button'\nimport { SmallHeading } from '@/components/headings'\nimport { Checkbox } from '@/components/checkBox'\nimport { Radio } from '@/components/radio'\nimport Stepper from '@/components/stepper'\nimport WrapComponents from '@/components/wrapper'\n\nclass StepOne extends Component {\n    state = {\n        name: '',\n        nameError: false,\n        steps: ['Channel', 'Message', 'Scheduling', 'Segmentation', 'Overview'],\n        deviceType: [\n            {\n                name: 'Android',\n                checked: false,\n            },\n            {\n                name: 'iOS',\n                checked: false,\n            },\n            {\n                name: 'Web',\n                checked: false,\n            },\n        ],\n        deviceTypeError: false,\n        type: [\n            {\n                name: 'General Campaign',\n                checked: true,\n            },\n            // {\n            //     name: 'Trigger Campaign',\n            //     checked: false,\n            // },\n        ],\n    }\n\n    _checkHasError = data => {\n        let anyChecked = false\n\n        _.forEach(data, part => {\n            if (part.checked) {\n                anyChecked = true\n            }\n        })\n        return anyChecked\n    }\n\n    handleContinue = () => {\n        const { name, deviceType, type } = this.state\n\n        let anyError = false\n\n        if (name === '') {\n            this.setState({\n                nameError: true,\n            })\n            anyError = true\n        }\n\n        if (!this._checkHasError(deviceType)) {\n            this.setState({\n                deviceTypeError: true,\n            })\n            anyError = true\n        }\n\n        if (!this._checkHasError(type)) {\n            this.setState({\n                typeError: true,\n            })\n            anyError = true\n        }\n\n        if (!anyError) {\n            this.props.onSubmit({\n                name,\n                deviceType,\n                type,\n            })\n        }\n    }\n\n    back = e => {\n        e.preventDefault()\n        this.props.prevStep()\n    }\n\n    handleInputFields(key, value) {\n        if (!value) {\n            this.setState({\n                [key]: value,\n            })\n        } else {\n            this.setState({\n                [key]: value,\n            })\n        }\n    }\n\n    handleCheckbox = check => {\n        const { deviceType } = this.state\n        this.setState({\n            deviceType: deviceType.map(part => {\n                if (part.name === check.name) {\n                    part.checked = !check.checked\n                }\n                return part\n            }),\n        })\n    }\n\n    handleRadio = check => {\n        const { type } = this.state\n        this.setState({\n            type: type.map(part => {\n                if (part.name === check.name) {\n                    part.checked = true\n                } else {\n                    part.checked = false\n                }\n                return part\n            }),\n        })\n    }\n\n    render() {\n        const { steps, deviceType, type, deviceTypeError, nameError } = this.state\n        return (\n            <WrapComponents>\n                <Stepper steps={steps} activeStep={0} />\n                <div className=\"section\">\n                    {nameError && <div className=\"alert\">*this is mandatory field</div>}\n                    <SmallHeading>Campaign Name*</SmallHeading>\n                    <input\n                        placeholder=\"Enter Campaign Name\"\n                        type=\"text\"\n                        className=\"form-input\"\n                        name=\"name\"\n                        value={this.state.name}\n                        onChange={e => this.handleInputFields('name', e.target.value)}\n                    />\n                </div>\n                <div className=\"section\">\n                    <SmallHeading>Platforms*</SmallHeading>\n                    {deviceTypeError && <div className=\"alert\">*this is mandatory field</div>}\n                    <div className=\"mrgn-top-15\">\n                        {deviceType.map(part => {\n                            return (\n                                <Checkbox\n                                    key={part.name}\n                                    onClick={() => this.handleCheckbox(part)}\n                                    name=\"device\"\n                                    id={part.name}\n                                    checked={part.checked}\n                                >\n                                    {part.name}\n                                </Checkbox>\n                            )\n                        })}\n                    </div>\n                </div>\n                <div className=\"section\">\n                    <SmallHeading>Campaign Type</SmallHeading>\n                    <div className=\"\">\n                        {type.map(part => (\n                            <Radio\n                                onClick={() => this.handleRadio(part)}\n                                key={part.name}\n                                checked={part.checked}\n                                id={part.name}\n                            >\n                                {part.name}\n                            </Radio>\n                        ))}\n                    </div>\n                </div>\n                <ColoredButtons as=\"link\" to=\"/push-notification/step-2\" className=\"float\">\n                    Continue\n                </ColoredButtons>\n                <TransparentButtons onClick={this.back} className=\"float grey-border\">\n                    Back\n                </TransparentButtons>\n            </WrapComponents>\n        )\n    }\n}\n\nexport default StepOne\n"]},"metadata":{},"sourceType":"module"}