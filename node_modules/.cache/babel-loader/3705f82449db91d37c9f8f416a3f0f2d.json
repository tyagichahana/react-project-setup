{"ast":null,"code":"var _jsxFileName = \"/Users/chahanatyagi/Work/cm-frontend/src/pages/Home/campaignList.js\";\nimport React, { Component } from 'react';\nimport connectComponent from '@/connect';\nimport Table, { Tcol, Trow, Thead, Tbody } from '@/components/table';\nimport './index.scss';\n\nvar CampaignList = function CampaignList(_ref) {\n  var data = _ref.data,\n      headers = _ref.headers,\n      loading = _ref.loading;\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }));\n  }\n\n  if (!headers.length) {\n    return null;\n  }\n\n  return React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Thead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Trow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, headers.map(function (item, index) {\n    if (item.checkbox) {\n      return React.createElement(Tcol, {\n        key: index,\n        component: \"th\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: item.checked,\n        value: item.name,\n        onClick: function onClick() {\n          return toggleAllCheckboxes(!item.checked, data, headers);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(Tcol, {\n      key: index,\n      component: \"th\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, item.name);\n  }))), React.createElement(Tbody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, data.map(function (item, index) {\n    return React.createElement(Trow, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(RenderRow, {\n      row: item,\n      headers: headers,\n      rowIndex: index,\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  })));\n};\n\nvar RenderRow = function RenderRow(_ref2) {\n  var row = _ref2.row,\n      headers = _ref2.headers,\n      rowIndex = _ref2.rowIndex,\n      data = _ref2.data;\n  return headers.map(function (header, index) {\n    if (header.key === 'checked') {\n      return React.createElement(Tcol, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: row[header.key],\n        value: row[header.key],\n        onClick: function onClick() {\n          return toggleCheckbox(!row[header.key], rowIndex, data, headers);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    }\n\n    if (header.key === 'contacts') {\n      return React.createElement(Tcol, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, row[header.key]);\n    }\n\n    if (header.key === 'type') {\n      return React.createElement(Tcol, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: cx('label', {\n          'label-green': row[header.key] === 'Global'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, row[header.key]));\n    }\n\n    if (header.key === 'name') {\n      return React.createElement(Tcol, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: function onClick() {\n          return updateParentGroup(row);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, row[header.key]));\n    }\n\n    if (header.key === 'showMenu') {\n      return React.createElement(Tcol, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"table-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: function onClick() {\n          return toggleGroupMenu(rowIndex, !row[header.key], data);\n        },\n        className: \"table-menu-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon ion-md-more\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), row[header.key] && React.createElement(\"div\", {\n        className: \"table-menu-items\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"item\",\n        onClick: function onClick() {\n          deleteListAction(row.email_group_id, rowIndex, data);\n          toggleGroupMenu(rowIndex, !row[header.key], data);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon ion-md-trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })))));\n    }\n\n    return React.createElement(Tcol, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, row[header.key]);\n  });\n};\n\nexport default CampaignList;","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/pages/Home/campaignList.js"],"names":["React","Component","connectComponent","Table","Tcol","Trow","Thead","Tbody","CampaignList","data","headers","loading","length","map","item","index","checkbox","checked","name","toggleAllCheckboxes","RenderRow","row","rowIndex","header","key","toggleCheckbox","cx","updateParentGroup","toggleGroupMenu","deleteListAction","email_group_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport connectComponent from '@/connect'\nimport Table, { Tcol, Trow, Thead, Tbody } from '@/components/table'\n\nimport './index.scss'\n\nconst CampaignList = ({ data, headers, loading }) => {\n    if (loading) {\n        return (\n            <div className=\"text-center\">\n                <Loader inline />\n            </div>\n        )\n    }\n\n    if (!headers.length) {\n        return null\n    }\n\n    return (\n        <Table>\n            <Thead>\n                <Trow>\n                    {headers.map((item, index) => {\n                        if (item.checkbox) {\n                            return (\n                                <Tcol key={index} component=\"th\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={item.checked}\n                                        value={item.name}\n                                        onClick={() =>\n                                            toggleAllCheckboxes(!item.checked, data, headers)\n                                        }\n                                    />\n                                </Tcol>\n                            )\n                        }\n                        return (\n                            <Tcol key={index} component=\"th\">\n                                {item.name}\n                            </Tcol>\n                        )\n                    })}\n                </Trow>\n            </Thead>\n            <Tbody>\n                {data.map((item, index) => {\n                    return (\n                        <Trow key={index}>\n                            <RenderRow row={item} headers={headers} rowIndex={index} data={data} />\n                        </Trow>\n                    )\n                })}\n            </Tbody>\n        </Table>\n    )\n}\n\nconst RenderRow = ({ row, headers, rowIndex, data }) => {\n    return headers.map((header, index) => {\n        if (header.key === 'checked') {\n            return (\n                <Tcol key={index}>\n                    <input\n                        type=\"checkbox\"\n                        checked={row[header.key]}\n                        value={row[header.key]}\n                        onClick={() => toggleCheckbox(!row[header.key], rowIndex, data, headers)}\n                    />\n                </Tcol>\n            )\n        }\n        if (header.key === 'contacts') {\n            return <Tcol key={index}>{row[header.key]}</Tcol>\n        }\n        if (header.key === 'type') {\n            return (\n                <Tcol key={index}>\n                    <span className={cx('label', { 'label-green': row[header.key] === 'Global' })}>\n                        {row[header.key]}\n                    </span>\n                </Tcol>\n            )\n        }\n        if (header.key === 'name') {\n            return (\n                <Tcol key={index}>\n                    <span onClick={() => updateParentGroup(row)}>{row[header.key]}</span>\n                </Tcol>\n            )\n        }\n        if (header.key === 'showMenu') {\n            return (\n                <Tcol key={index}>\n                    <div className=\"table-menu\">\n                        <span\n                            onClick={() => toggleGroupMenu(rowIndex, !row[header.key], data)}\n                            className=\"table-menu-button\"\n                        >\n                            <i className=\"icon ion-md-more\" />\n                        </span>\n                        {row[header.key] && (\n                            <div className=\"table-menu-items\">\n                                <div\n                                    className=\"item\"\n                                    onClick={() => {\n                                        deleteListAction(row.email_group_id, rowIndex, data)\n                                        toggleGroupMenu(rowIndex, !row[header.key], data)\n                                    }}\n                                >\n                                    <i className=\"icon ion-md-trash\" />\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </Tcol>\n            )\n        }\n        return <Tcol key={index}>{row[header.key]}</Tcol>\n    })\n}\n\nexport default CampaignList\n"]},"metadata":{},"sourceType":"module"}