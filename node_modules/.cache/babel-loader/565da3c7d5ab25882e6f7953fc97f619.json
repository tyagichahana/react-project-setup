{"ast":null,"code":"import _defineProperty from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chahanatyagi/Work/cm-frontend/src/pages/Campaign/CreateCampaign/PushNotification/step1.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport { ColoredButtons, TransparentButtons } from '@/components/button';\nimport { SmallHeading } from '@/components/headings';\nimport { Checkbox } from '@/components/checkBox';\nimport { Radio } from '@/components/radio';\nimport Stepper from '@/components/stepper';\nimport WrapComponents from '@/components/wrapper';\n\nvar StepOne =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StepOne, _Component);\n\n  function StepOne() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StepOne);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StepOne)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: '',\n      anyError: false,\n      nameError: false,\n      steps: ['Channel', 'Message', 'Segmentation', 'Scheduling', 'Overview'],\n      deviceType: [{\n        name: 'IOS',\n        checked: false\n      }, {\n        name: 'Android',\n        checked: false\n      }, {\n        name: 'Web',\n        checked: false\n      }],\n      deviceTypeError: false,\n      type: [{\n        name: 'General Campaign',\n        checked: false\n      }, {\n        name: 'Trigger Campaign',\n        checked: false\n      }],\n      typeError: false\n    };\n\n    _this.saveAndContinue = function (e) {\n      e.preventDefault();\n\n      _this.props.data.push(_this.state);\n\n      _this.props.nextStep();\n    };\n\n    _this._checkHasError = function (data) {\n      var anyChecked = false;\n\n      _.forEach(data, function (part) {\n        if (part.checked) {\n          anyChecked = true;\n        }\n      });\n\n      return anyChecked;\n    };\n\n    _this.handleContinue = function () {\n      var _this$state = _this.state,\n          name = _this$state.name,\n          deviceType = _this$state.deviceType,\n          type = _this$state.type; // let anyError = false\n\n      if (name === '') {\n        _this.setState({\n          nameError: true\n        });\n\n        anyError = true;\n      }\n\n      if (!_this._checkHasError(deviceType)) {\n        _this.setState({\n          deviceTypeError: true\n        });\n\n        anyError = true;\n      }\n\n      if (!_this._checkHasError(type)) {\n        _this.setState({\n          typeError: true\n        });\n\n        anyError = true;\n      }\n\n      if (!anyError) {\n        _this.props.onSubmit({\n          name: name,\n          deviceType: deviceType,\n          type: type\n        });\n      }\n    };\n\n    _this.back = function (e) {\n      e.preventDefault();\n\n      _this.props.prevStep();\n    };\n\n    _this.handleCheckbox = function (check) {\n      var deviceType = _this.state.deviceType;\n\n      _this.setState({\n        deviceType: deviceType.map(function (part) {\n          if (part.name === check.name) {\n            part.checked = !check.checked;\n          }\n\n          return part;\n        })\n      });\n    };\n\n    _this.handleRadio = function (check) {\n      var type = _this.state.type;\n\n      _this.setState({\n        type: type.map(function (part) {\n          if (part.name === check.name) {\n            part.checked = true;\n          } else {\n            part.checked = false;\n          }\n\n          return part;\n        })\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(StepOne, [{\n    key: \"handleInputFields\",\n    value: function handleInputFields(key, value) {\n      if (!value) {\n        this.setState(_defineProperty({}, key, value));\n      } else {\n        this.setState(_defineProperty({}, key, value));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          steps = _this$state2.steps,\n          deviceType = _this$state2.deviceType,\n          type = _this$state2.type,\n          anyError = _this$state2.anyError;\n      console.log(anyError, 'anyerroe');\n      return React.createElement(WrapComponents, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Stepper, {\n        steps: steps,\n        activeStep: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Campaign Name\"), React.createElement(\"input\", {\n        placeholder: \"Enter Campaign Name\",\n        type: \"text\",\n        className: \"form-input\",\n        name: \"name\",\n        value: this.state.name,\n        onChange: function onChange(e) {\n          return _this2.handleInputFields('name', e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Platforms\"), React.createElement(\"div\", {\n        className: \"mrgn-top-15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, deviceType.map(function (part) {\n        return React.createElement(Checkbox, {\n          key: part.name,\n          onClick: function onClick() {\n            return _this2.handleCheckbox(part);\n          },\n          name: \"device\",\n          id: part.name,\n          checked: part.checked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, part.name);\n      }))), React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Campaign Type\"), React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, type.map(function (part) {\n        return React.createElement(Radio, {\n          onClick: function onClick() {\n            return _this2.handleRadio(part);\n          },\n          key: part.name,\n          checked: part.checked,\n          id: part.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, part.name);\n      }))), React.createElement(ColoredButtons, {\n        onClick: this.handleContinue,\n        className: \"float\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Continue\"), React.createElement(TransparentButtons, {\n        onClick: this.back,\n        className: \"float\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"back\"));\n    }\n  }]);\n\n  return StepOne;\n}(Component);\n\nexport default StepOne;","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/pages/Campaign/CreateCampaign/PushNotification/step1.js"],"names":["React","Component","_","ColoredButtons","TransparentButtons","SmallHeading","Checkbox","Radio","Stepper","WrapComponents","StepOne","state","name","anyError","nameError","steps","deviceType","checked","deviceTypeError","type","typeError","saveAndContinue","e","preventDefault","props","data","push","nextStep","_checkHasError","anyChecked","forEach","part","handleContinue","setState","onSubmit","back","prevStep","handleCheckbox","check","map","handleRadio","key","value","console","log","handleInputFields","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport _ from 'lodash'\nimport { ColoredButtons, TransparentButtons } from '@/components/button'\nimport { SmallHeading } from '@/components/headings'\nimport { Checkbox } from '@/components/checkBox'\nimport { Radio } from '@/components/radio'\nimport Stepper from '@/components/stepper'\nimport WrapComponents from '@/components/wrapper'\n\nclass StepOne extends Component {\n    state = {\n        name: '',\n        anyError: false,\n        nameError: false,\n        steps: ['Channel', 'Message', 'Segmentation', 'Scheduling', 'Overview'],\n        deviceType: [\n            {\n                name: 'IOS',\n                checked: false,\n            },\n            {\n                name: 'Android',\n                checked: false,\n            },\n            {\n                name: 'Web',\n                checked: false,\n            },\n        ],\n        deviceTypeError: false,\n        type: [\n            {\n                name: 'General Campaign',\n                checked: false,\n            },\n            {\n                name: 'Trigger Campaign',\n                checked: false,\n            },\n        ],\n        typeError: false,\n    }\n\n    saveAndContinue = e => {\n        e.preventDefault()\n        this.props.data.push(this.state)\n        this.props.nextStep()\n    }\n\n    _checkHasError = data => {\n        let anyChecked = false\n\n        _.forEach(data, part => {\n            if (part.checked) {\n                anyChecked = true\n            }\n        })\n\n        return anyChecked\n    }\n\n    handleContinue = () => {\n        const { name, deviceType, type } = this.state\n\n        // let anyError = false\n\n        if (name === '') {\n            this.setState({\n                nameError: true,\n            })\n            anyError = true\n        }\n\n        if (!this._checkHasError(deviceType)) {\n            this.setState({\n                deviceTypeError: true,\n            })\n            anyError = true\n        }\n\n        if (!this._checkHasError(type)) {\n            this.setState({\n                typeError: true,\n            })\n            anyError = true\n        }\n\n        if (!anyError) {\n            this.props.onSubmit({\n                name,\n                deviceType,\n                type,\n            })\n        }\n    }\n\n    back = e => {\n        e.preventDefault()\n        this.props.prevStep()\n    }\n\n    handleInputFields(key, value) {\n        if (!value) {\n            this.setState({\n                [key]: value,\n            })\n        } else {\n            this.setState({\n                [key]: value,\n            })\n        }\n    }\n\n    handleCheckbox = check => {\n        const { deviceType } = this.state\n        this.setState({\n            deviceType: deviceType.map(part => {\n                if (part.name === check.name) {\n                    part.checked = !check.checked\n                }\n                return part\n            }),\n        })\n    }\n\n    handleRadio = check => {\n        const { type } = this.state\n        this.setState({\n            type: type.map(part => {\n                if (part.name === check.name) {\n                    part.checked = true\n                } else {\n                    part.checked = false\n                }\n                return part\n            }),\n        })\n    }\n\n    render() {\n        const { steps, deviceType, type, anyError } = this.state\n        console.log(anyError, 'anyerroe')\n        return (\n            <WrapComponents>\n                <Stepper steps={steps} activeStep={0} />\n                <div className=\"section\">\n                    <SmallHeading>Campaign Name</SmallHeading>\n                    <input\n                        placeholder=\"Enter Campaign Name\"\n                        type=\"text\"\n                        className=\"form-input\"\n                        name=\"name\"\n                        value={this.state.name}\n                        onChange={e => this.handleInputFields('name', e.target.value)}\n                    />\n                </div>\n                <div className=\"section\">\n                    <SmallHeading>Platforms</SmallHeading>\n                    <div className=\"mrgn-top-15\">\n                        {deviceType.map(part => {\n                            return (\n                                <Checkbox\n                                    key={part.name}\n                                    onClick={() => this.handleCheckbox(part)}\n                                    name=\"device\"\n                                    id={part.name}\n                                    checked={part.checked}\n                                >\n                                    {part.name}\n                                </Checkbox>\n                            )\n                        })}\n                    </div>\n                </div>\n                <div className=\"section\">\n                    <SmallHeading>Campaign Type</SmallHeading>\n                    <div className=\"\">\n                        {type.map(part => (\n                            <Radio\n                                onClick={() => this.handleRadio(part)}\n                                key={part.name}\n                                checked={part.checked}\n                                id={part.name}\n                            >\n                                {part.name}\n                            </Radio>\n                        ))}\n                    </div>\n                </div>\n                <ColoredButtons onClick={this.handleContinue} className=\"float\">\n                    Continue\n                </ColoredButtons>\n                <TransparentButtons onClick={this.back} className=\"float\">\n                    back\n                </TransparentButtons>\n            </WrapComponents>\n        )\n    }\n}\n\nexport default StepOne\n"]},"metadata":{},"sourceType":"module"}