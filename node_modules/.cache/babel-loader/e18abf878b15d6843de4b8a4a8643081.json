{"ast":null,"code":"import _defineProperty from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chahanatyagi/Work/cm-frontend/src/pages/SMSCampaign/Components/steps/step2.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport history from '@/utils/history';\nimport Stepper from '@/components/stepper';\nimport ConnectComponent from '../../../../connect';\nimport WrapComponents from '@/components/wrapper';\nimport Alert from '@/components/alert';\nimport Loader from '@/components/loader';\nimport { SmallHeading } from '@/components/headings';\nimport { ColoredButtons, TransparentButtons } from '@/components/button';\nimport { Checkbox } from '@/components/checkBox/index';\n\nvar StepTwo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StepTwo, _Component);\n\n  function StepTwo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StepTwo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StepTwo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      steps: ['Channel', 'Message', 'Scheduling', 'Segmentation', 'Overview'],\n      message: '',\n      messageError: false,\n      clickURL: false,\n      clickURLvalue: ''\n    };\n\n    _this.handleContinue = function () {\n      var message = _this.state.message;\n      var anyError = false;\n\n      if (message === '') {\n        _this.setState({\n          messageError: true\n        });\n\n        anyError = true;\n      }\n\n      if (!anyError) {\n        _this.props.onSubmit({\n          message: message\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(StepTwo, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var campaignId, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                campaignId = this.props.match.params.campaignId;\n                this.setState({\n                  campaignId: campaignId\n                });\n                _context.next = 4;\n                return GetCampaign(campaignId);\n\n              case 4:\n                res = _context.sent;\n                this.setState({\n                  senderEmailId: _.get(res, 'senderEmailId', ''),\n                  replyToEmailId: _.get(res, 'replyToEmailId', ''),\n                  title: _.get(res, 'title', ''),\n                  templatePath: _.get(res, 'templatePath', ''),\n                  senderName: _.get(res, 'senderName', '')\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"handleInputFields\",\n    value: function handleInputFields(key, value) {\n      this.setState(_defineProperty({}, key, value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          steps = _this$state.steps,\n          message = _this$state.message,\n          messageError = _this$state.messageError,\n          clickURL = _this$state.clickURL,\n          clickURLvalue = _this$state.clickURLvalue;\n      var _this$props$CreateCam = this.props.CreateCampaign,\n          error = _this$props$CreateCam.error,\n          loading = _this$props$CreateCam.loading;\n\n      if (loading) {\n        return React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(WrapComponents, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Stepper, {\n        steps: steps,\n        activeStep: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Create Message\"), messageError && React.createElement(\"div\", {\n        className: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"*This field is Required\"), React.createElement(\"textarea\", {\n        placeholder: \"Write your message here( *less than equal to 1000 words)\",\n        name: \"message\",\n        className: \"form-input\",\n        value: message,\n        onChange: function onChange(e) {\n          return _this2.handleInputFields('message', e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"dotted-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Checkbox, {\n        onClick: function onClick() {\n          return _this2.setState({\n            clickURL: !clickURL\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Track SMS Click for URL\"), clickURL && React.createElement(\"input\", {\n        className: \"form-input mrgn-top-15\",\n        placeholder: \"Paste/Type the URL you want to track\",\n        name: \"clickURLvalue\",\n        value: clickURLvalue,\n        onChange: function onChange(e) {\n          return _this2.handleInputFields('clickURLvalue', e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(ColoredButtons, {\n        as: \"link\",\n        to: \"/sms/step-3\",\n        className: \"float\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Continue\"), React.createElement(TransparentButtons, {\n        onClick: function onClick() {\n          return _this2.props.history.goBack();\n        },\n        className: \"float grey-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Go Back\"));\n    }\n  }]);\n\n  return StepTwo;\n}(Component);\n\nexport default ConnectComponent(StepTwo);","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/pages/SMSCampaign/Components/steps/step2.js"],"names":["React","Component","_","history","Stepper","ConnectComponent","WrapComponents","Alert","Loader","SmallHeading","ColoredButtons","TransparentButtons","Checkbox","StepTwo","state","steps","message","messageError","clickURL","clickURLvalue","handleContinue","anyError","setState","props","onSubmit","campaignId","match","params","GetCampaign","res","senderEmailId","get","replyToEmailId","title","templatePath","senderName","key","value","CreateCampaign","error","loading","e","handleInputFields","target","goBack"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport _ from 'lodash'\nimport history from '@/utils/history'\nimport Stepper from '@/components/stepper'\nimport ConnectComponent from '../../../../connect'\nimport WrapComponents from '@/components/wrapper'\nimport Alert from '@/components/alert'\nimport Loader from '@/components/loader'\nimport { SmallHeading } from '@/components/headings'\nimport { ColoredButtons, TransparentButtons } from '@/components/button'\nimport { Checkbox } from '@/components/checkBox/index'\n\nclass StepTwo extends Component {\n    state = {\n        steps: ['Channel', 'Message', 'Scheduling', 'Segmentation', 'Overview'],\n        message: '',\n        messageError: false,\n        clickURL: false,\n        clickURLvalue: '',\n    }\n\n    async componentWillMount() {\n        const {\n            params: { campaignId },\n        } = this.props.match\n        this.setState({\n            campaignId,\n        })\n        const res = await GetCampaign(campaignId)\n        this.setState({\n            senderEmailId: _.get(res, 'senderEmailId', ''),\n            replyToEmailId: _.get(res, 'replyToEmailId', ''),\n            title: _.get(res, 'title', ''),\n            templatePath: _.get(res, 'templatePath', ''),\n            senderName: _.get(res, 'senderName', ''),\n        })\n    }\n\n    handleInputFields(key, value) {\n        this.setState({\n            [key]: value,\n        })\n    }\n\n    handleContinue = () => {\n        const { message } = this.state\n\n        let anyError = false\n\n        if (message === '') {\n            this.setState({\n                messageError: true,\n            })\n            anyError = true\n        }\n        if (!anyError) {\n            this.props.onSubmit({ message })\n        }\n    }\n\n    render() {\n        const { steps, message, messageError, clickURL, clickURLvalue } = this.state\n        const { error, loading } = this.props.CreateCampaign\n        if (loading) {\n            return <Loader />\n        }\n\n        return (\n            <WrapComponents>\n                <Stepper steps={steps} activeStep={1} />\n                <div className=\"section\">\n                    <SmallHeading>Create Message</SmallHeading>\n                    {messageError && <div className=\"alert\">*This field is Required</div>}\n                    <textarea\n                        placeholder=\"Write your message here( *less than equal to 1000 words)\"\n                        name=\"message\"\n                        className=\"form-input\"\n                        value={message}\n                        onChange={e => this.handleInputFields('message', e.target.value)}\n                    />\n                    <div className=\"dotted-line\" />\n                    <Checkbox onClick={() => this.setState({ clickURL: !clickURL })}>\n                        Track SMS Click for URL\n                    </Checkbox>\n                    {clickURL && (\n                        <input\n                            className=\"form-input mrgn-top-15\"\n                            placeholder=\"Paste/Type the URL you want to track\"\n                            name=\"clickURLvalue\"\n                            value={clickURLvalue}\n                            onChange={e => this.handleInputFields('clickURLvalue', e.target.value)}\n                        />\n                    )}\n                </div>\n\n                <ColoredButtons as=\"link\" to=\"/sms/step-3\" className=\"float\">\n                    Continue\n                </ColoredButtons>\n                <TransparentButtons\n                    onClick={() => this.props.history.goBack()}\n                    className=\"float grey-border\"\n                >\n                    Go Back\n                </TransparentButtons>\n            </WrapComponents>\n        )\n    }\n}\n\nexport default ConnectComponent(StepTwo)\n"]},"metadata":{},"sourceType":"module"}