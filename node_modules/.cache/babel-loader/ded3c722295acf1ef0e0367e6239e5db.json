{"ast":null,"code":"import _regeneratorRuntime from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport firebase from 'firebase';\nimport * as admin from 'firebase-admin';\nimport * as serviceAccount from 'path/to/serviceAccountKey.json';\nimport { createPNUser } from './actions/addPNUser';\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n  databaseURL: 'https://campaign-management-3824c.firebaseio.com'\n});\nvar config = {\n  apiKey: 'AIzaSyBnTsvMgKNJVrHVnBFhaU-mKl890TxGt1w',\n  authDomain: 'campaign-management-3824c.firebaseapp.com',\n  databaseURL: 'https://campaign-management-3824c.firebaseio.com',\n  projectId: 'campaign-management-3824c',\n  storageBucket: 'campaign-management-3824c.appspot.com',\n  messagingSenderId: '476551882726'\n};\nexport var initializeFirebase = function initializeFirebase() {\n  firebase.initializeApp(config);\n  admin.initializeApp({\n    credential: admin.credential.cert(serviceAccount),\n    databaseURL: 'https://campaign-management-3824c.firebaseio.com'\n  });\n};\nexport var askForPermissioToReceiveNotifications =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var messaging, token, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            messaging = firebase.messaging();\n            _context.next = 4;\n            return messaging.requestPermission();\n\n          case 4:\n            _context.next = 6;\n            return messaging.getToken();\n\n          case 6:\n            token = _context.sent;\n            data = {\n              requestTimeStamp: 1544,\n              source: 'WEB',\n              token: token\n            };\n            createPNUser(data);\n            return _context.abrupt(\"return\", token);\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[0, 12]]);\n  }));\n\n  return function askForPermissioToReceiveNotifications() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/push-notification.js"],"names":["firebase","admin","serviceAccount","createPNUser","initializeApp","credential","cert","databaseURL","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","initializeFirebase","askForPermissioToReceiveNotifications","messaging","requestPermission","getToken","token","data","requestTimeStamp","source","console","error"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,gBAAvB;AACA,OAAO,KAAKC,cAAZ,MAAgC,gCAAhC;AACA,SAASC,YAAT,QAA6B,qBAA7B;AAEAF,KAAK,CAACG,aAAN,CAAoB;AAChBC,EAAAA,UAAU,EAAEJ,KAAK,CAACI,UAAN,CAAiBC,IAAjB,CAAsBJ,cAAtB,CADI;AAEhBK,EAAAA,WAAW,EAAE;AAFG,CAApB;AAKA,IAAIC,MAAM,GAAG;AACTC,EAAAA,MAAM,EAAE,yCADC;AAETC,EAAAA,UAAU,EAAE,2CAFH;AAGTH,EAAAA,WAAW,EAAE,kDAHJ;AAITI,EAAAA,SAAS,EAAE,2BAJF;AAKTC,EAAAA,aAAa,EAAE,uCALN;AAMTC,EAAAA,iBAAiB,EAAE;AANV,CAAb;AAQA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AACpCd,EAAAA,QAAQ,CAACI,aAAT,CAAuBI,MAAvB;AACAP,EAAAA,KAAK,CAACG,aAAN,CAAoB;AAChBC,IAAAA,UAAU,EAAEJ,KAAK,CAACI,UAAN,CAAiBC,IAAjB,CAAsBJ,cAAtB,CADI;AAEhBK,IAAAA,WAAW,EAAE;AAFG,GAApB;AAIH,CANM;AAQP,OAAO,IAAMQ,qCAAqC;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEvCC,YAAAA,SAFuC,GAE3BhB,QAAQ,CAACgB,SAAT,EAF2B;AAAA;AAAA,mBAIvCA,SAAS,CAACC,iBAAV,EAJuC;;AAAA;AAAA;AAAA,mBAKzBD,SAAS,CAACE,QAAV,EALyB;;AAAA;AAKvCC,YAAAA,KALuC;AAMzCC,YAAAA,IANyC,GAMlC;AACPC,cAAAA,gBAAgB,EAAE,IADX;AAEPC,cAAAA,MAAM,EAAE,KAFD;AAGPH,cAAAA,KAAK,EAAEA;AAHA,aANkC;AAW7ChB,YAAAA,YAAY,CAACiB,IAAD,CAAZ;AAX6C,6CAYtCD,KAZsC;;AAAA;AAAA;AAAA;AAc7CI,YAAAA,OAAO,CAACC,KAAR;;AAd6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAArCT,qCAAqC;AAAA;AAAA;AAAA,GAA3C","sourcesContent":["import firebase from 'firebase'\nimport * as admin from 'firebase-admin'\nimport * as serviceAccount from 'path/to/serviceAccountKey.json'\nimport { createPNUser } from './actions/addPNUser'\n\nadmin.initializeApp({\n    credential: admin.credential.cert(serviceAccount),\n    databaseURL: 'https://campaign-management-3824c.firebaseio.com',\n})\n\nvar config = {\n    apiKey: 'AIzaSyBnTsvMgKNJVrHVnBFhaU-mKl890TxGt1w',\n    authDomain: 'campaign-management-3824c.firebaseapp.com',\n    databaseURL: 'https://campaign-management-3824c.firebaseio.com',\n    projectId: 'campaign-management-3824c',\n    storageBucket: 'campaign-management-3824c.appspot.com',\n    messagingSenderId: '476551882726',\n}\nexport const initializeFirebase = () => {\n    firebase.initializeApp(config)\n    admin.initializeApp({\n        credential: admin.credential.cert(serviceAccount),\n        databaseURL: 'https://campaign-management-3824c.firebaseio.com',\n    })\n}\n\nexport const askForPermissioToReceiveNotifications = async () => {\n    try {\n        const messaging = firebase.messaging()\n\n        await messaging.requestPermission()\n        const token = await messaging.getToken()\n        let data = {\n            requestTimeStamp: 1544,\n            source: 'WEB',\n            token: token,\n        }\n        createPNUser(data)\n        return token\n    } catch (error) {\n        console.error(error)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}