{"ast":null,"code":"import _defineProperty from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chahanatyagi/Work/cm-frontend/src/pages/InAppCampaign/Steps/Step2.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport Stepper from '@/components/stepper';\nimport WrapComponents from '@/components/wrapper';\nimport { Radio } from '@/components/radio';\nimport { ColoredButtons, TransparentButtons } from '@/components/button';\nimport { SmallHeading } from '@/components/headings/index';\nimport ConnectComponent from '../../../connect';\nimport { Checkbox } from '@/components/checkBox/index';\nimport { UploadContent } from '@/actions/utils';\n\nvar StepTwo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StepTwo, _Component);\n\n  function StepTwo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StepTwo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StepTwo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      steps: ['Channel', 'Message', 'Scheduling', 'Segmentation', 'Overview & Send'],\n      advance: false,\n      buttons: false,\n      background: false,\n      foreground: false,\n      FgImageUpload: true,\n      FgImageUrl: false,\n      ImageUpload: true,\n      ImageUrl: false,\n      upload: false,\n      closeActionUrl: true,\n      enterActionUrl: false,\n      userFilePath: '',\n      ui: {\n        bg: {\n          img: '',\n          sc: '',\n          clr: '',\n          sw: 3,\n          rd: 3\n        },\n        fg: {\n          img: '',\n          clr: '7',\n          sc: '',\n          sw: 0,\n          rd: 0\n        },\n        ttl: {\n          txt: '',\n          clr: '',\n          sz: '20'\n        },\n        msg: {\n          txt: '',\n          clr: '',\n          sz: ''\n        },\n        img: '',\n        appLink: '',\n        btnOrig: 3,\n        inAppButtons: [{\n          text: '',\n          clr: '',\n          bgc: '',\n          sz: 12,\n          appLink: ''\n        }]\n      }\n    };\n\n    _this.handleFileChange =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e, path) {\n        var files, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                files = e.target.files;\n\n                if (!(files.length == 1)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 4;\n                return UploadContent(files[0], 'media');\n\n              case 4:\n                res = _context.sent;\n\n                if (res) {\n                  _this.handleStateInputField(path, res.s3url);\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleStateInputField = function (path, value) {\n      var ui = _this.state.ui;\n\n      _this.setState({\n        ui: _.set(ui, path, value)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(StepTwo, [{\n    key: \"handleInputFields\",\n    value: function handleInputFields(key, value) {\n      if (!value) {\n        this.setState(_defineProperty({}, key, value));\n      } else {\n        this.setState(_defineProperty({}, key, value));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          steps = _this$state.steps,\n          advance = _this$state.advance,\n          button = _this$state.button,\n          background = _this$state.background,\n          ImageUrl = _this$state.ImageUrl,\n          ImageUpload = _this$state.ImageUpload,\n          foreground = _this$state.foreground,\n          FgImageUpload = _this$state.FgImageUpload,\n          FgImageUrl = _this$state.FgImageUrl,\n          closeActionUrl = _this$state.closeActionUrl,\n          enterActionUrl = _this$state.enterActionUrl,\n          ui = _this$state.ui;\n      return React.createElement(WrapComponents, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Stepper, {\n        steps: steps,\n        activeStep: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"flex-space-bt \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"section-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Title*\"), React.createElement(\"input\", {\n        placeholder: \"Enter Message title\",\n        type: \"text\",\n        className: \"form-input\",\n        name: \"title\",\n        value: ui.ttl.txt,\n        onChange: function onChange(e) {\n          return _this2.handleStateInputField('ttl.txt', e.currentTarget.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Message*\"), React.createElement(\"input\", {\n        placeholder: \"Enter Message\",\n        type: \"text\",\n        className: \"form-input\",\n        name: \"message\",\n        value: ui.msg.txt,\n        onChange: function onChange(e) {\n          return _this2.handleStateInputField('msg.txt', e.currentTarget.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"advance-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: button,\n        value: \"button\",\n        onChange: function onChange() {\n          return _this2.setState({\n            button: !button\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Button\"), button && _.map(ui.inAppButtons, function (btn, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"mrgn-top-15 row-child\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          className: \"form-input\",\n          placeholder: \"Button Text\",\n          value: btn.text,\n          onChange: function onChange(e) {\n            return _this2.handleStateInputField(\"inAppButtons[\".concat(index, \"].text\"), e.currentTarget.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"mrgn-top-15 margn-left-15 \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, React.createElement(Radio, {\n          checked: closeActionUrl,\n          onChange: function onChange() {\n            return _this2.setState({\n              closeActionUrl: !closeActionUrl,\n              enterActionUrl: !enterActionUrl\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, \"Close Notification\"), React.createElement(Radio, {\n          checked: enterActionUrl,\n          onChange: function onChange() {\n            return _this2.setState({\n              closeActionUrl: !closeActionUrl,\n              enterActionUrl: !enterActionUrl\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, \"Enter Redirect URL\"), enterActionUrl && React.createElement(\"div\", {\n          className: \"mrgn-top-15 row-child\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          className: \"form-input\",\n          placeholder: \"Enter URL\",\n          value: btn.appLink,\n          onChange: function onChange(e) {\n            return _this2.handleStateInputField(\"inAppButtons[\".concat(index, \"].appLink\"), e.currentTarget.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }))));\n      })), React.createElement(\"div\", {\n        className: \"advance-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: background,\n        onChange: function onChange() {\n          return _this2.setState({\n            background: !background\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Background\"), background && React.createElement(\"div\", {\n        className: \"mrgn-top-15 margn-left-15 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Radio, {\n        checked: ImageUpload,\n        onClick: function onClick() {\n          return _this2.setState({\n            ImageUpload: !ImageUpload,\n            ImageUrl: !ImageUrl\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Upload Image\"), React.createElement(Radio, {\n        checked: ImageUrl,\n        onClick: function onClick() {\n          return _this2.setState({\n            ImageUpload: !ImageUpload,\n            ImageUrl: !ImageUrl\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Enter URL\"), ImageUrl && React.createElement(\"div\", {\n        className: \"mrgn-top-15 row-child\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-input\",\n        placeholder: \"Enter URL\",\n        value: ui.bg.img,\n        onChange: function onChange(e) {\n          return _this2.handleStateInputField('bg.img', e.currentTarget.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      })), ImageUpload && React.createElement(\"div\", {\n        className: \"mrgn-top-15 row-child\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"upload-file upload-box \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        className: \"file-input\",\n        id: \"uploadFile\",\n        onChange: function onChange(e) {\n          return _this2.handleFileChange(e, 'bg.img');\n        },\n        accept: \"image/*\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"advance-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: foreground,\n        onChange: function onChange() {\n          return _this2.setState({\n            foreground: !foreground\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Foreground\"), foreground && React.createElement(\"div\", {\n        className: \"mrgn-top-15 margn-left-15 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(Radio, {\n        checked: FgImageUpload,\n        onClick: function onClick() {\n          return _this2.setState({\n            FgImageUpload: !FgImageUpload,\n            FgImageUrl: !FgImageUrl\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"Upload Image\"), React.createElement(Radio, {\n        checked: FgImageUrl,\n        onClick: function onClick() {\n          return _this2.setState({\n            FgImageUpload: !FgImageUpload,\n            FgImageUrl: !FgImageUrl\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \"Enter URL\"), FgImageUrl && React.createElement(\"div\", {\n        className: \"mrgn-top-15 row-child\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-input\",\n        placeholder: \"Enter URL\",\n        value: ui.fg.img,\n        onChange: function onChange(e) {\n          return _this2.handleStateInputField('fg.img', e.currentTarget.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      })), FgImageUpload && React.createElement(\"div\", {\n        className: \"mrgn-top-15 row-child\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"upload-file upload-box \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        className: \"file-input\",\n        id: \"uploadFile\",\n        onChange: function onChange(e) {\n          return _this2.handleFileChange(e, 'fg.img');\n        },\n        accept: \".jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"dotted-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }), React.createElement(Checkbox, {\n        checked: advance,\n        onChange: function onChange(e) {\n          _this2.setState({\n            advance: !advance\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"Include Close Button\")), React.createElement(ColoredButtons, {\n        to: \"/in-app/step-3/\",\n        as: \"link\",\n        className: \"float\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, \"Continue\"), React.createElement(TransparentButtons, {\n        onClick: function onClick() {\n          return _this2.props.history.goBack();\n        },\n        className: \"float grey-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, \"Go Back\")), React.createElement(\"div\", {\n        className: \"section section-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, \"Preview\"), React.createElement(\"div\", {\n        className: \"preview-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \"Actual display may be different to this preview depending on the user\\u2019s device.\"))));\n    }\n  }]);\n\n  return StepTwo;\n}(Component);\n\nexport default ConnectComponent(StepTwo);","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/pages/InAppCampaign/Steps/Step2.js"],"names":["React","Component","_","Stepper","WrapComponents","Radio","ColoredButtons","TransparentButtons","SmallHeading","ConnectComponent","Checkbox","UploadContent","StepTwo","state","steps","advance","buttons","background","foreground","FgImageUpload","FgImageUrl","ImageUpload","ImageUrl","upload","closeActionUrl","enterActionUrl","userFilePath","ui","bg","img","sc","clr","sw","rd","fg","ttl","txt","sz","msg","appLink","btnOrig","inAppButtons","text","bgc","handleFileChange","e","path","files","target","length","res","handleStateInputField","s3url","value","setState","set","key","button","currentTarget","map","btn","index","props","history","goBack"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport _ from 'lodash'\nimport Stepper from '@/components/stepper'\nimport WrapComponents from '@/components/wrapper'\nimport { Radio } from '@/components/radio'\nimport { ColoredButtons, TransparentButtons } from '@/components/button'\nimport { SmallHeading } from '@/components/headings/index'\nimport ConnectComponent from '../../../connect'\nimport { Checkbox } from '@/components/checkBox/index'\nimport { UploadContent } from '@/actions/utils'\n\nclass StepTwo extends Component {\n    state = {\n        steps: ['Channel', 'Message', 'Scheduling', 'Segmentation', 'Overview & Send'],\n        advance: false,\n        buttons: false,\n        background: false,\n        foreground: false,\n        FgImageUpload: true,\n        FgImageUrl: false,\n        ImageUpload: true,\n        ImageUrl: false,\n        upload: false,\n        closeActionUrl: true,\n        enterActionUrl: false,\n        userFilePath: '',\n        ui: {\n            bg: {\n                img: '',\n                sc: '',\n                clr: '',\n                sw: 3,\n                rd: 3,\n            },\n            fg: {\n                img: '',\n                clr: '7',\n                sc: '',\n                sw: 0,\n                rd: 0,\n            },\n            ttl: {\n                txt: '',\n                clr: '',\n                sz: '20',\n            },\n            msg: {\n                txt: '',\n                clr: '',\n                sz: '',\n            },\n            img: '',\n            appLink: '',\n            btnOrig: 3,\n            inAppButtons: [\n                {\n                    text: '',\n                    clr: '',\n                    bgc: '',\n                    sz: 12,\n                    appLink: '',\n                },\n            ],\n        },\n    }\n\n    handleFileChange = async (e, path) => {\n        const { files } = e.target\n        if (files.length == 1) {\n            const res = await UploadContent(files[0], 'media')\n            if (res) {\n                this.handleStateInputField(path, res.s3url)\n            }\n        }\n    }\n\n    handleInputFields(key, value) {\n        if (!value) {\n            this.setState({\n                [key]: value,\n            })\n        } else {\n            this.setState({\n                [key]: value,\n            })\n        }\n    }\n\n    handleStateInputField = (path, value) => {\n        let { ui } = this.state\n        this.setState({\n            ui: _.set(ui, path, value),\n        })\n    }\n\n    render() {\n        const {\n            steps,\n            advance,\n            button,\n            background,\n            ImageUrl,\n            ImageUpload,\n            foreground,\n            FgImageUpload,\n            FgImageUrl,\n            closeActionUrl,\n            enterActionUrl,\n            ui,\n        } = this.state\n        return (\n            <WrapComponents>\n                <Stepper steps={steps} activeStep={1} />\n                <div className=\"flex-space-bt \">\n                    <div className=\"section-left\">\n                        <div className=\"section\">\n                            <SmallHeading>Title*</SmallHeading>\n                            <input\n                                placeholder=\"Enter Message title\"\n                                type=\"text\"\n                                className=\"form-input\"\n                                name=\"title\"\n                                value={ui.ttl.txt}\n                                onChange={e =>\n                                    this.handleStateInputField('ttl.txt', e.currentTarget.value)\n                                }\n                            />\n                            <SmallHeading>Message*</SmallHeading>\n                            <input\n                                placeholder=\"Enter Message\"\n                                type=\"text\"\n                                className=\"form-input\"\n                                name=\"message\"\n                                value={ui.msg.txt}\n                                onChange={e =>\n                                    this.handleStateInputField('msg.txt', e.currentTarget.value)\n                                }\n                            />\n                            <div className=\"advance-row\">\n                                <Checkbox\n                                    checked={button}\n                                    value=\"button\"\n                                    onChange={() => this.setState({ button: !button })}\n                                >\n                                    Button\n                                </Checkbox>\n                                {button &&\n                                    _.map(ui.inAppButtons, (btn, index) => (\n                                        <div key={index}>\n                                            <div className=\"mrgn-top-15 row-child\">\n                                                <input\n                                                    type=\"text\"\n                                                    className=\"form-input\"\n                                                    placeholder=\"Button Text\"\n                                                    value={btn.text}\n                                                    onChange={e =>\n                                                        this.handleStateInputField(\n                                                            `inAppButtons[${index}].text`,\n                                                            e.currentTarget.value\n                                                        )\n                                                    }\n                                                />\n                                            </div>\n                                            <div className=\"mrgn-top-15 margn-left-15 \">\n                                                <Radio\n                                                    checked={closeActionUrl}\n                                                    onChange={() =>\n                                                        this.setState({\n                                                            closeActionUrl: !closeActionUrl,\n                                                            enterActionUrl: !enterActionUrl,\n                                                        })\n                                                    }\n                                                >\n                                                    Close Notification\n                                                </Radio>\n                                                <Radio\n                                                    checked={enterActionUrl}\n                                                    onChange={() =>\n                                                        this.setState({\n                                                            closeActionUrl: !closeActionUrl,\n                                                            enterActionUrl: !enterActionUrl,\n                                                        })\n                                                    }\n                                                >\n                                                    Enter Redirect URL\n                                                </Radio>\n                                                {enterActionUrl && (\n                                                    <div className=\"mrgn-top-15 row-child\">\n                                                        <input\n                                                            type=\"text\"\n                                                            className=\"form-input\"\n                                                            placeholder=\"Enter URL\"\n                                                            value={btn.appLink}\n                                                            onChange={e =>\n                                                                this.handleStateInputField(\n                                                                    `inAppButtons[${index}].appLink`,\n                                                                    e.currentTarget.value\n                                                                )\n                                                            }\n                                                        />\n                                                    </div>\n                                                )}\n                                            </div>\n                                        </div>\n                                    ))}\n                            </div>\n                            <div className=\"advance-row\">\n                                <Checkbox\n                                    checked={background}\n                                    onChange={() => this.setState({ background: !background })}\n                                >\n                                    Background\n                                </Checkbox>\n                                {background && (\n                                    <div className=\"mrgn-top-15 margn-left-15 \">\n                                        <Radio\n                                            checked={ImageUpload}\n                                            onClick={() =>\n                                                this.setState({\n                                                    ImageUpload: !ImageUpload,\n                                                    ImageUrl: !ImageUrl,\n                                                })\n                                            }\n                                        >\n                                            Upload Image\n                                        </Radio>\n                                        <Radio\n                                            checked={ImageUrl}\n                                            onClick={() =>\n                                                this.setState({\n                                                    ImageUpload: !ImageUpload,\n                                                    ImageUrl: !ImageUrl,\n                                                })\n                                            }\n                                        >\n                                            Enter URL\n                                        </Radio>\n\n                                        {ImageUrl && (\n                                            <div className=\"mrgn-top-15 row-child\">\n                                                <input\n                                                    type=\"text\"\n                                                    className=\"form-input\"\n                                                    placeholder=\"Enter URL\"\n                                                    value={ui.bg.img}\n                                                    onChange={e =>\n                                                        this.handleStateInputField(\n                                                            'bg.img',\n                                                            e.currentTarget.value\n                                                        )\n                                                    }\n                                                />\n                                            </div>\n                                        )}\n                                        {ImageUpload && (\n                                            <div className=\"mrgn-top-15 row-child\">\n                                                <div className=\"upload-file upload-box \">\n                                                    <input\n                                                        type=\"file\"\n                                                        className=\"file-input\"\n                                                        id=\"uploadFile\"\n                                                        onChange={e =>\n                                                            this.handleFileChange(e, 'bg.img')\n                                                        }\n                                                        accept=\"image/*\"\n                                                    />\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                )}\n                            </div>\n                            <div className=\"advance-row\">\n                                <Checkbox\n                                    checked={foreground}\n                                    onChange={() => this.setState({ foreground: !foreground })}\n                                >\n                                    Foreground\n                                </Checkbox>\n                                {foreground && (\n                                    <div className=\"mrgn-top-15 margn-left-15 \">\n                                        <Radio\n                                            checked={FgImageUpload}\n                                            onClick={() =>\n                                                this.setState({\n                                                    FgImageUpload: !FgImageUpload,\n                                                    FgImageUrl: !FgImageUrl,\n                                                })\n                                            }\n                                        >\n                                            Upload Image\n                                        </Radio>\n                                        <Radio\n                                            checked={FgImageUrl}\n                                            onClick={() =>\n                                                this.setState({\n                                                    FgImageUpload: !FgImageUpload,\n                                                    FgImageUrl: !FgImageUrl,\n                                                })\n                                            }\n                                        >\n                                            Enter URL\n                                        </Radio>\n\n                                        {FgImageUrl && (\n                                            <div className=\"mrgn-top-15 row-child\">\n                                                <input\n                                                    type=\"text\"\n                                                    className=\"form-input\"\n                                                    placeholder=\"Enter URL\"\n                                                    value={ui.fg.img}\n                                                    onChange={e =>\n                                                        this.handleStateInputField(\n                                                            'fg.img',\n                                                            e.currentTarget.value\n                                                        )\n                                                    }\n                                                />\n                                            </div>\n                                        )}\n                                        {FgImageUpload && (\n                                            <div className=\"mrgn-top-15 row-child\">\n                                                <div className=\"upload-file upload-box \">\n                                                    <input\n                                                        type=\"file\"\n                                                        className=\"file-input\"\n                                                        id=\"uploadFile\"\n                                                        onChange={e =>\n                                                            this.handleFileChange(e, 'fg.img')\n                                                        }\n                                                        accept=\".jpg\"\n                                                    />\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                )}\n                            </div>\n\n                            <div className=\"dotted-line\" />\n                            <Checkbox\n                                checked={advance}\n                                onChange={e => {\n                                    this.setState({ advance: !advance })\n                                }}\n                            >\n                                Include Close Button\n                            </Checkbox>\n                        </div>\n\n                        <ColoredButtons to=\"/in-app/step-3/\" as=\"link\" className=\"float\">\n                            Continue\n                        </ColoredButtons>\n                        <TransparentButtons\n                            onClick={() => this.props.history.goBack()}\n                            className=\"float grey-border\"\n                        >\n                            Go Back\n                        </TransparentButtons>\n                    </div>\n                    <div className=\"section section-right\">\n                        <SmallHeading>Preview</SmallHeading>\n                        <div className=\"preview-text\">\n                            Actual display may be different to this preview depending on the user’s\n                            device.\n                        </div>\n                    </div>\n                </div>\n            </WrapComponents>\n        )\n    }\n}\n\nexport default ConnectComponent(StepTwo)\n"]},"metadata":{},"sourceType":"module"}