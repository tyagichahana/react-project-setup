{"ast":null,"code":"import _defineProperty from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chahanatyagi/Work/cm-frontend/src/pages/InAppCampaign/Steps/Step2.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport Stepper from '@/components/stepper';\nimport WrapComponents from '@/components/wrapper';\nimport { Radio } from '@/components/radio';\nimport { ColoredButtons, TransparentButtons } from '@/components/button';\nimport { SmallHeading } from '@/components/headings/index';\nimport { ImagePreview } from '@/components/imageInput';\nimport ConnectComponent from '../../../connect';\nimport { Checkbox } from '@/components/checkBox/index';\nimport { UploadContent } from '@/actions/utils';\nimport { getParentDetails } from '@/actions/CreateCampaign/PnCampaign';\nimport { UpdateCampaignBulk } from '@/actions/CreateCampaign/PnCampaign';\nimport Alert from '@/components/alert/index'; // interstitial\n\nvar StepTwo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StepTwo, _Component);\n\n  function StepTwo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StepTwo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StepTwo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      text: '',\n      name: '',\n      steps: ['Channel', 'Message', 'Scheduling', 'Segmentation', 'Overview & Send'],\n      advance: false,\n      buttons: false,\n      background: false,\n      backgroundColor: false,\n      foreground: false,\n      FgImageUpload: true,\n      FgImageUrl: false,\n      ImageUpload: true,\n      ImageUrl: false,\n      upload: false,\n      closeActionUrl: true,\n      enterActionUrl: false,\n      icon: false,\n      iconImage: false,\n      userFilePath: '',\n      type: '',\n      ui: {\n        bg: {\n          img: '',\n          sc: '',\n          clr: '',\n          sw: 3,\n          rd: 3\n        },\n        fg: {\n          img: '',\n          clr: '7',\n          sc: '',\n          sw: 0,\n          rd: 0\n        },\n        ttl: {\n          txt: '',\n          clr: '#000000',\n          sz: '20'\n        },\n        msg: {\n          txt: '',\n          clr: '#000000',\n          sz: '20'\n        },\n        img: '',\n        appLink: '',\n        btnOrig: 3,\n        inAppButtons: [{\n          text: '',\n          clr: '',\n          bgc: '',\n          sz: '12',\n          appLink: '',\n          showUrlField: false\n        }]\n      }\n    };\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var parent_id, response, temp, ui;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              parent_id = _this.props.match.params.parent_id;\n              parent_id = parseInt(parent_id, 10);\n\n              _this.setState({\n                parentID: parent_id\n              });\n\n              _context.next = 5;\n              return getParentDetails(parent_id);\n\n            case 5:\n              response = _context.sent;\n              temp = _.head(response);\n\n              if (temp) {\n                ui = _this.state.ui;\n\n                _this.setState({\n                  ui: _.assign({}, ui, temp.ui),\n                  type: temp.type,\n                  name: temp.name\n                });\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.handleContinue = function () {\n      var data = _this.props.CreateCampaign.data;\n      var _this$state = _this.state,\n          ui = _this$state.ui,\n          parentID = _this$state.parentID;\n      var params = {\n        parentID: parentID,\n        ui: ui\n      };\n      var requests = [];\n      var next = \"/in-app/step-3/\".concat(parentID);\n\n      if (_.isArray(data)) {\n        _.forEach(data, function (part) {\n          requests.push(_objectSpread({}, part, params));\n        });\n      }\n\n      UpdateCampaignBulk(requests, next);\n    };\n\n    _this.handleFileChange =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e, path) {\n        var files, res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                files = e.target.files;\n\n                if (!(files.length === 1)) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                _context2.next = 4;\n                return UploadContent(files[0], 'media');\n\n              case 4:\n                res = _context2.sent;\n\n                if (res) {\n                  _this.setState({\n                    upload: true\n                  });\n\n                  _this.handleStateInputField(path, res.s3url);\n                }\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handleStateInputField = function (path, value) {\n      var ui = _this.state.ui;\n\n      _this.setState({\n        ui: _.set(ui, path, value)\n      });\n    };\n\n    _this.handleAddButton = function () {\n      var ui = _this.state.ui;\n\n      if (ui.inAppButtons.length < 2) {\n        ui.inAppButtons.push({\n          text: '',\n          clr: '',\n          bgc: '',\n          sz: '12',\n          appLink: '',\n          showUrlField: false\n        });\n\n        _this.setState({\n          ui: ui\n        });\n      }\n    };\n\n    _this.renderFields = function (type) {\n      var _this$state2 = _this.state,\n          button = _this$state2.button,\n          background = _this$state2.background,\n          ImageUpload = _this$state2.ImageUpload,\n          foreground = _this$state2.foreground,\n          FgImageUpload = _this$state2.FgImageUpload,\n          FgImageUrl = _this$state2.FgImageUrl,\n          backgroundColor = _this$state2.backgroundColor,\n          ui = _this$state2.ui,\n          name = _this$state2.name,\n          upload = _this$state2.upload;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, name), type !== 'full_screen_img' && type !== 'interstitial_img' && React.createElement(React.Fragment, null, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Title*\"), React.createElement(\"input\", {\n        placeholder: \"Enter Message title\",\n        type: \"text\",\n        className: \"form-input\",\n        name: \"title\",\n        value: ui.ttl.txt,\n        onChange: function onChange(e) {\n          return _this.handleStateInputField('ttl.txt', e.currentTarget.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        readOnly: true,\n        value: ui.ttl.clr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"color\",\n        value: ui.ttl.clr,\n        onChange: function onChange(e) {\n          return _this.handleStateInputField('ttl.clr', e.currentTarget.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        readOnly: true,\n        value: ui.ttl.sz,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"range\",\n        name: \"points\",\n        min: \"12\",\n        max: \"30\",\n        value: ui.ttl.sz,\n        onChange: function onChange(e) {\n          return _this.handleStateInputField('ttl.sz', e.currentTarget.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }))), type !== 'full_screen_img' && type !== 'interstitial_img' && React.createElement(React.Fragment, null, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Message*\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Enter Message\",\n        type: \"text\",\n        className: \"form-input\",\n        name: \"message\",\n        value: ui.msg.txt,\n        onChange: function onChange(e) {\n          return _this.handleStateInputField('msg.txt', e.currentTarget.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        readOnly: true,\n        value: ui.msg.clr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"color\",\n        value: ui.msg.clr,\n        onChange: function onChange(e) {\n          return _this.handleStateInputField('msg.clr', e.currentTarget.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        readOnly: true,\n        value: ui.msg.sz,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"range\",\n        name: \"points\",\n        min: \"12\",\n        max: \"30\",\n        value: ui.msg.sz,\n        onChange: function onChange(e) {\n          return _this.handleStateInputField('msg.sz', e.currentTarget.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      })))), type !== 'full_screen_img' && type !== 'interstitial_img' && React.createElement(\"div\", {\n        className: \"advance-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: button,\n        value: \"button\",\n        onChange: function onChange() {\n          return _this.setState({\n            button: !button\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"Button\"), button && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, _.map(ui.inAppButtons, function (btn, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"mrgn-top-15 row-child\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          className: \"form-input\",\n          placeholder: \"Button Text\",\n          value: btn.text,\n          onChange: function onChange(e) {\n            return _this.handleStateInputField(\"inAppButtons[\".concat(index, \"].text\"), e.currentTarget.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"mrgn-top-15 margn-left-15\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }, React.createElement(Radio, {\n          checked: !btn.showUrlField,\n          onChange: function onChange() {\n            return _this.handleStateInputField(\"inAppButtons[\".concat(index, \"].showUrlField\"), false);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, \"Close Notification\"), React.createElement(Radio, {\n          checked: btn.showUrlField,\n          onChange: function onChange() {\n            return _this.handleStateInputField(\"inAppButtons[\".concat(index, \"].showUrlField\"), true);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }, \"Enter Redirect URL\"), btn.showUrlField && React.createElement(\"div\", {\n          className: \"mrgn-top-15 row-child\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          className: \"form-input\",\n          placeholder: \"Enter URL\",\n          value: btn.appLink,\n          onChange: function onChange(e) {\n            return _this.handleStateInputField(\"inAppButtons[\".concat(index, \"].appLink\"), e.currentTarget.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        }))));\n      }), ui.inAppButtons.length < 2 && React.createElement(\"div\", {\n        className: \"mrgn-top-15 margn-left-15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(TransparentButtons, {\n        onClick: function onClick() {\n          return _this.handleAddButton();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"+ Add Button\")))), type !== 'borderBottom' && type !== 'borderTop' && type !== 'interstitial' && type !== 'full_screen' && React.createElement(\"div\", {\n        className: \"advance-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: background,\n        onChange: function onChange() {\n          return _this.setState({\n            background: !background\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, \"Background\"), background && React.createElement(\"div\", {\n        className: \"mrgn-top-15 margn-left-15 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(Radio, {\n        checked: ImageUpload,\n        onChange: function onChange() {\n          return _this.setState({\n            ImageUpload: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"Upload Image\"), React.createElement(Radio, {\n        checked: !ImageUpload,\n        onChange: function onChange() {\n          return _this.setState({\n            ImageUpload: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, \"Enter URL\"), ImageUpload ? React.createElement(\"div\", {\n        className: \"mrgn-top-15 row-child\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, ui.bg.img ? React.createElement(ImagePreview, {\n        media: ui.bg.img,\n        onClick: function onClick() {\n          return _this.handleStateInputField('bg.img', '');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        className: \"upload-file upload-box \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        className: \"file-input\",\n        id: \"uploadFile\",\n        onChange: function onChange(e) {\n          return _this.handleFileChange(e, 'bg.img');\n        },\n        accept: \"image/*\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        className: \"mrgn-top-15 row-child\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-input\",\n        placeholder: \"Enter URL\",\n        value: ui.bg.img,\n        onChange: function onChange(e) {\n          return _this.handleStateInputField('bg.img', e.currentTarget.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      })), upload && React.createElement(Alert, {\n        className: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, \"Image uploaded Successfully!\"))), type !== 'full_screen_img' && type !== 'interstitial_img' && React.createElement(\"div\", {\n        className: \"advance-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: backgroundColor,\n        onChange: function onChange() {\n          return _this.setState({\n            backgroundColor: !backgroundColor\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, \"Background Color\"), backgroundColor && React.createElement(\"div\", {\n        className: \"mrgn-top-15 margn-left-15 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mrgn-top-15 row-child\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"color\",\n        value: ui.bg.clr,\n        onChange: function onChange(e) {\n          return _this.handleStateInputField('bg.clr', e.currentTarget.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      })))), type !== 'borderTop' && type !== 'borderBottom' && type !== 'full_screen_img' && type !== 'interstitial_img' && React.createElement(\"div\", {\n        className: \"advance-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: foreground,\n        onChange: function onChange() {\n          return _this.setState({\n            foreground: !foreground\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, \"Foreground\"), foreground && React.createElement(\"div\", {\n        className: \"mrgn-top-15 margn-left-15 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, React.createElement(Radio, {\n        checked: FgImageUpload,\n        onChange: function onChange() {\n          return _this.setState({\n            FgImageUpload: !FgImageUpload,\n            FgImageUrl: !FgImageUrl\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, \"Upload Image\"), React.createElement(Radio, {\n        checked: FgImageUrl,\n        onClick: function onClick() {\n          return _this.setState({\n            FgImageUpload: !FgImageUpload,\n            FgImageUrl: !FgImageUrl\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, \"Enter URL\"), FgImageUrl && React.createElement(\"div\", {\n        className: \"mrgn-top-15 row-child\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-input\",\n        placeholder: \"Enter URL\",\n        value: ui.fg.img,\n        onChange: function onChange(e) {\n          return _this.handleStateInputField('fg.img', e.currentTarget.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      })), FgImageUpload && React.createElement(\"div\", {\n        className: \"mrgn-top-15 row-child\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"upload-file upload-box \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        className: \"file-input\",\n        id: \"uploadFile\",\n        onChange: function onChange(e) {\n          return _this.handleFileChange(e, 'fg.img');\n        },\n        accept: \"image/*\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }))))));\n    };\n\n    return _this;\n  }\n\n  _createClass(StepTwo, [{\n    key: \"handleInputFields\",\n    value: function handleInputFields(key, value) {\n      if (!value) {\n        this.setState(_defineProperty({}, key, value));\n      } else {\n        this.setState(_defineProperty({}, key, value));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          steps = _this$state3.steps,\n          advance = _this$state3.advance,\n          type = _this$state3.type;\n      return React.createElement(WrapComponents, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593\n        },\n        __self: this\n      }, React.createElement(Stepper, {\n        steps: steps,\n        activeStep: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"flex-space-bt \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"section-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, this.renderFields(type), React.createElement(\"div\", {\n        className: \"dotted-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }), React.createElement(Checkbox, {\n        checked: advance,\n        onChange: function onChange(e) {\n          _this2.setState({\n            advance: !advance\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        },\n        __self: this\n      }, \"Include Close Button\")), React.createElement(ColoredButtons, {\n        onClick: this.handleContinue,\n        className: \"float\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610\n        },\n        __self: this\n      }, \"Continue\"), React.createElement(TransparentButtons, {\n        onClick: function onClick() {\n          return _this2.props.history.goBack();\n        },\n        className: \"float grey-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613\n        },\n        __self: this\n      }, \"Go Back\")), React.createElement(\"div\", {\n        className: \"section section-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620\n        },\n        __self: this\n      }, React.createElement(SmallHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621\n        },\n        __self: this\n      }, \"Preview\"), React.createElement(\"div\", {\n        className: \"preview-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622\n        },\n        __self: this\n      }, \"Actual display may be different to this preview depending on the user\\u2019s device.\"))));\n    }\n  }]);\n\n  return StepTwo;\n}(Component);\n\nexport default ConnectComponent(StepTwo);","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/pages/InAppCampaign/Steps/Step2.js"],"names":["React","Component","_","Stepper","WrapComponents","Radio","ColoredButtons","TransparentButtons","SmallHeading","ImagePreview","ConnectComponent","Checkbox","UploadContent","getParentDetails","UpdateCampaignBulk","Alert","StepTwo","state","text","name","steps","advance","buttons","background","backgroundColor","foreground","FgImageUpload","FgImageUrl","ImageUpload","ImageUrl","upload","closeActionUrl","enterActionUrl","icon","iconImage","userFilePath","type","ui","bg","img","sc","clr","sw","rd","fg","ttl","txt","sz","msg","appLink","btnOrig","inAppButtons","bgc","showUrlField","componentDidMount","parent_id","props","match","params","parseInt","setState","parentID","response","temp","head","assign","handleContinue","data","CreateCampaign","requests","next","isArray","forEach","part","push","handleFileChange","e","path","files","target","length","res","handleStateInputField","s3url","value","set","handleAddButton","renderFields","button","currentTarget","map","btn","index","key","history","goBack"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport _ from 'lodash'\nimport Stepper from '@/components/stepper'\nimport WrapComponents from '@/components/wrapper'\nimport { Radio } from '@/components/radio'\nimport { ColoredButtons, TransparentButtons } from '@/components/button'\nimport { SmallHeading } from '@/components/headings/index'\nimport { ImagePreview } from '@/components/imageInput'\nimport ConnectComponent from '../../../connect'\nimport { Checkbox } from '@/components/checkBox/index'\nimport { UploadContent } from '@/actions/utils'\nimport { getParentDetails } from '@/actions/CreateCampaign/PnCampaign'\nimport { UpdateCampaignBulk } from '@/actions/CreateCampaign/PnCampaign'\nimport Alert from '@/components/alert/index'\n\n// interstitial\n\nclass StepTwo extends Component {\n    state = {\n        text: '',\n        name: '',\n        steps: ['Channel', 'Message', 'Scheduling', 'Segmentation', 'Overview & Send'],\n        advance: false,\n        buttons: false,\n        background: false,\n        backgroundColor: false,\n        foreground: false,\n        FgImageUpload: true,\n        FgImageUrl: false,\n        ImageUpload: true,\n        ImageUrl: false,\n        upload: false,\n        closeActionUrl: true,\n        enterActionUrl: false,\n        icon: false,\n        iconImage: false,\n        userFilePath: '',\n        type: '',\n        ui: {\n            bg: {\n                img: '',\n                sc: '',\n                clr: '',\n                sw: 3,\n                rd: 3,\n            },\n            fg: {\n                img: '',\n                clr: '7',\n                sc: '',\n                sw: 0,\n                rd: 0,\n            },\n            ttl: {\n                txt: '',\n                clr: '#000000',\n                sz: '20',\n            },\n            msg: {\n                txt: '',\n                clr: '#000000',\n                sz: '20',\n            },\n            img: '',\n            appLink: '',\n            btnOrig: 3,\n            inAppButtons: [\n                {\n                    text: '',\n                    clr: '',\n                    bgc: '',\n                    sz: '12',\n                    appLink: '',\n                    showUrlField: false,\n                },\n            ],\n        },\n    }\n\n    componentDidMount = async () => {\n        let {\n            params: { parent_id },\n        } = this.props.match\n        parent_id = parseInt(parent_id, 10)\n        this.setState({\n            parentID: parent_id,\n        })\n        const response = await getParentDetails(parent_id)\n        const temp = _.head(response)\n        if (temp) {\n            const { ui } = this.state\n            this.setState({\n                ui: _.assign({}, ui, temp.ui),\n                type: temp.type,\n                name: temp.name,\n            })\n        }\n    }\n    // add summary state in this function once api add this key\n    handleContinue = () => {\n        const { data } = this.props.CreateCampaign\n        const { ui, parentID } = this.state\n        const params = {\n            parentID,\n            ui,\n        }\n        const requests = []\n        const next = `/in-app/step-3/${parentID}`\n        if (_.isArray(data)) {\n            _.forEach(data, part => {\n                requests.push({\n                    ...part,\n                    ...params,\n                })\n            })\n        }\n        UpdateCampaignBulk(requests, next)\n    }\n\n    handleFileChange = async (e, path) => {\n        const { files } = e.target\n        if (files.length === 1) {\n            const res = await UploadContent(files[0], 'media')\n            if (res) {\n                this.setState({ upload: true })\n                this.handleStateInputField(path, res.s3url)\n            }\n        }\n    }\n\n    handleInputFields(key, value) {\n        if (!value) {\n            this.setState({\n                [key]: value,\n            })\n        } else {\n            this.setState({\n                [key]: value,\n            })\n        }\n    }\n\n    handleStateInputField = (path, value) => {\n        let { ui } = this.state\n        this.setState({\n            ui: _.set(ui, path, value),\n        })\n    }\n\n    handleAddButton = () => {\n        const { ui } = this.state\n        if (ui.inAppButtons.length < 2) {\n            ui.inAppButtons.push({\n                text: '',\n                clr: '',\n                bgc: '',\n                sz: '12',\n                appLink: '',\n                showUrlField: false,\n            })\n\n            this.setState({\n                ui,\n            })\n        }\n    }\n\n    renderFields = type => {\n        const {\n            button,\n            background,\n            ImageUpload,\n            foreground,\n            FgImageUpload,\n            FgImageUrl,\n            backgroundColor,\n            ui,\n            name,\n            upload,\n        } = this.state\n\n        return (\n            <div>\n                <SmallHeading>{name}</SmallHeading>\n                {type !== 'full_screen_img' && type !== 'interstitial_img' && (\n                    <>\n                        <SmallHeading>Title*</SmallHeading>\n                        <input\n                            placeholder=\"Enter Message title\"\n                            type=\"text\"\n                            className=\"form-input\"\n                            name=\"title\"\n                            value={ui.ttl.txt}\n                            onChange={e =>\n                                this.handleStateInputField('ttl.txt', e.currentTarget.value)\n                            }\n                        />\n                        <div>\n                            <input type=\"text\" readOnly value={ui.ttl.clr} />\n                            <input\n                                type=\"color\"\n                                value={ui.ttl.clr}\n                                onChange={e =>\n                                    this.handleStateInputField('ttl.clr', e.currentTarget.value)\n                                }\n                            />\n                        </div>\n                        <div>\n                            <input type=\"text\" readOnly value={ui.ttl.sz} />\n                            <input\n                                type=\"range\"\n                                name=\"points\"\n                                min=\"12\"\n                                max=\"30\"\n                                value={ui.ttl.sz}\n                                onChange={e =>\n                                    this.handleStateInputField('ttl.sz', e.currentTarget.value)\n                                }\n                            />\n                        </div>\n                    </>\n                )}\n                {type !== 'full_screen_img' && type !== 'interstitial_img' && (\n                    <>\n                        <SmallHeading>Message*</SmallHeading>\n                        <div>\n                            <input\n                                placeholder=\"Enter Message\"\n                                type=\"text\"\n                                className=\"form-input\"\n                                name=\"message\"\n                                value={ui.msg.txt}\n                                onChange={e =>\n                                    this.handleStateInputField('msg.txt', e.currentTarget.value)\n                                }\n                            />\n                            <div>\n                                <input type=\"text\" readOnly value={ui.msg.clr} />\n                                <input\n                                    type=\"color\"\n                                    value={ui.msg.clr}\n                                    onChange={e =>\n                                        this.handleStateInputField('msg.clr', e.currentTarget.value)\n                                    }\n                                />\n                            </div>\n                            <div>\n                                <input type=\"text\" readOnly value={ui.msg.sz} />\n                                <input\n                                    type=\"range\"\n                                    name=\"points\"\n                                    min=\"12\"\n                                    max=\"30\"\n                                    value={ui.msg.sz}\n                                    onChange={e =>\n                                        this.handleStateInputField('msg.sz', e.currentTarget.value)\n                                    }\n                                />\n                            </div>\n                        </div>\n                    </>\n                )}\n                {type !== 'full_screen_img' && type !== 'interstitial_img' && (\n                    <div className=\"advance-row\">\n                        <Checkbox\n                            checked={button}\n                            value=\"button\"\n                            onChange={() => this.setState({ button: !button })}\n                        >\n                            Button\n                        </Checkbox>\n                        {button && (\n                            <div>\n                                {_.map(ui.inAppButtons, (btn, index) => (\n                                    <div key={index}>\n                                        <div className=\"mrgn-top-15 row-child\">\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-input\"\n                                                placeholder=\"Button Text\"\n                                                value={btn.text}\n                                                onChange={e =>\n                                                    this.handleStateInputField(\n                                                        `inAppButtons[${index}].text`,\n                                                        e.currentTarget.value\n                                                    )\n                                                }\n                                            />\n                                        </div>\n                                        <div className=\"mrgn-top-15 margn-left-15\">\n                                            <Radio\n                                                checked={!btn.showUrlField}\n                                                onChange={() =>\n                                                    this.handleStateInputField(\n                                                        `inAppButtons[${index}].showUrlField`,\n                                                        false\n                                                    )\n                                                }\n                                            >\n                                                Close Notification\n                                            </Radio>\n                                            <Radio\n                                                checked={btn.showUrlField}\n                                                onChange={() =>\n                                                    this.handleStateInputField(\n                                                        `inAppButtons[${index}].showUrlField`,\n                                                        true\n                                                    )\n                                                }\n                                            >\n                                                Enter Redirect URL\n                                            </Radio>\n                                            {btn.showUrlField && (\n                                                <div className=\"mrgn-top-15 row-child\">\n                                                    <input\n                                                        type=\"text\"\n                                                        className=\"form-input\"\n                                                        placeholder=\"Enter URL\"\n                                                        value={btn.appLink}\n                                                        onChange={e =>\n                                                            this.handleStateInputField(\n                                                                `inAppButtons[${index}].appLink`,\n                                                                e.currentTarget.value\n                                                            )\n                                                        }\n                                                    />\n                                                </div>\n                                            )}\n                                        </div>\n                                    </div>\n                                ))}\n                                {ui.inAppButtons.length < 2 && (\n                                    <div className=\"mrgn-top-15 margn-left-15\">\n                                        <TransparentButtons onClick={() => this.handleAddButton()}>\n                                            + Add Button\n                                        </TransparentButtons>\n                                    </div>\n                                )}\n                            </div>\n                        )}\n                    </div>\n                )}\n                {type !== 'borderBottom' &&\n                    type !== 'borderTop' &&\n                    type !== 'interstitial' &&\n                    type !== 'full_screen' && (\n                        <div className=\"advance-row\">\n                            <Checkbox\n                                checked={background}\n                                onChange={() => this.setState({ background: !background })}\n                            >\n                                Background\n                            </Checkbox>\n                            {background && (\n                                <div className=\"mrgn-top-15 margn-left-15 \">\n                                    <Radio\n                                        checked={ImageUpload}\n                                        onChange={() =>\n                                            this.setState({\n                                                ImageUpload: true,\n                                            })\n                                        }\n                                    >\n                                        Upload Image\n                                    </Radio>\n                                    <Radio\n                                        checked={!ImageUpload}\n                                        onChange={() =>\n                                            this.setState({\n                                                ImageUpload: false,\n                                            })\n                                        }\n                                    >\n                                        Enter URL\n                                    </Radio>\n                                    {ImageUpload ? (\n                                        <div className=\"mrgn-top-15 row-child\">\n                                            {ui.bg.img ? (\n                                                <ImagePreview\n                                                    media={ui.bg.img}\n                                                    onClick={() =>\n                                                        this.handleStateInputField('bg.img', '')\n                                                    }\n                                                />\n                                            ) : (\n                                                <div className=\"upload-file upload-box \">\n                                                    <input\n                                                        type=\"file\"\n                                                        className=\"file-input\"\n                                                        id=\"uploadFile\"\n                                                        onChange={e =>\n                                                            this.handleFileChange(e, 'bg.img')\n                                                        }\n                                                        accept=\"image/*\"\n                                                    />\n                                                </div>\n                                            )}\n                                        </div>\n                                    ) : (\n                                        <div className=\"mrgn-top-15 row-child\">\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-input\"\n                                                placeholder=\"Enter URL\"\n                                                value={ui.bg.img}\n                                                onChange={e =>\n                                                    this.handleStateInputField(\n                                                        'bg.img',\n                                                        e.currentTarget.value\n                                                    )\n                                                }\n                                            />\n                                        </div>\n                                    )}\n                                    {upload && (\n                                        <Alert className=\"success\">\n                                            Image uploaded Successfully!\n                                        </Alert>\n                                    )}\n                                </div>\n                            )}\n                        </div>\n                    )}\n                {type !== 'full_screen_img' && type !== 'interstitial_img' && (\n                    <div className=\"advance-row\">\n                        <Checkbox\n                            checked={backgroundColor}\n                            onChange={() => this.setState({ backgroundColor: !backgroundColor })}\n                        >\n                            Background Color\n                        </Checkbox>\n                        {backgroundColor && (\n                            <div className=\"mrgn-top-15 margn-left-15 \">\n                                <div className=\"mrgn-top-15 row-child\">\n                                    <input\n                                        type=\"color\"\n                                        value={ui.bg.clr}\n                                        onChange={e =>\n                                            this.handleStateInputField(\n                                                'bg.clr',\n                                                e.currentTarget.value\n                                            )\n                                        }\n                                    />\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                )}\n                {type !== 'borderTop' &&\n                    type !== 'borderBottom' &&\n                    type !== 'full_screen_img' &&\n                    type !== 'interstitial_img' && (\n                        <div className=\"advance-row\">\n                            <Checkbox\n                                checked={foreground}\n                                onChange={() => this.setState({ foreground: !foreground })}\n                            >\n                                Foreground\n                            </Checkbox>\n                            {foreground && (\n                                <div className=\"mrgn-top-15 margn-left-15 \">\n                                    <Radio\n                                        checked={FgImageUpload}\n                                        onChange={() =>\n                                            this.setState({\n                                                FgImageUpload: !FgImageUpload,\n                                                FgImageUrl: !FgImageUrl,\n                                            })\n                                        }\n                                    >\n                                        Upload Image\n                                    </Radio>\n                                    <Radio\n                                        checked={FgImageUrl}\n                                        onClick={() =>\n                                            this.setState({\n                                                FgImageUpload: !FgImageUpload,\n                                                FgImageUrl: !FgImageUrl,\n                                            })\n                                        }\n                                    >\n                                        Enter URL\n                                    </Radio>\n\n                                    {FgImageUrl && (\n                                        <div className=\"mrgn-top-15 row-child\">\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-input\"\n                                                placeholder=\"Enter URL\"\n                                                value={ui.fg.img}\n                                                onChange={e =>\n                                                    this.handleStateInputField(\n                                                        'fg.img',\n                                                        e.currentTarget.value\n                                                    )\n                                                }\n                                            />\n                                        </div>\n                                    )}\n                                    {FgImageUpload && (\n                                        <div className=\"mrgn-top-15 row-child\">\n                                            <div className=\"upload-file upload-box \">\n                                                <input\n                                                    type=\"file\"\n                                                    className=\"file-input\"\n                                                    id=\"uploadFile\"\n                                                    onChange={e =>\n                                                        this.handleFileChange(e, 'fg.img')\n                                                    }\n                                                    accept=\"image/*\"\n                                                />\n                                            </div>\n                                        </div>\n                                    )}\n                                </div>\n                            )}\n                        </div>\n                    )}\n                {/* <div className=\"advance-row\">\n                                <Checkbox\n                                    checked={icon}\n                                    onChange={() => this.setState({ icon: !icon })}\n                                >\n                                    Icon\n                                </Checkbox>\n                                {icon && (\n                                    <div className=\"mrgn-top-15 margn-left-15 \">\n                                        <Radio\n                                            checked={!iconImage}\n                                            onClick={() =>\n                                                this.setState({\n                                                    iconImage: false,\n                                                })\n                                            }\n                                        >\n                                            Upload Image\n                                        </Radio>\n                                        <Radio\n                                            checked={iconImage}\n                                            onClick={() =>\n                                                this.setState({\n                                                    iconImage: true,\n                                                })\n                                            }\n                                        >\n                                            Enter URL\n                                        </Radio>\n\n                                        {iconImage && (\n                                            <div className=\"mrgn-top-15 row-child\">\n                                                <input\n                                                    type=\"text\"\n                                                    className=\"form-input\"\n                                                    placeholder=\"Enter URL\"\n                                                    value={ui.fg.img}\n                                                    onChange={e =>\n                                                        this.handleStateInputField(\n                                                            'fg.img',\n                                                            e.currentTarget.value\n                                                        )\n                                                    }\n                                                />\n                                            </div>\n                                        )}\n                                        {FgImageUpload && (\n                                            <div className=\"mrgn-top-15 row-child\">\n                                                <div className=\"upload-file upload-box \">\n                                                    <input\n                                                        type=\"file\"\n                                                        className=\"file-input\"\n                                                        id=\"uploadFile\"\n                                                        onChange={e =>\n                                                            this.handleFileChange(e, 'fg.img')\n                                                        }\n                                                        accept=\"image/*\"\n                                                    />\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                )}\n                            </div> */}\n            </div>\n        )\n    }\n\n    render() {\n        const { steps, advance, type } = this.state\n\n        return (\n            <WrapComponents>\n                <Stepper steps={steps} activeStep={1} />\n                <div className=\"flex-space-bt \">\n                    <div className=\"section-left\">\n                        <div className=\"section\">\n                            {this.renderFields(type)}\n                            <div className=\"dotted-line\" />\n                            <Checkbox\n                                checked={advance}\n                                onChange={e => {\n                                    this.setState({ advance: !advance })\n                                }}\n                            >\n                                Include Close Button\n                            </Checkbox>\n                        </div>\n\n                        <ColoredButtons onClick={this.handleContinue} className=\"float\">\n                            Continue\n                        </ColoredButtons>\n                        <TransparentButtons\n                            onClick={() => this.props.history.goBack()}\n                            className=\"float grey-border\"\n                        >\n                            Go Back\n                        </TransparentButtons>\n                    </div>\n                    <div className=\"section section-right\">\n                        <SmallHeading>Preview</SmallHeading>\n                        <div className=\"preview-text\">\n                            Actual display may be different to this preview depending on the user’s\n                            device.\n                        </div>\n                    </div>\n                </div>\n            </WrapComponents>\n        )\n    }\n}\n\nexport default ConnectComponent(StepTwo)\n"]},"metadata":{},"sourceType":"module"}