{"ast":null,"code":"import _defineProperty from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chahanatyagi/Work/cm-frontend/src/pages/EmailCampaign/components/codeEditor/index.js\";\nimport React, { Component } from 'react';\nimport { map, get, isEqual } from 'lodash'; // import cx from 'classnames'\n\nimport AceEditor from 'react-ace'; // import brace from 'brace';\n\nimport moment from 'moment'; // import DayPickerInput from 'react-day-picker/DayPickerInput'\n// import TimePicker from 'rc-time-picker'\n// import 'react-day-picker/lib/style.css'\n// import 'rc-time-picker/assets/index.css'\n\nimport 'brace/mode/html';\nimport 'brace/theme/solarized_dark';\nimport './index.scss'; // import Header from '../../../components/header'\n// import Container from '../../../components/container'\n// import Loader from '../../../components/loader'\n\nimport { ColoredButtons } from '../../../components/buttons'; // import HtmlPreview from '../components/HtmlPreview'\n// import Alert from '../../../components/alert'\n\nimport ConnectComponent from '../../../../connect'; // actions\n// import {\n//     fetchContactData,\n//     fetchUnsubscribeGroup,\n//     saveEmailCampaign,\n//     fetchSenders,\n//     editEmailCampaign,\n//     showMessage,\n//     getCurrentCampaign,\n//     sendEmailCampaign,\n//     getCampaignEmailDrip,\n//     updateCampaignEmailDrip,\n// } from '../../../store/actions'\n// import { formatRecepients, formatSenders, formatUSGroup } from '../utils'\n\nvar CodeCompaign =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CodeCompaign, _Component);\n\n  function CodeCompaign() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CodeCompaign);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CodeCompaign)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.editor = null;\n    _this.state = {\n      campaignId: '',\n      sidebarItems: [{\n        id: 0,\n        name: 'Campaign Settings',\n        active: false,\n        children: []\n      }, {\n        id: 1,\n        name: 'Recepient',\n        active: false,\n        children: [],\n        usg: []\n      }, {\n        id: 2,\n        name: 'Scheduling',\n        active: false,\n        children: []\n      }],\n      currentPreview: 0,\n      emailHtml: \"<!DOCTYPE html><html><head><title></title><meta name='viewport' content='width=device-width, initial-scale=1.0'><style type='text/css'>@media only screen and (max-width: 400px) !important{.iconsbit div img{width:15px !important;} }</style></head><body><div class='followus'><p style='font-size: 14px; font-family: impact; color: #2d2d52; text-align: center; margin:auto;'>FOLLOW US</p></div><div class ='iconsbit' style='border-radius: 5px;display: flex;margin:auto; width: 165px; max-width: 225px;'><div style='padding: 7px 5px; margin-right: 0px;'><a href='https://www.facebook.com/bitnautic/?ref=br_rs' target='_blank'><img src='https://image.ibb.co/f4oo5T/Facebook_icon.png' style='width:18px;'></a></div><div style='padding: 7px 5px; margin-right: 0px;'> <a href='https://www.instagram.com/bitnautic/' target='_blank'><img src='https://image.ibb.co/n6wVKo/instagram_logo.png' style='width:18px;'></a></div><div style='padding: 7px 5px; margin-right: 0px;'> <a href='https://www.linkedin.com/company/bitnautic-official/' target='_blank'><img src='https://image.ibb.co/ettAKo/linkedin_logo_1.png' style='width:18px;'></a></div><div style='padding: 7px 5px; margin-right: 0px;'> <a href='https://bitcointalk.org/index.php?topic=3351552.0' target='_blank'><img src='https://image.ibb.co/cFpvkT/Bitcointalk.png' style='width:18px;'></a></div><div style='padding: 7px 5px; margin-right: 0px;'> <a href=' https://t.me/bitnautic_group' target='_blank'><img src='https://image.ibb.co/dOZvkT/telegram1.png' style='width:18px; margin-right: 0px;'></a></div><div style='padding: 7px 4px; margin-left:0px; margin-right: auto;'> <a href='https://www.reddit.com/r/bitnautic' target='_blank'><img src='https://image.ibb.co/j2JzC8/reddit_social_logo_character.png' style='width:18px;' ></a></div></div><div class='bottom-text'> <p style='font-size:7px;color: black;top: 45%;text-align: center;'> You are receiving this email because you subscribed to the newsletter on the website <a href='https://bitnautic.io/?pk_campaign=Bitnautic_Emailer_28_06_Growth_Potential&pk_medium=sendgrid' target='_blank' >www.bitnautic.io.</a>You can <a href='<%asm_preferences_raw_url%>'>update your preferences</a> or <a href='[unsubscribe]'>unsubscribe from this list</a>.</p></div></div></body></html> \",\n      from: '',\n      subject: '',\n      preheader: '',\n      title: '',\n      campaignName: 'Untitled',\n      selectedSender: null,\n      selectedSendTo: [],\n      selectedUsg: [],\n      customULink: '',\n      startDate: new Date(),\n      startTime: moment().hour(0).minute(0),\n      isNow: true,\n      dripLevels: [],\n      dripLevelSelected: '',\n      loadLvlOne: true // componentWillMount() {\n      //     fetchSenders()\n      //     fetchContactData()\n      //     fetchUnsubscribeGroup()\n      //     if (\n      //         this.props.match.params &&\n      //         this.props.match.params.id &&\n      //         this.props.match.params.id !== 'new'\n      //     ) {\n      //         getCurrentCampaign(this.props.match.params.id)\n      //         this.setState({\n      //             campaignId: this.props.match.params.id,\n      //         })\n      //     }\n      // }\n      // componentWillReceiveProps(props) {\n      //     const { campaignLevelData } = props.campaign\n      //     if (!isEqual(campaignLevelData, this.props.campaign.campaignLevelData)) {\n      //         this.setState({\n      //             emailHtml: campaignLevelData.html_content\n      //                 ? campaignLevelData.html_content\n      //                 : this.state.emailHtml,\n      //             subject: campaignLevelData.subject ? campaignLevelData.subject : '',\n      //             customULink: campaignLevelData.custom_unsubscribe_url\n      //                 ? campaignLevelData.custom_unsubscribe_url\n      //                 : '',\n      //         })\n      //     }\n      //     if (props.campaign.data && !isEqual(props.campaign.data, this.props.campaign.data)) {\n      //         let ids = get(props.campaign, 'data.email_campaign_id')\n      //         if (!ids) {\n      //             ids = get(props.campaign, 'data.email_campaign_ids')\n      //         }\n      //         this.setState({\n      //             dripLevels: map(ids, (part, i) => {\n      //                 return {\n      //                     label: `Level ${i + 1}`,\n      //                     value: part,\n      //                 }\n      //             }),\n      //             dripLevelSelected: get(ids, '[0]'),\n      //         })\n      //         if (this.state.loadLvlOne) {\n      //             const params = {\n      //                 campaign_id: this.state.campaignId,\n      //                 email_id: get(ids, '[0]'),\n      //             }\n      //             getCampaignEmailDrip(params)\n      //             this.setState({\n      //                 loadLvlOne: false,\n      //             })\n      //         }\n      //     }\n      //     if (props.contacts.data && props.contacts.data.length) {\n      //         this.setState(({ sidebarItems }) => {\n      //             return {\n      //                 sidebarItems: map(sidebarItems, item => {\n      //                     if (item.id === 0) {\n      //                         item.children = formatSenders(props.senders.data)\n      //                     }\n      //                     return item\n      //                 }),\n      //             }\n      //         })\n      //     }\n      //     if (props.contacts.data && props.contacts.data.length) {\n      //         this.setState(({ sidebarItems }) => {\n      //             return {\n      //                 sidebarItems: map(sidebarItems, item => {\n      //                     if (item.id === 1) {\n      //                         item.children = formatRecepients(props.contacts.data)\n      //                     }\n      //                     return item\n      //                 }),\n      //             }\n      //         })\n      //     }\n      //     if (props.unSubscribeGroup.data && props.unSubscribeGroup.data.length) {\n      //         this.setState(({ sidebarItems }) => {\n      //             return {\n      //                 sidebarItems: map(sidebarItems, item => {\n      //                     if (item.id === 1) {\n      //                         item.usg = formatUSGroup(props.unSubscribeGroup.data)\n      //                     }\n      //                     return item\n      //                 }),\n      //             }\n      //         })\n      //     }\n      // }\n      // exportHtml = send => {\n      //     let schedule_time = ''\n      //     const params = {\n      //         title: this.state.title,\n      //         campaign_name: this.state.campaignName,\n      //         platform_name: 'sendgrid',\n      //         suppression_group: get(this.state.selectedUsg, 'value')\n      //             ? [get(this.state.selectedUsg, 'value')]\n      //             : [],\n      //         email_group: map(this.state.selectedSendTo, p => p.id),\n      //         sender: get(this.state.selectedSender, 'value'),\n      //         subject: this.state.subject,\n      //         html_content: this.state.emailHtml,\n      //         segments: [],\n      //         // \"schedule_time\": \"\",\n      //         custom_unsubscribe_url: this.state.customULink,\n      //         is_now: this.state.isNow,\n      //     }\n      //     if (!this.state.isNow) {\n      //         const startDate = moment(this.state.startDate)\n      //         const startTime = this.state.startTime\n      //         schedule_time = `${startDate.format('YYYY-MM-DD')} ${startTime.format('hh:mm')}`\n      //     }\n      //     if (send) {\n      //         return sendEmailCampaign(params, this.state.campaignId, schedule_time)\n      //     }\n      //     if (this.props.campaign.currentCampaign) {\n      //         editEmailCampaign(this.props.campaign.currentCampaign, params)\n      //     } else {\n      //         saveEmailCampaign(params)\n      //     }\n      // }\n      // toggleSidebarMenu = index => {\n      //     this.setState(({ sidebarItems }) => {\n      //         sidebarItems[index].active = !sidebarItems[index].active\n      //         return {\n      //             sidebarItems: sidebarItems,\n      //         }\n      //     })\n      // }\n\n    };\n\n    _this.handleAceInput = function (value) {\n      _this.setState({\n        emailHtml: value\n      });\n    };\n\n    _this.handleInputChange = function (key, value) {\n      _this.setState(_defineProperty({}, key, value));\n    };\n\n    _this.handleSenderChange = function (sender) {\n      _this.setState({\n        selectedSender: sender\n      });\n    };\n\n    _this.handleRecepientChange = function (r) {\n      _this.setState({\n        selectedSendTo: r\n      });\n    };\n\n    _this.handleUSGChange = function (r) {\n      _this.setState({\n        selectedUsg: r\n      });\n    };\n\n    _this.handleDateChange = function (date) {\n      _this.setState({\n        startDate: date\n      });\n    };\n\n    _this.handleTimeChange = function (time) {\n      _this.setState({\n        startTime: time\n      });\n    };\n\n    _this.switchPreview = function (preview) {\n      _this.setState({\n        currentPreview: preview\n      });\n    };\n\n    _this.handleDripLevelChange = function (value) {\n      _this.setState({\n        dripLevelSelected: value\n      });\n\n      if (_this.state.subject !== '') {\n        var params = {\n          html_content: _this.state.emailHtml,\n          subject: _this.state.subject,\n          custom_unsubscribe_url: _this.state.customULink,\n          campaign_id: _this.state.campaignId,\n          email_id: _this.state.dripLevelSelected // updateCampaignEmailDrip(params)\n\n        };\n        params.email_id = value;\n        getCampaignEmailDrip(params);\n\n        _this.setState({\n          subject: '',\n          customULink: '',\n          emailHtml: \"<!DOCTYPE html><html><head><title></title><meta name='viewport' content='width=device-width, initial-scale=1.0'><style type='text/css'>@media only screen and (max-width: 400px) !important{.iconsbit div img{width:15px !important;} }</style></head><body><div class='followus'><p style='font-size: 14px; font-family: impact; color: #2d2d52; text-align: center; margin:auto;'>FOLLOW US</p></div><div class ='iconsbit' style='border-radius: 5px;display: flex;margin:auto; width: 165px; max-width: 225px;'><div style='padding: 7px 5px; margin-right: 0px;'><a href='https://www.facebook.com/bitnautic/?ref=br_rs' target='_blank'><img src='https://image.ibb.co/f4oo5T/Facebook_icon.png' style='width:18px;'></a></div><div style='padding: 7px 5px; margin-right: 0px;'> <a href='https://www.instagram.com/bitnautic/' target='_blank'><img src='https://image.ibb.co/n6wVKo/instagram_logo.png' style='width:18px;'></a></div><div style='padding: 7px 5px; margin-right: 0px;'> <a href='https://www.linkedin.com/company/bitnautic-official/' target='_blank'><img src='https://image.ibb.co/ettAKo/linkedin_logo_1.png' style='width:18px;'></a></div><div style='padding: 7px 5px; margin-right: 0px;'> <a href='https://bitcointalk.org/index.php?topic=3351552.0' target='_blank'><img src='https://image.ibb.co/cFpvkT/Bitcointalk.png' style='width:18px;'></a></div><div style='padding: 7px 5px; margin-right: 0px;'> <a href=' https://t.me/bitnautic_group' target='_blank'><img src='https://image.ibb.co/dOZvkT/telegram1.png' style='width:18px; margin-right: 0px;'></a></div><div style='padding: 7px 4px; margin-left:0px; margin-right: auto;'> <a href='https://www.reddit.com/r/bitnautic' target='_blank'><img src='https://image.ibb.co/j2JzC8/reddit_social_logo_character.png' style='width:18px;' ></a></div></div><div class='bottom-text'> <p style='font-size:7px;color: black;top: 45%;text-align: center;'> You are receiving this email because you subscribed to the newsletter on the website <a href='https://bitnautic.io/?pk_campaign=Bitnautic_Emailer_28_06_Growth_Potential&pk_medium=sendgrid' target='_blank' >www.bitnautic.io.</a>You can <a href='<%asm_preferences_raw_url%>'>update your preferences</a> or <a href='[unsubscribe]'>unsubscribe from this list</a>.</p></div></div></body></html> \"\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(CodeCompaign, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // const { sidebarItems } = this.state\n      // const { loading, messages, sending } = this.props.campaign\n      return React.createElement(\"div\", {\n        className: \"bg-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main-content campaign-container\",\n        loading: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"campaign-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, sending ? React.createElement(ColoredButtons, {\n        className: \"pri\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      })) : React.createElement(ColoredButtons, {\n        onClick: function onClick() {\n          return _this2.exportHtml(true);\n        },\n        className: \"pri\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"Send Campaign\"))), React.createElement(\"div\", {\n        className: \"campaign-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"campaign-sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"campaign-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"fm-control block\",\n        value: this.state.dripLevelSelected,\n        onChange: function onChange(e) {\n          return _this2.handleDripLevelChange(e.currentTarget.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, \"Choose Drip Level\"), map(this.state.dripLevels, function (part, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: part.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }, part.label);\n      })))), React.createElement(\"div\", {\n        className: \"u-email-editor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, messages && React.createElement(Alert, {\n        className: \"success\",\n        onClose: function onClose() {\n          return showMessage('');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, messages), React.createElement(\"div\", {\n        className: \"d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"code-editor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, React.createElement(AceEditor, {\n        width: \"100%\",\n        height: \"100%\",\n        mode: \"html\",\n        theme: \"solarized_dark\",\n        value: this.state.emailHtml,\n        onChange: this.handleAceInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"code-preview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"code-preivew-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"preview-icons\",\n        onClick: function onClick() {\n          return _this2.switchPreview(0);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon ion-md-tv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"preview-icons\",\n        onClick: function onClick() {\n          return _this2.switchPreview(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon ion-md-phone-portrait\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"campaign-email-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"fm-email-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, \"From\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, this.state.selectedSender && this.state.selectedSender.label)), React.createElement(\"div\", {\n        className: \"fm-email-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, \"Subject\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, this.state.subject)), React.createElement(\"div\", {\n        className: \"fm-email-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, \"Preheader\"), this.state.preheader)), React.createElement(\"div\", {\n        className: \"code-preivew-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, this.state.currentPreview === 0 && React.createElement(HtmlPreview, {\n        src: this.state.emailHtml,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }), this.state.currentPreview === 1 && React.createElement(\"div\", {\n        className: \"preview-mobile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mobile-speaker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"mobile-camera\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"mobile-preview-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, React.createElement(HtmlPreview, {\n        src: this.state.emailHtml,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mobile-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      })))))))));\n    }\n  }]);\n\n  return CodeCompaign;\n}(Component);\n\nexport default ConnectComponent(CodeCompaign);","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/pages/EmailCampaign/components/codeEditor/index.js"],"names":["React","Component","map","get","isEqual","AceEditor","moment","ColoredButtons","ConnectComponent","CodeCompaign","editor","state","campaignId","sidebarItems","id","name","active","children","usg","currentPreview","emailHtml","from","subject","preheader","title","campaignName","selectedSender","selectedSendTo","selectedUsg","customULink","startDate","Date","startTime","hour","minute","isNow","dripLevels","dripLevelSelected","loadLvlOne","handleAceInput","value","setState","handleInputChange","key","handleSenderChange","sender","handleRecepientChange","r","handleUSGChange","handleDateChange","date","handleTimeChange","time","switchPreview","preview","handleDripLevelChange","params","html_content","custom_unsubscribe_url","campaign_id","email_id","getCampaignEmailDrip","loading","sending","exportHtml","e","currentTarget","part","i","label","messages","showMessage"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,OAAnB,QAAkC,QAAlC,C,CACA;;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CACA;AACA;AACA;AACA;;AACA,OAAO,iBAAP;AACA,OAAO,4BAAP;AACA,OAAO,cAAP,C,CAEA;AACA;AACA;;AACA,SAASC,cAAT,QAA+B,6BAA/B,C,CACA;AACA;;AACA,OAAOC,gBAAP,MAA6B,qBAA7B,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;IAEMC,Y;;;;;;;;;;;;;;;;;UACFC,M,GAAS,I;UACTC,K,GAAQ;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,YAAY,EAAE,CACV;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,mBAAf;AAAoCC,QAAAA,MAAM,EAAE,KAA5C;AAAmDC,QAAAA,QAAQ,EAAE;AAA7D,OADU,EAEV;AAAEH,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,WAAf;AAA4BC,QAAAA,MAAM,EAAE,KAApC;AAA2CC,QAAAA,QAAQ,EAAE,EAArD;AAAyDC,QAAAA,GAAG,EAAE;AAA9D,OAFU,EAGV;AAAEJ,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,YAAf;AAA6BC,QAAAA,MAAM,EAAE,KAArC;AAA4CC,QAAAA,QAAQ,EAAE;AAAtD,OAHU,CAFV;AAOJE,MAAAA,cAAc,EAAE,CAPZ;AAQJC,MAAAA,SAAS,EACL,ouEATA;AAUJC,MAAAA,IAAI,EAAE,EAVF;AAWJC,MAAAA,OAAO,EAAE,EAXL;AAYJC,MAAAA,SAAS,EAAE,EAZP;AAaJC,MAAAA,KAAK,EAAE,EAbH;AAcJC,MAAAA,YAAY,EAAE,UAdV;AAeJC,MAAAA,cAAc,EAAE,IAfZ;AAgBJC,MAAAA,cAAc,EAAE,EAhBZ;AAiBJC,MAAAA,WAAW,EAAE,EAjBT;AAkBJC,MAAAA,WAAW,EAAE,EAlBT;AAmBJC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,EAnBP;AAoBJC,MAAAA,SAAS,EAAE1B,MAAM,GACZ2B,IADM,CACD,CADC,EAENC,MAFM,CAEC,CAFD,CApBP;AAuBJC,MAAAA,KAAK,EAAE,IAvBH;AAwBJC,MAAAA,UAAU,EAAE,EAxBR;AAyBJC,MAAAA,iBAAiB,EAAE,EAzBf;AA0BJC,MAAAA,UAAU,EAAE,IA1BR,CA6BR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAxKQ,K;;UA0KRC,c,GAAiB,UAAAC,KAAK,EAAI;AACtB,YAAKC,QAAL,CAAc;AACVrB,QAAAA,SAAS,EAAEoB;AADD,OAAd;AAGH,K;;UAEDE,iB,GAAoB,UAACC,GAAD,EAAMH,KAAN,EAAgB;AAChC,YAAKC,QAAL,qBACKE,GADL,EACWH,KADX;AAGH,K;;UAEDI,kB,GAAqB,UAAAC,MAAM,EAAI;AAC3B,YAAKJ,QAAL,CAAc;AACVf,QAAAA,cAAc,EAAEmB;AADN,OAAd;AAGH,K;;UAEDC,qB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","sourcesContent":["import React, { Component } from 'react'\nimport { map, get, isEqual } from 'lodash'\n// import cx from 'classnames'\nimport AceEditor from 'react-ace'\n// import brace from 'brace';\nimport moment from 'moment'\n// import DayPickerInput from 'react-day-picker/DayPickerInput'\n// import TimePicker from 'rc-time-picker'\n// import 'react-day-picker/lib/style.css'\n// import 'rc-time-picker/assets/index.css'\nimport 'brace/mode/html'\nimport 'brace/theme/solarized_dark'\nimport './index.scss'\n\n// import Header from '../../../components/header'\n// import Container from '../../../components/container'\n// import Loader from '../../../components/loader'\nimport { ColoredButtons } from '../../../components/buttons'\n// import HtmlPreview from '../components/HtmlPreview'\n// import Alert from '../../../components/alert'\nimport ConnectComponent from '../../../../connect'\n// actions\n// import {\n//     fetchContactData,\n//     fetchUnsubscribeGroup,\n//     saveEmailCampaign,\n//     fetchSenders,\n//     editEmailCampaign,\n//     showMessage,\n//     getCurrentCampaign,\n//     sendEmailCampaign,\n//     getCampaignEmailDrip,\n//     updateCampaignEmailDrip,\n// } from '../../../store/actions'\n\n// import { formatRecepients, formatSenders, formatUSGroup } from '../utils'\n\nclass CodeCompaign extends Component {\n    editor = null\n    state = {\n        campaignId: '',\n        sidebarItems: [\n            { id: 0, name: 'Campaign Settings', active: false, children: [] },\n            { id: 1, name: 'Recepient', active: false, children: [], usg: [] },\n            { id: 2, name: 'Scheduling', active: false, children: [] },\n        ],\n        currentPreview: 0,\n        emailHtml:\n            \"<!DOCTYPE html><html><head><title></title><meta name='viewport' content='width=device-width, initial-scale=1.0'><style type='text/css'>@media only screen and (max-width: 400px) !important{.iconsbit div img{width:15px !important;} }</style></head><body><div class='followus'><p style='font-size: 14px; font-family: impact; color: #2d2d52; text-align: center; margin:auto;'>FOLLOW US</p></div><div class ='iconsbit' style='border-radius: 5px;display: flex;margin:auto; width: 165px; max-width: 225px;'><div style='padding: 7px 5px; margin-right: 0px;'><a href='https://www.facebook.com/bitnautic/?ref=br_rs' target='_blank'><img src='https://image.ibb.co/f4oo5T/Facebook_icon.png' style='width:18px;'></a></div><div style='padding: 7px 5px; margin-right: 0px;'> <a href='https://www.instagram.com/bitnautic/' target='_blank'><img src='https://image.ibb.co/n6wVKo/instagram_logo.png' style='width:18px;'></a></div><div style='padding: 7px 5px; margin-right: 0px;'> <a href='https://www.linkedin.com/company/bitnautic-official/' target='_blank'><img src='https://image.ibb.co/ettAKo/linkedin_logo_1.png' style='width:18px;'></a></div><div style='padding: 7px 5px; margin-right: 0px;'> <a href='https://bitcointalk.org/index.php?topic=3351552.0' target='_blank'><img src='https://image.ibb.co/cFpvkT/Bitcointalk.png' style='width:18px;'></a></div><div style='padding: 7px 5px; margin-right: 0px;'> <a href=' https://t.me/bitnautic_group' target='_blank'><img src='https://image.ibb.co/dOZvkT/telegram1.png' style='width:18px; margin-right: 0px;'></a></div><div style='padding: 7px 4px; margin-left:0px; margin-right: auto;'> <a href='https://www.reddit.com/r/bitnautic' target='_blank'><img src='https://image.ibb.co/j2JzC8/reddit_social_logo_character.png' style='width:18px;' ></a></div></div><div class='bottom-text'> <p style='font-size:7px;color: black;top: 45%;text-align: center;'> You are receiving this email because you subscribed to the newsletter on the website <a href='https://bitnautic.io/?pk_campaign=Bitnautic_Emailer_28_06_Growth_Potential&pk_medium=sendgrid' target='_blank' >www.bitnautic.io.</a>You can <a href='<%asm_preferences_raw_url%>'>update your preferences</a> or <a href='[unsubscribe]'>unsubscribe from this list</a>.</p></div></div></body></html> \",\n        from: '',\n        subject: '',\n        preheader: '',\n        title: '',\n        campaignName: 'Untitled',\n        selectedSender: null,\n        selectedSendTo: [],\n        selectedUsg: [],\n        customULink: '',\n        startDate: new Date(),\n        startTime: moment()\n            .hour(0)\n            .minute(0),\n        isNow: true,\n        dripLevels: [],\n        dripLevelSelected: '',\n        loadLvlOne: true,\n    }\n\n    // componentWillMount() {\n    //     fetchSenders()\n    //     fetchContactData()\n    //     fetchUnsubscribeGroup()\n    //     if (\n    //         this.props.match.params &&\n    //         this.props.match.params.id &&\n    //         this.props.match.params.id !== 'new'\n    //     ) {\n    //         getCurrentCampaign(this.props.match.params.id)\n    //         this.setState({\n    //             campaignId: this.props.match.params.id,\n    //         })\n    //     }\n    // }\n\n    // componentWillReceiveProps(props) {\n    //     const { campaignLevelData } = props.campaign\n    //     if (!isEqual(campaignLevelData, this.props.campaign.campaignLevelData)) {\n    //         this.setState({\n    //             emailHtml: campaignLevelData.html_content\n    //                 ? campaignLevelData.html_content\n    //                 : this.state.emailHtml,\n    //             subject: campaignLevelData.subject ? campaignLevelData.subject : '',\n    //             customULink: campaignLevelData.custom_unsubscribe_url\n    //                 ? campaignLevelData.custom_unsubscribe_url\n    //                 : '',\n    //         })\n    //     }\n    //     if (props.campaign.data && !isEqual(props.campaign.data, this.props.campaign.data)) {\n    //         let ids = get(props.campaign, 'data.email_campaign_id')\n\n    //         if (!ids) {\n    //             ids = get(props.campaign, 'data.email_campaign_ids')\n    //         }\n\n    //         this.setState({\n    //             dripLevels: map(ids, (part, i) => {\n    //                 return {\n    //                     label: `Level ${i + 1}`,\n    //                     value: part,\n    //                 }\n    //             }),\n    //             dripLevelSelected: get(ids, '[0]'),\n    //         })\n\n    //         if (this.state.loadLvlOne) {\n    //             const params = {\n    //                 campaign_id: this.state.campaignId,\n    //                 email_id: get(ids, '[0]'),\n    //             }\n    //             getCampaignEmailDrip(params)\n    //             this.setState({\n    //                 loadLvlOne: false,\n    //             })\n    //         }\n    //     }\n    //     if (props.contacts.data && props.contacts.data.length) {\n    //         this.setState(({ sidebarItems }) => {\n    //             return {\n    //                 sidebarItems: map(sidebarItems, item => {\n    //                     if (item.id === 0) {\n    //                         item.children = formatSenders(props.senders.data)\n    //                     }\n    //                     return item\n    //                 }),\n    //             }\n    //         })\n    //     }\n    //     if (props.contacts.data && props.contacts.data.length) {\n    //         this.setState(({ sidebarItems }) => {\n    //             return {\n    //                 sidebarItems: map(sidebarItems, item => {\n    //                     if (item.id === 1) {\n    //                         item.children = formatRecepients(props.contacts.data)\n    //                     }\n    //                     return item\n    //                 }),\n    //             }\n    //         })\n    //     }\n    //     if (props.unSubscribeGroup.data && props.unSubscribeGroup.data.length) {\n    //         this.setState(({ sidebarItems }) => {\n    //             return {\n    //                 sidebarItems: map(sidebarItems, item => {\n    //                     if (item.id === 1) {\n    //                         item.usg = formatUSGroup(props.unSubscribeGroup.data)\n    //                     }\n    //                     return item\n    //                 }),\n    //             }\n    //         })\n    //     }\n    // }\n\n    // exportHtml = send => {\n    //     let schedule_time = ''\n    //     const params = {\n    //         title: this.state.title,\n    //         campaign_name: this.state.campaignName,\n    //         platform_name: 'sendgrid',\n    //         suppression_group: get(this.state.selectedUsg, 'value')\n    //             ? [get(this.state.selectedUsg, 'value')]\n    //             : [],\n    //         email_group: map(this.state.selectedSendTo, p => p.id),\n    //         sender: get(this.state.selectedSender, 'value'),\n    //         subject: this.state.subject,\n    //         html_content: this.state.emailHtml,\n    //         segments: [],\n    //         // \"schedule_time\": \"\",\n    //         custom_unsubscribe_url: this.state.customULink,\n    //         is_now: this.state.isNow,\n    //     }\n\n    //     if (!this.state.isNow) {\n    //         const startDate = moment(this.state.startDate)\n    //         const startTime = this.state.startTime\n\n    //         schedule_time = `${startDate.format('YYYY-MM-DD')} ${startTime.format('hh:mm')}`\n    //     }\n\n    //     if (send) {\n    //         return sendEmailCampaign(params, this.state.campaignId, schedule_time)\n    //     }\n\n    //     if (this.props.campaign.currentCampaign) {\n    //         editEmailCampaign(this.props.campaign.currentCampaign, params)\n    //     } else {\n    //         saveEmailCampaign(params)\n    //     }\n    // }\n\n    // toggleSidebarMenu = index => {\n    //     this.setState(({ sidebarItems }) => {\n    //         sidebarItems[index].active = !sidebarItems[index].active\n    //         return {\n    //             sidebarItems: sidebarItems,\n    //         }\n    //     })\n    // }\n\n    handleAceInput = value => {\n        this.setState({\n            emailHtml: value,\n        })\n    }\n\n    handleInputChange = (key, value) => {\n        this.setState({\n            [key]: value,\n        })\n    }\n\n    handleSenderChange = sender => {\n        this.setState({\n            selectedSender: sender,\n        })\n    }\n\n    handleRecepientChange = r => {\n        this.setState({\n            selectedSendTo: r,\n        })\n    }\n\n    handleUSGChange = r => {\n        this.setState({\n            selectedUsg: r,\n        })\n    }\n\n    handleDateChange = date => {\n        this.setState({\n            startDate: date,\n        })\n    }\n\n    handleTimeChange = time => {\n        this.setState({\n            startTime: time,\n        })\n    }\n\n    switchPreview = preview => {\n        this.setState({\n            currentPreview: preview,\n        })\n    }\n\n    handleDripLevelChange = value => {\n        this.setState({\n            dripLevelSelected: value,\n        })\n\n        if (this.state.subject !== '') {\n            const params = {\n                html_content: this.state.emailHtml,\n                subject: this.state.subject,\n                custom_unsubscribe_url: this.state.customULink,\n                campaign_id: this.state.campaignId,\n                email_id: this.state.dripLevelSelected,\n            }\n            // updateCampaignEmailDrip(params)\n            params.email_id = value\n            getCampaignEmailDrip(params)\n            this.setState({\n                subject: '',\n                customULink: '',\n                emailHtml:\n                    \"<!DOCTYPE html><html><head><title></title><meta name='viewport' content='width=device-width, initial-scale=1.0'><style type='text/css'>@media only screen and (max-width: 400px) !important{.iconsbit div img{width:15px !important;} }</style></head><body><div class='followus'><p style='font-size: 14px; font-family: impact; color: #2d2d52; text-align: center; margin:auto;'>FOLLOW US</p></div><div class ='iconsbit' style='border-radius: 5px;display: flex;margin:auto; width: 165px; max-width: 225px;'><div style='padding: 7px 5px; margin-right: 0px;'><a href='https://www.facebook.com/bitnautic/?ref=br_rs' target='_blank'><img src='https://image.ibb.co/f4oo5T/Facebook_icon.png' style='width:18px;'></a></div><div style='padding: 7px 5px; margin-right: 0px;'> <a href='https://www.instagram.com/bitnautic/' target='_blank'><img src='https://image.ibb.co/n6wVKo/instagram_logo.png' style='width:18px;'></a></div><div style='padding: 7px 5px; margin-right: 0px;'> <a href='https://www.linkedin.com/company/bitnautic-official/' target='_blank'><img src='https://image.ibb.co/ettAKo/linkedin_logo_1.png' style='width:18px;'></a></div><div style='padding: 7px 5px; margin-right: 0px;'> <a href='https://bitcointalk.org/index.php?topic=3351552.0' target='_blank'><img src='https://image.ibb.co/cFpvkT/Bitcointalk.png' style='width:18px;'></a></div><div style='padding: 7px 5px; margin-right: 0px;'> <a href=' https://t.me/bitnautic_group' target='_blank'><img src='https://image.ibb.co/dOZvkT/telegram1.png' style='width:18px; margin-right: 0px;'></a></div><div style='padding: 7px 4px; margin-left:0px; margin-right: auto;'> <a href='https://www.reddit.com/r/bitnautic' target='_blank'><img src='https://image.ibb.co/j2JzC8/reddit_social_logo_character.png' style='width:18px;' ></a></div></div><div class='bottom-text'> <p style='font-size:7px;color: black;top: 45%;text-align: center;'> You are receiving this email because you subscribed to the newsletter on the website <a href='https://bitnautic.io/?pk_campaign=Bitnautic_Emailer_28_06_Growth_Potential&pk_medium=sendgrid' target='_blank' >www.bitnautic.io.</a>You can <a href='<%asm_preferences_raw_url%>'>update your preferences</a> or <a href='[unsubscribe]'>unsubscribe from this list</a>.</p></div></div></body></html> \",\n            })\n        }\n    }\n\n    render() {\n        // const { sidebarItems } = this.state\n        // const { loading, messages, sending } = this.props.campaign\n\n        return (\n            <div className=\"bg-white\">\n                {/* <Header /> */}\n                <div className=\"main-content campaign-container\" loading={loading}>\n                    <div className=\"campaign-header\">\n                        <div className=\"ml-auto\">\n                            {sending ? (\n                                <ColoredButtons className=\"pri\">\n                                    <Loader inline />\n                                </ColoredButtons>\n                            ) : (\n                                <ColoredButtons\n                                    onClick={() => this.exportHtml(true)}\n                                    className=\"pri\"\n                                >\n                                    Send Campaign\n                                </ColoredButtons>\n                            )}\n                        </div>\n                    </div>\n\n                    <div className=\"campaign-content\">\n                        <div className=\"campaign-sidebar\">\n                            <div className=\"campaign-menu\">\n                                <select\n                                    className=\"fm-control block\"\n                                    value={this.state.dripLevelSelected}\n                                    onChange={e =>\n                                        this.handleDripLevelChange(e.currentTarget.value)\n                                    }\n                                >\n                                    <option value=\"\">Choose Drip Level</option>\n                                    {map(this.state.dripLevels, (part, i) => (\n                                        <option key={i} value={part.value}>\n                                            {part.label}\n                                        </option>\n                                    ))}\n                                </select>\n                                {/* {\n                                    sidebarItems.map((item, index) => (\n                                        <div\n                                            key={index}\n                                            className={cx('menu-item', {'active': item.active})}\n                                        >\n                                            <div\n                                                className=\"item-name\"\n                                                onClick={() => this.toggleSidebarMenu(index)}\n                                            >\n                                                <div className=\"item-icon\">\n                                                    <span className=\"icon-list-expand\"></span>\n                                                </div>\n                                                <div className=\"item-text\">\n                                                    {item.name}\n                                                </div>\n                                            </div>\n                                            <div className=\"item-dropdown-list\">\n                                                {\n                                                    item.id === 0\n                                                    && <div>\n                                                        <div className=\"fm-email\">\n                                                            <label htmlFor=\"\">Email Subject</label>\n                                                            <input\n                                                                type=\"text\"\n                                                                className=\"fm-input\"\n                                                                placeholder=\"Email Subject\"\n                                                                value={this.state.subject}\n                                                                onChange={e => this.handleInputChange('subject', e.target.value)}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                }\n                                                {\n                                                    item.id === 1\n                                                    && <div>\n                                                        <div className=\"fm-email\">\n                                                            <label htmlFor=\"\">Custom Unsubscribe Link</label>\n                                                            <input\n                                                                type=\"text\"\n                                                                className=\"fm-input\"\n                                                                placeholder=\"Custom Unsubscribe Link\"\n                                                                value={this.state.customULink}\n                                                                onChange={e => this.handleInputChange('customULink', e.target.value)}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                }\n                                                {\n                                                    item.id === 2\n                                                    && <div>\n                                                        <div className=\"d-flex\">\n                                                            <div>\n                                                                SEND IMMEDIATELY\n                                                            </div>\n                                                            <div className=\"ml-auto\">\n                                                                <input\n                                                                    type=\"checkbox\"\n                                                                    value='send-immediately'\n                                                                    checked={this.state.isNow}\n                                                                    onChange={() => this.setState({ isNow: !this.state.isNow })}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        {\n                                                            !this.state.isNow &&\n                                                            <div>\n                                                                <div className=\"fm-email\">\n                                                                    <label htmlFor=\"\">Date</label>\n                                                                    <DayPickerInput\n                                                                        onDayChange={this.handleDateChange}\n                                                                        value={this.state.startDate}\n                                                                    />\n                                                                </div>\n                                                                <div className=\"fm-email\">\n                                                                    <label htmlFor=\"\">Time</label>\n                                                                    <TimePicker\n                                                                        showSecond={false}\n                                                                        format={'h:mm a'}\n                                                                        use12Hours\n                                                                        inputReadOnly\n                                                                        defaultValue={moment().hour(0).minute(0)}\n                                                                        value={this.state.startTime}\n                                                                        onChange={this.handleTimeChange}\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                        }\n                                                    </div>\n                                                }\n                                            </div>\n                                        </div>\n                                    ))\n                                } */}\n                            </div>\n                        </div>\n                        <div className=\"u-email-editor\">\n                            {messages && (\n                                <Alert className=\"success\" onClose={() => showMessage('')}>\n                                    {messages}\n                                </Alert>\n                            )}\n                            <div className=\"d-flex\">\n                                <div className=\"code-editor\">\n                                    <AceEditor\n                                        width=\"100%\"\n                                        height=\"100%\"\n                                        mode=\"html\"\n                                        theme=\"solarized_dark\"\n                                        value={this.state.emailHtml}\n                                        onChange={this.handleAceInput}\n                                    />\n                                </div>\n                                <div className=\"code-preview\">\n                                    <div className=\"code-preivew-header\">\n                                        <div\n                                            className=\"preview-icons\"\n                                            onClick={() => this.switchPreview(0)}\n                                        >\n                                            <i className=\"icon ion-md-tv\" />\n                                        </div>\n                                        <div\n                                            className=\"preview-icons\"\n                                            onClick={() => this.switchPreview(1)}\n                                        >\n                                            <i className=\"icon ion-md-phone-portrait\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"campaign-email-form\">\n                                        <div className=\"fm-email-group\">\n                                            <label htmlFor=\"\">From</label>\n                                            <div>\n                                                {this.state.selectedSender &&\n                                                    this.state.selectedSender.label}\n                                            </div>\n                                        </div>\n                                        <div className=\"fm-email-group\">\n                                            <label htmlFor=\"\">Subject</label>\n                                            <div>{this.state.subject}</div>\n                                        </div>\n                                        <div className=\"fm-email-group\">\n                                            <label htmlFor=\"\">Preheader</label>\n                                            {this.state.preheader}\n                                        </div>\n                                    </div>\n                                    <div className=\"code-preivew-body\">\n                                        {this.state.currentPreview === 0 && (\n                                            <HtmlPreview src={this.state.emailHtml} />\n                                        )}\n                                        {this.state.currentPreview === 1 && (\n                                            <div className=\"preview-mobile\">\n                                                <div className=\"mobile-speaker\" />\n                                                <div className=\"mobile-camera\" />\n                                                <div className=\"mobile-preview-content\">\n                                                    <HtmlPreview src={this.state.emailHtml} />\n                                                </div>\n                                                <div className=\"mobile-button\" />\n                                            </div>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ConnectComponent(CodeCompaign)\n"]},"metadata":{},"sourceType":"module"}