{"ast":null,"code":"import _classCallCheck from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chahanatyagi/Work/cm-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chahanatyagi/Work/cm-frontend/src/pages/SMSCampaign/Components/steps/inputwithEmoji.js\";\nimport React, { Component } from 'react';\nimport './index.scss';\nimport 'emoji-mart/css/emoji-mart.css';\nimport { Picker } from 'emoji-mart';\n\nvar EmojiInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EmojiInput, _Component);\n\n  function EmojiInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EmojiInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EmojiInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      emojiShow: false\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        message: e.target.value\n      });\n    };\n\n    _this.addEmoji = function (e) {\n      console.log(e, 'ererererer');\n\n      if (e.unified.length <= 5) {\n        var emojiPic = String.fromCodePoint(\"0x\".concat(e.unified));\n\n        _this.setState({\n          message: _this.state.message + emojiPic\n        });\n      } else {\n        var sym = e.unified.split('-');\n        var codesArray = [];\n        sym.forEach(function (el) {\n          return codesArray.push('0x' + el);\n        }); //console.log(codesArray.length)\n        //console.log(codesArray)  // [\"0x1f3f3\", \"0xfe0f\"]\n\n        var _emojiPic = String.fromCodePoint.apply(String, codesArray);\n\n        _this.setState({\n          message: _this.state.message + _emojiPic\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(EmojiInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var emojiShow = this.state.emojiShow;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"text-area\",\n        value: this.props.message,\n        onChange: this.handleChange,\n        placeholder: \"Please type your message here.....\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"flex-space-bt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"/300\"), React.createElement(\"span\", {\n        className: \"text-count\",\n        onClick: function onClick() {\n          return _this2.setState({\n            emojiShow: !emojiShow\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Picker, {\n        onSelect: this.addEmoji,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return EmojiInput;\n}(Component);\n\nexport default EmojiInput;","map":{"version":3,"sources":["/Users/chahanatyagi/Work/cm-frontend/src/pages/SMSCampaign/Components/steps/inputwithEmoji.js"],"names":["React","Component","Picker","EmojiInput","state","emojiShow","handleChange","e","setState","message","target","value","addEmoji","console","log","unified","length","emojiPic","String","fromCodePoint","sym","split","codesArray","forEach","el","push","props"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,OAAO,+BAAP;AACA,SAASC,MAAT,QAAuB,YAAvB;;IAEMC,U;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,SAAS,EAAE;AADP,K;;UAGRC,Y,GAAe,UAAAC,CAAC,EAAI;AAChB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAEF,CAAC,CAACG,MAAF,CAASC;AAApB,OAAd;AACH,K;;UAEDC,Q,GAAW,UAAAL,CAAC,EAAI;AACZM,MAAAA,OAAO,CAACC,GAAR,CAAYP,CAAZ,EAAe,YAAf;;AACA,UAAIA,CAAC,CAACQ,OAAF,CAAUC,MAAV,IAAoB,CAAxB,EAA2B;AACvB,YAAIC,QAAQ,GAAGC,MAAM,CAACC,aAAP,aAA0BZ,CAAC,CAACQ,OAA5B,EAAf;;AACA,cAAKP,QAAL,CAAc;AACVC,UAAAA,OAAO,EAAE,MAAKL,KAAL,CAAWK,OAAX,GAAqBQ;AADpB,SAAd;AAGH,OALD,MAKO;AACH,YAAIG,GAAG,GAAGb,CAAC,CAACQ,OAAF,CAAUM,KAAV,CAAgB,GAAhB,CAAV;AACA,YAAIC,UAAU,GAAG,EAAjB;AACAF,QAAAA,GAAG,CAACG,OAAJ,CAAY,UAAAC,EAAE;AAAA,iBAAIF,UAAU,CAACG,IAAX,CAAgB,OAAOD,EAAvB,CAAJ;AAAA,SAAd,EAHG,CAIH;AACA;;AACA,YAAIP,SAAQ,GAAGC,MAAM,CAACC,aAAP,OAAAD,MAAM,EAAkBI,UAAlB,CAArB;;AACA,cAAKd,QAAL,CAAc;AACVC,UAAAA,OAAO,EAAE,MAAKL,KAAL,CAAWK,OAAX,GAAqBQ;AADpB,SAAd;AAGH;AACJ,K;;;;;;;6BAEQ;AAAA;;AAAA,UACGZ,SADH,GACiB,KAAKD,KADtB,CACGC,SADH;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,WAFd;AAGI,QAAA,KAAK,EAAE,KAAKqB,KAAL,CAAWjB,OAHtB;AAII,QAAA,QAAQ,EAAE,KAAKH,YAJnB;AAKI,QAAA,WAAW,EAAC,oCALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAQI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AACI,QAAA,SAAS,EAAC,YADd;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACE,QAAL,CAAc;AAAEH,YAAAA,SAAS,EAAE,CAACA;AAAd,WAAd,CAAN;AAAA,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,KAAKO,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CAFJ,CARJ,CADJ;AAoBH;;;;EAlDoBX,S;;AAqDzB,eAAeE,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport './index.scss'\nimport 'emoji-mart/css/emoji-mart.css'\nimport { Picker } from 'emoji-mart'\n\nclass EmojiInput extends Component {\n    state = {\n        emojiShow: false,\n    }\n    handleChange = e => {\n        this.setState({ message: e.target.value })\n    }\n\n    addEmoji = e => {\n        console.log(e, 'ererererer')\n        if (e.unified.length <= 5) {\n            let emojiPic = String.fromCodePoint(`0x${e.unified}`)\n            this.setState({\n                message: this.state.message + emojiPic,\n            })\n        } else {\n            let sym = e.unified.split('-')\n            let codesArray = []\n            sym.forEach(el => codesArray.push('0x' + el))\n            //console.log(codesArray.length)\n            //console.log(codesArray)  // [\"0x1f3f3\", \"0xfe0f\"]\n            let emojiPic = String.fromCodePoint(...codesArray)\n            this.setState({\n                message: this.state.message + emojiPic,\n            })\n        }\n    }\n\n    render() {\n        const { emojiShow } = this.state\n        return (\n            <div>\n                <input\n                    type=\"text\"\n                    className=\"text-area\"\n                    value={this.props.message}\n                    onChange={this.handleChange}\n                    placeholder=\"Please type your message here.....\"\n                />\n                <div className=\"flex-space-bt\">\n                    <span className=\"text-count\">/300</span>\n                    <span\n                        className=\"text-count\"\n                        onClick={() => this.setState({ emojiShow: !emojiShow })}\n                    >\n                        <Picker onSelect={this.addEmoji} />\n                    </span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default EmojiInput\n"]},"metadata":{},"sourceType":"module"}